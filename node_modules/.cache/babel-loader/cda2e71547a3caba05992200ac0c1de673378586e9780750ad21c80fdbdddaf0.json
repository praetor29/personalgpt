{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createThemeProvider = exports.useStyles = exports.makeStyles = exports.useIsThemeProvided = exports.ViewPortOutOfRangeError = exports.useBrowserFontSizeFactor = exports.useWindowInnerSize = exports.useDomRect = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nrequire(\"minimal-polyfills/Object.fromEntries\");\nvar react_1 = require(\"react\");\nvar CssBaseline_1 = __importDefault(require(\"@mui/material/CssBaseline\"));\nvar ScopedCssBaseline_1 = __importDefault(require(\"@mui/material/ScopedCssBaseline\"));\nvar styles_1 = require(\"@mui/material/styles\");\nvar styles_2 = require(\"@mui/material/styles\");\nvar useWindowInnerSize_1 = require(\"powerhooks/useWindowInnerSize\");\nObject.defineProperty(exports, \"useWindowInnerSize\", {\n  enumerable: true,\n  get: function () {\n    return useWindowInnerSize_1.useWindowInnerSize;\n  }\n});\nvar color_1 = require(\"./color\");\nvar typography_1 = require(\"./typography\");\nvar color_2 = require(\"./color\");\nvar shadows_1 = require(\"./shadows\");\nvar useBrowserFontSizeFactor_1 = require(\"powerhooks/useBrowserFontSizeFactor\");\nObject.defineProperty(exports, \"useBrowserFontSizeFactor\", {\n  enumerable: true,\n  get: function () {\n    return useBrowserFontSizeFactor_1.useBrowserFontSizeFactor;\n  }\n});\nvar spacing_1 = require(\"./spacing\");\nvar compat_1 = require(\"tss-react/compat\");\nvar icon_1 = require(\"./icon\");\nvar SplashScreen_1 = require(\"./SplashScreen\");\nvar ViewPortAdapter_1 = require(\"powerhooks/ViewPortAdapter\");\nObject.defineProperty(exports, \"ViewPortOutOfRangeError\", {\n  enumerable: true,\n  get: function () {\n    return ViewPortAdapter_1.ViewPortOutOfRangeError;\n  }\n});\nvar memoizee_1 = __importDefault(require(\"memoizee\"));\nvar id_1 = require(\"tsafe/id\");\nvar breakpoints_1 = require(\"./breakpoints\");\nvar capitalize_1 = require(\"tsafe/capitalize\");\nvar useGuaranteedMemo_1 = require(\"powerhooks/useGuaranteedMemo\");\nvar useIsDarkModeEnabled_1 = require(\"./useIsDarkModeEnabled\");\nvar useDomRect_1 = require(\"powerhooks/useDomRect\");\nObject.defineProperty(exports, \"useDomRect\", {\n  enumerable: true,\n  get: function () {\n    return useDomRect_1.useDomRect;\n  }\n});\nvar themeBaseContext = (0, react_1.createContext)(undefined);\nvar isDarkModeEnabledOverrideContext = (0, react_1.createContext)(undefined);\n/** Used internally, do not export globally */\nfunction useIsThemeProvided() {\n  var theme = (0, react_1.useContext)(themeBaseContext);\n  return theme !== undefined;\n}\nexports.useIsThemeProvided = useIsThemeProvided;\nfunction useThemeBase() {\n  var theme = (0, react_1.useContext)(themeBaseContext);\n  if (theme === undefined) {\n    throw new Error(\"Your app should be wrapped into ThemeProvider\");\n  }\n  return theme;\n}\nexports.makeStyles = (_a = (0, compat_1.createMakeStyles)({\n  \"useTheme\": useThemeBase\n}), _a.makeStyles), exports.useStyles = _a.useStyles;\nfunction createThemeProvider(params) {\n  var _a = params.palette,\n    palette = _a === void 0 ? color_1.defaultPalette : _a,\n    _b = params.createColorUseCases,\n    createColorUseCases = _b === void 0 ? color_1.createDefaultColorUseCases : _b,\n    _c = params.getTypographyDesc,\n    getTypographyDesc = _c === void 0 ? typography_1.defaultGetTypographyDesc : _c,\n    _d = params.isReactStrictModeEnabled,\n    isReactStrictModeEnabled = _d === void 0 ? false : _d,\n    _e = params.spacingConfig,\n    spacingConfig = _e === void 0 ? spacing_1.defaultSpacingConfig : _e,\n    defaultIsDarkModeEnabled = params.defaultIsDarkModeEnabled,\n    _f = params.getIconSizeInPx,\n    getIconSizeInPx = _f === void 0 ? icon_1.defaultGetIconSizeInPx : _f;\n  if (defaultIsDarkModeEnabled !== undefined) {\n    useIsDarkModeEnabled_1.evtIsDarkModeEnabled.state = defaultIsDarkModeEnabled;\n  }\n  var useTheme = function () {\n    var createTheme = (0, memoizee_1.default)(function (isDarkModeEnabled, windowInnerWidth, windowInnerHeight, browserFontSizeFactor) {\n      var typographyDesc = getTypographyDesc({\n        windowInnerWidth: windowInnerWidth,\n        windowInnerHeight: windowInnerHeight,\n        browserFontSizeFactor: browserFontSizeFactor\n      });\n      var useCases = createColorUseCases({\n        palette: palette,\n        isDarkModeEnabled: isDarkModeEnabled\n      });\n      var spacing = function (factorOrExplicitNumberOfPx) {\n        return spacingConfig({\n          factorOrExplicitNumberOfPx: factorOrExplicitNumberOfPx,\n          windowInnerWidth: windowInnerWidth,\n          \"rootFontSizePx\": typographyDesc.rootFontSizePx\n        });\n      };\n      return (0, id_1.id)(__assign(__assign({\n        \"colors\": {\n          palette: palette,\n          useCases: useCases\n        },\n        \"typography\": (0, typography_1.getComputedTypography)({\n          typographyDesc: typographyDesc\n        }),\n        isDarkModeEnabled: isDarkModeEnabled,\n        shadows: shadows_1.shadows\n      }, function () {\n        var muiTheme = (isReactStrictModeEnabled ? styles_2.unstable_createMuiStrictModeTheme : styles_2.createTheme)({\n          // https://material-ui.com/customization/palette/#using-a-color-object\n          \"typography\": (0, typography_1.createMuiTypographyOptions)({\n            typographyDesc: typographyDesc\n          }),\n          \"palette\": (0, color_2.createMuiPaletteOptions)({\n            isDarkModeEnabled: isDarkModeEnabled,\n            palette: palette,\n            useCases: useCases\n          }),\n          spacing: spacing,\n          \"breakpoints\": {\n            \"values\": __assign({\n              \"xs\": 0\n            }, breakpoints_1.breakpointsValues)\n          },\n          \"components\": {\n            \"MuiLink\": {\n              \"defaultProps\": {\n                \"underline\": \"hover\"\n              }\n            }\n          }\n        });\n        return {\n          \"spacing\": function () {\n            var toFinalValue = function (value) {\n              return typeof value === \"number\" ? \"\".concat(spacing(value), \"px\") : value;\n            };\n            var out = function (valueOrObject) {\n              if (typeof valueOrObject === \"number\") {\n                return spacing(valueOrObject);\n              }\n              var rightLeft = valueOrObject.rightLeft,\n                topBottom = valueOrObject.topBottom;\n              return [topBottom, rightLeft, topBottom, rightLeft].map(toFinalValue).join(\" \");\n            };\n            var f = function (params) {\n              var axis = params.axis,\n                kind = params.kind,\n                value = params.value;\n              var finalValue = typeof value === \"number\" ? \"\".concat(spacing(value), \"px\") : value;\n              return Object.fromEntries(function () {\n                switch (axis) {\n                  case \"horizontal\":\n                    return [\"left\", \"right\"];\n                  case \"vertical\":\n                    return [\"top\", \"bottom\"];\n                }\n              }().map(function (direction) {\n                return [\"\".concat(kind).concat((0, capitalize_1.capitalize)(direction)), finalValue];\n              }));\n            };\n            out.rightLeft = function (kind, value) {\n              return f({\n                \"axis\": \"horizontal\",\n                kind: kind,\n                value: value\n              });\n            };\n            out.topBottom = function (kind, value) {\n              return f({\n                \"axis\": \"vertical\",\n                kind: kind,\n                value: value\n              });\n            };\n            return out;\n          }(),\n          muiTheme: muiTheme\n        };\n      }()), {\n        \"iconSizesInPxByName\": (0, icon_1.getIconSizesInPxByName)({\n          getIconSizeInPx: getIconSizeInPx,\n          windowInnerWidth: windowInnerWidth,\n          \"rootFontSizePx\": typographyDesc.rootFontSizePx\n        }),\n        windowInnerWidth: windowInnerWidth\n      }));\n    }, {\n      \"max\": 1\n    });\n    function useTheme() {\n      var isDarkModeEnabled = (0, useIsDarkModeEnabled_1.useIsDarkModeEnabled)().isDarkModeEnabled;\n      var _a = (0, useWindowInnerSize_1.useWindowInnerSize)(),\n        windowInnerWidth = _a.windowInnerWidth,\n        windowInnerHeight = _a.windowInnerHeight;\n      var browserFontSizeFactor = (0, useBrowserFontSizeFactor_1.useBrowserFontSizeFactor)().browserFontSizeFactor;\n      var isDarkModeEnabledOverride = (0, react_1.useContext)(isDarkModeEnabledOverrideContext);\n      return createTheme(isDarkModeEnabledOverride !== null && isDarkModeEnabledOverride !== void 0 ? isDarkModeEnabledOverride : isDarkModeEnabled, windowInnerWidth, windowInnerHeight, browserFontSizeFactor);\n    }\n    return {\n      useTheme: useTheme\n    };\n  }().useTheme;\n  var SplashScreen = (0, SplashScreen_1.createSplashScreen)({\n    useTheme: useTheme\n  }).SplashScreen;\n  var ThemeProvider = function () {\n    function ThemeProviderWithinViewPortAdapter(props) {\n      var splashScreen = props.splashScreen,\n        children = props.children;\n      var theme = useTheme();\n      {\n        var backgroundColor_1 = theme.colors.useCases.surfaces.background;\n        (0, react_1.useEffect)(function () {\n          var _a;\n          (_a = document.querySelector(\"meta[name=theme-color]\")) === null || _a === void 0 ? void 0 : _a.remove();\n          document.head.insertAdjacentHTML(\"beforeend\", \"<meta name=\\\"theme-color\\\" content=\\\"\".concat(backgroundColor_1, \"\\\">\"));\n        }, [backgroundColor_1]);\n      }\n      var isStoryProvider = (0, react_1.useContext)(isDarkModeEnabledOverrideContext) !== undefined;\n      // prettier-ignore\n      var CssBaselineOrScopedCssBaseline = (0, useGuaranteedMemo_1.useGuaranteedMemo)(function () {\n        return isStoryProvider ? function (_a) {\n          var children = _a.children;\n          return (0, jsx_runtime_1.jsx)(ScopedCssBaseline_1.default, {\n            children: children\n          });\n        } : function (_a) {\n          var children = _a.children;\n          return (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {\n            children: [(0, jsx_runtime_1.jsx)(CssBaseline_1.default, {}), children]\n          });\n        };\n      }, [isStoryProvider]);\n      // prettier-ignore\n      var SplashScreenOrId = (0, useGuaranteedMemo_1.useGuaranteedMemo)(function () {\n        return splashScreen === undefined ? function (_a) {\n          var children = _a.children;\n          return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {\n            children: children\n          });\n        } : function (_a) {\n          var children = _a.children;\n          return (0, jsx_runtime_1.jsx)(SplashScreen, __assign({}, splashScreen, {\n            children: children\n          }));\n        };\n      }, [splashScreen]);\n      return (0, jsx_runtime_1.jsx)(themeBaseContext.Provider, __assign({\n        value: theme\n      }, {\n        children: (0, jsx_runtime_1.jsx)(styles_1.ThemeProvider, __assign({\n          theme: theme.muiTheme\n        }, {\n          children: (0, jsx_runtime_1.jsx)(CssBaselineOrScopedCssBaseline, {\n            children: (0, jsx_runtime_1.jsx)(SplashScreenOrId, {\n              children: children\n            })\n          })\n        }))\n      }));\n    }\n    function ThemeProvider(props) {\n      var getViewPortConfig = props.getViewPortConfig,\n        children = props.children,\n        splashScreen = props.splashScreen;\n      // prettier-ignore\n      var ViewPortAdapterOrId = (0, useGuaranteedMemo_1.useGuaranteedMemo)(function () {\n        return getViewPortConfig === undefined ? function (_a) {\n          var children = _a.children;\n          return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {\n            children: children\n          });\n        } : function (_a) {\n          var children = _a.children;\n          return (0, jsx_runtime_1.jsx)(ViewPortAdapter_1.ViewPortAdapter, __assign({\n            getConfig: getViewPortConfig\n          }, {\n            children: children\n          }));\n        };\n      }, [getViewPortConfig]);\n      return (0, jsx_runtime_1.jsx)(ViewPortAdapterOrId, {\n        children: (0, jsx_runtime_1.jsx)(ThemeProviderWithinViewPortAdapter, __assign({\n          splashScreen: splashScreen\n        }, {\n          children: children\n        }))\n      });\n    }\n    return {\n      ThemeProvider: ThemeProvider\n    };\n  }().ThemeProvider;\n  function StoryProvider(props) {\n    var _a = props.dark,\n      dark = _a === void 0 ? false : _a,\n      children = props.children;\n    (0, react_1.useEffect)(function () {\n      useIsDarkModeEnabled_1.evtIsDarkModeEnabled.state = dark;\n    }, [dark]);\n    return (0, jsx_runtime_1.jsx)(isDarkModeEnabledOverrideContext.Provider, __assign({\n      value: dark\n    }, {\n      children: (0, jsx_runtime_1.jsx)(ThemeProvider, {\n        children: children\n      })\n    }));\n  }\n  return {\n    ThemeProvider: ThemeProvider,\n    useTheme: useTheme,\n    StoryProvider: StoryProvider\n  };\n}\nexports.createThemeProvider = createThemeProvider;","map":{"version":3,"names":["require","react_1","CssBaseline_1","__importDefault","ScopedCssBaseline_1","styles_1","styles_2","useWindowInnerSize_1","Object","defineProperty","exports","enumerable","get","useWindowInnerSize","color_1","typography_1","color_2","shadows_1","useBrowserFontSizeFactor_1","useBrowserFontSizeFactor","spacing_1","compat_1","icon_1","SplashScreen_1","ViewPortAdapter_1","ViewPortOutOfRangeError","memoizee_1","id_1","breakpoints_1","capitalize_1","useGuaranteedMemo_1","useIsDarkModeEnabled_1","useDomRect_1","useDomRect","themeBaseContext","createContext","undefined","isDarkModeEnabledOverrideContext","useIsThemeProvided","theme","useContext","useThemeBase","Error","makeStyles","_a","createMakeStyles","useStyles","createThemeProvider","params","palette","defaultPalette","_b","createColorUseCases","createDefaultColorUseCases","_c","getTypographyDesc","defaultGetTypographyDesc","_d","isReactStrictModeEnabled","_e","spacingConfig","defaultSpacingConfig","defaultIsDarkModeEnabled","_f","getIconSizeInPx","defaultGetIconSizeInPx","evtIsDarkModeEnabled","state","useTheme","createTheme","default","isDarkModeEnabled","windowInnerWidth","windowInnerHeight","browserFontSizeFactor","typographyDesc","useCases","spacing","factorOrExplicitNumberOfPx","rootFontSizePx","id","__assign","getComputedTypography","shadows","muiTheme","unstable_createMuiStrictModeTheme","createMuiTypographyOptions","createMuiPaletteOptions","breakpointsValues","toFinalValue","value","concat","out","valueOrObject","rightLeft","topBottom","map","join","f","axis","kind","finalValue","fromEntries","direction","capitalize","getIconSizesInPxByName","useIsDarkModeEnabled","isDarkModeEnabledOverride","SplashScreen","createSplashScreen","ThemeProvider","ThemeProviderWithinViewPortAdapter","props","splashScreen","children","backgroundColor_1","colors","surfaces","background","useEffect","document","querySelector","remove","head","insertAdjacentHTML","isStoryProvider","CssBaselineOrScopedCssBaseline","useGuaranteedMemo","jsx_runtime_1","jsx","jsxs","Fragment","SplashScreenOrId","Provider","getViewPortConfig","ViewPortAdapterOrId","ViewPortAdapter","getConfig","StoryProvider","dark"],"sources":["C:\\Users\\prana\\repos\\personalgpt\\.yarn\\__virtual__\\onyxia-ui-virtual-5c2a1ec994\\3\\AppData\\Local\\Yarn\\Berry\\cache\\onyxia-ui-npm-0.47.23-cc0c9aaf2a-10c0.zip\\node_modules\\onyxia-ui\\src\\lib\\ThemeProvider.tsx"],"sourcesContent":["import \"minimal-polyfills/Object.fromEntries\";\nimport { useContext, createContext, useEffect } from \"react\";\nimport type { ReactNode } from \"react\";\nimport type { Theme as MuiTheme } from \"@mui/material\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport ScopedCssBaseline from \"@mui/material/ScopedCssBaseline\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\nimport {\n    createTheme as createMuiTheme,\n    unstable_createMuiStrictModeTheme,\n} from \"@mui/material/styles\";\nimport { useWindowInnerSize } from \"powerhooks/useWindowInnerSize\";\nimport type {\n    PaletteBase,\n    ColorUseCasesBase,\n    CreateColorUseCase,\n} from \"./color\";\nimport { defaultPalette, createDefaultColorUseCases } from \"./color\";\nimport type { ComputedTypography, GetTypographyDesc } from \"./typography\";\nimport {\n    defaultGetTypographyDesc,\n    createMuiTypographyOptions,\n    getComputedTypography,\n} from \"./typography\";\nimport { createMuiPaletteOptions } from \"./color\";\nimport { shadows } from \"./shadows\";\nimport { useBrowserFontSizeFactor } from \"powerhooks/useBrowserFontSizeFactor\";\nimport { defaultSpacingConfig } from \"./spacing\";\nimport type { SpacingConfig, Spacing } from \"./spacing\";\nimport { createMakeStyles } from \"tss-react/compat\";\nimport type { IconSizeName, GetIconSizeInPx } from \"./icon\";\nimport { defaultGetIconSizeInPx, getIconSizesInPxByName } from \"./icon\";\nimport { createSplashScreen } from \"./SplashScreen\";\nimport type { SplashScreenProps } from \"./SplashScreen\";\nimport {\n    ViewPortAdapter,\n    ViewPortOutOfRangeError,\n} from \"powerhooks/ViewPortAdapter\";\nimport type { ViewPortAdapterProps } from \"powerhooks/ViewPortAdapter\";\nimport memoize from \"memoizee\";\nimport { id } from \"tsafe/id\";\nimport { breakpointsValues } from \"./breakpoints\";\nimport { capitalize } from \"tsafe/capitalize\";\nimport { useGuaranteedMemo } from \"powerhooks/useGuaranteedMemo\";\nimport {\n    useIsDarkModeEnabled,\n    evtIsDarkModeEnabled,\n} from \"./useIsDarkModeEnabled\";\n\nexport { useDomRect } from \"powerhooks/useDomRect\";\nexport { useWindowInnerSize, useBrowserFontSizeFactor };\nexport { ViewPortOutOfRangeError };\nimport type { ReactComponent } from \"../tools/ReactComponent\";\n\nexport type Theme<\n    Palette extends PaletteBase = PaletteBase,\n    ColorUseCases extends ColorUseCasesBase = ColorUseCasesBase,\n    CustomTypographyVariantName extends string = never,\n> = {\n    colors: {\n        palette: Palette;\n        useCases: ColorUseCases;\n    };\n    isDarkModeEnabled: boolean;\n    typography: ComputedTypography<CustomTypographyVariantName>;\n    shadows: typeof shadows;\n    spacing: Spacing;\n    muiTheme: MuiTheme;\n    iconSizesInPxByName: Record<IconSizeName, number>;\n    windowInnerWidth: number;\n};\n\nconst themeBaseContext = createContext<Theme | undefined>(undefined);\nconst isDarkModeEnabledOverrideContext = createContext<boolean | undefined>(\n    undefined,\n);\n\n/** Used internally, do not export globally */\n\nexport function useIsThemeProvided(): boolean {\n    const theme = useContext(themeBaseContext);\n\n    return theme !== undefined;\n}\n\nfunction useThemeBase() {\n    const theme = useContext(themeBaseContext);\n\n    if (theme === undefined) {\n        throw new Error(\"Your app should be wrapped into ThemeProvider\");\n    }\n\n    return theme;\n}\n\nexport const { makeStyles, useStyles } = createMakeStyles({\n    \"useTheme\": useThemeBase,\n});\n\nexport type ThemeProviderProps = {\n    children: ReactNode;\n    /** NOTE: Each time the callback's ref update the\n     * the callback will be invoked again, it's best\n     * a cont callback */\n    getViewPortConfig?: ViewPortAdapterProps[\"getConfig\"];\n    splashScreen?: Omit<SplashScreenProps, \"children\">;\n};\n\nexport declare namespace ThemeProviderProps {\n    type WithChildren = {\n        children: ReactNode;\n    };\n\n    export type WithZoom = {\n        zoomProviderReferenceWidth?: number;\n\n        /**\n         * Message to display when portrait mode, example:\n         *    This app isn't compatible with landscape mode yet,\n         *    please enable the rotation sensor and flip your phone.\n         */\n        portraitModeUnsupportedMessage?: ReactNode;\n    } & WithChildren;\n\n    export type WithoutZoom = WithChildren;\n}\n\nexport function createThemeProvider<\n    Palette extends PaletteBase = PaletteBase,\n    ColorUseCases extends ColorUseCasesBase = ColorUseCasesBase,\n    CustomTypographyVariantName extends string = never,\n>(params: {\n    isReactStrictModeEnabled?: boolean;\n    getTypographyDesc?: GetTypographyDesc<CustomTypographyVariantName>;\n    palette?: Palette;\n    createColorUseCases?: CreateColorUseCase<Palette, ColorUseCases>;\n    spacingConfig?: SpacingConfig;\n    defaultIsDarkModeEnabled?: boolean;\n    getIconSizeInPx?: GetIconSizeInPx;\n    /** Default true */\n}) {\n    const {\n        palette = defaultPalette as NonNullable<typeof params[\"palette\"]>,\n        createColorUseCases = createDefaultColorUseCases as unknown as NonNullable<\n            typeof params[\"createColorUseCases\"]\n        >,\n        getTypographyDesc = defaultGetTypographyDesc as NonNullable<\n            typeof params[\"getTypographyDesc\"]\n        >,\n        isReactStrictModeEnabled = false,\n        spacingConfig = defaultSpacingConfig,\n        defaultIsDarkModeEnabled,\n        getIconSizeInPx = defaultGetIconSizeInPx,\n    } = params;\n\n    if (defaultIsDarkModeEnabled !== undefined) {\n        evtIsDarkModeEnabled.state = defaultIsDarkModeEnabled;\n    }\n\n    const { useTheme } = (() => {\n        const createTheme = memoize(\n            (\n                isDarkModeEnabled: boolean,\n                windowInnerWidth: number,\n                windowInnerHeight: number,\n                browserFontSizeFactor: number,\n            ) => {\n                const typographyDesc = getTypographyDesc({\n                    windowInnerWidth,\n                    windowInnerHeight,\n                    browserFontSizeFactor,\n                });\n                const useCases = createColorUseCases({\n                    palette,\n                    isDarkModeEnabled,\n                });\n\n                const spacing = (\n                    factorOrExplicitNumberOfPx: number | `${number}px`,\n                ) =>\n                    spacingConfig({\n                        factorOrExplicitNumberOfPx,\n                        windowInnerWidth,\n                        \"rootFontSizePx\": typographyDesc.rootFontSizePx,\n                    });\n\n                return id<\n                    Theme<Palette, ColorUseCases, CustomTypographyVariantName>\n                >({\n                    \"colors\": { palette, useCases },\n                    \"typography\": getComputedTypography({ typographyDesc }),\n                    isDarkModeEnabled,\n                    shadows,\n                    ...(() => {\n                        const muiTheme = (\n                            isReactStrictModeEnabled\n                                ? unstable_createMuiStrictModeTheme\n                                : createMuiTheme\n                        )({\n                            // https://material-ui.com/customization/palette/#using-a-color-object\n                            \"typography\": createMuiTypographyOptions({\n                                typographyDesc,\n                            }),\n                            \"palette\": createMuiPaletteOptions({\n                                isDarkModeEnabled,\n                                palette,\n                                useCases,\n                            }),\n                            spacing,\n                            \"breakpoints\": {\n                                \"values\": { \"xs\": 0, ...breakpointsValues },\n                            },\n                            \"components\": {\n                                \"MuiLink\": {\n                                    \"defaultProps\": {\n                                        \"underline\": \"hover\",\n                                    },\n                                },\n                            },\n                        });\n\n                        return {\n                            \"spacing\": (() => {\n                                const toFinalValue = (value: number | string) =>\n                                    typeof value === \"number\"\n                                        ? `${spacing(value)}px`\n                                        : value;\n\n                                const out = ((\n                                    valueOrObject:\n                                        | number\n                                        | Record<\n                                              \"topBottom\" | \"rightLeft\",\n                                              number | string\n                                          >,\n                                ): string | number => {\n                                    if (typeof valueOrObject === \"number\") {\n                                        return spacing(valueOrObject);\n                                    }\n\n                                    const { rightLeft, topBottom } =\n                                        valueOrObject;\n\n                                    return [\n                                        topBottom,\n                                        rightLeft,\n                                        topBottom,\n                                        rightLeft,\n                                    ]\n                                        .map(toFinalValue)\n                                        .join(\" \");\n                                }) as any as Spacing;\n\n                                const f = (params: {\n                                    axis: \"vertical\" | \"horizontal\";\n                                    kind: \"padding\" | \"margin\";\n                                    value: number | string;\n                                }): Record<string, string> => {\n                                    const { axis, kind, value } = params;\n\n                                    const finalValue =\n                                        typeof value === \"number\"\n                                            ? `${spacing(value)}px`\n                                            : value;\n\n                                    return Object.fromEntries(\n                                        (() => {\n                                            switch (axis) {\n                                                case \"horizontal\":\n                                                    return [\"left\", \"right\"];\n                                                case \"vertical\":\n                                                    return [\"top\", \"bottom\"];\n                                            }\n                                        })().map(direction => [\n                                            `${kind}${capitalize(direction)}`,\n                                            finalValue,\n                                        ]),\n                                    );\n                                };\n\n                                out.rightLeft = (kind, value) =>\n                                    f({ \"axis\": \"horizontal\", kind, value });\n                                out.topBottom = (kind, value) =>\n                                    f({ \"axis\": \"vertical\", kind, value });\n\n                                return out;\n                            })(),\n                            muiTheme,\n                        };\n                    })(),\n                    \"iconSizesInPxByName\": getIconSizesInPxByName({\n                        getIconSizeInPx,\n                        windowInnerWidth,\n                        \"rootFontSizePx\": typographyDesc.rootFontSizePx,\n                    }),\n                    windowInnerWidth,\n                });\n            },\n            { \"max\": 1 },\n        );\n\n        function useTheme() {\n            const { isDarkModeEnabled } = useIsDarkModeEnabled();\n            const { windowInnerWidth, windowInnerHeight } =\n                useWindowInnerSize();\n            const { browserFontSizeFactor } = useBrowserFontSizeFactor();\n\n            const isDarkModeEnabledOverride = useContext(\n                isDarkModeEnabledOverrideContext,\n            );\n\n            return createTheme(\n                isDarkModeEnabledOverride ?? isDarkModeEnabled,\n                windowInnerWidth,\n                windowInnerHeight,\n                browserFontSizeFactor,\n            );\n        }\n\n        return { useTheme };\n    })();\n\n    const { SplashScreen } = createSplashScreen({ useTheme });\n\n    const { ThemeProvider } = (() => {\n        function ThemeProviderWithinViewPortAdapter(props: {\n            splashScreen: ThemeProviderProps[\"splashScreen\"];\n            children: ReactNode;\n        }) {\n            const { splashScreen, children } = props;\n\n            const theme = useTheme();\n\n            {\n                const backgroundColor =\n                    theme.colors.useCases.surfaces.background;\n\n                useEffect(() => {\n                    document.querySelector(\"meta[name=theme-color]\")?.remove();\n                    document.head.insertAdjacentHTML(\n                        \"beforeend\",\n                        `<meta name=\"theme-color\" content=\"${backgroundColor}\">`,\n                    );\n                }, [backgroundColor]);\n            }\n\n            const isStoryProvider =\n                useContext(isDarkModeEnabledOverrideContext) !== undefined;\n\n            // prettier-ignore\n            const CssBaselineOrScopedCssBaseline = useGuaranteedMemo(\n                (): ReactComponent<{ children: ReactNode }> =>\n                    isStoryProvider\n                        ? ({ children }) => (<ScopedCssBaseline>{children}</ScopedCssBaseline>)\n                        : ({ children }) => (<><CssBaseline />{children}</>),\n                [isStoryProvider],\n            );\n\n            // prettier-ignore\n            const SplashScreenOrId = useGuaranteedMemo(\n                (): ReactComponent<{ children: ReactNode }> =>\n                    splashScreen === undefined ?\n                        (({ children }) => <>{children}</>) :\n                        (({ children }) => <SplashScreen {...splashScreen}>{children}</SplashScreen>),\n                [splashScreen],\n            );\n\n            return (\n                <themeBaseContext.Provider value={theme}>\n                    <MuiThemeProvider theme={theme.muiTheme}>\n                        <CssBaselineOrScopedCssBaseline>\n                            <SplashScreenOrId>{children}</SplashScreenOrId>\n                        </CssBaselineOrScopedCssBaseline>\n                    </MuiThemeProvider>\n                </themeBaseContext.Provider>\n            );\n        }\n\n        function ThemeProvider(props: ThemeProviderProps) {\n            const { getViewPortConfig, children, splashScreen } = props;\n\n            // prettier-ignore\n            const ViewPortAdapterOrId = useGuaranteedMemo(\n                (): ReactComponent<{ children: ReactNode; }> => getViewPortConfig === undefined ?\n                    (({ children }) => <>{children}</>) :\n                    (({ children }) => <ViewPortAdapter getConfig={getViewPortConfig}>{children}</ViewPortAdapter>),\n                [getViewPortConfig]\n            );\n\n            return (\n                <ViewPortAdapterOrId>\n                    <ThemeProviderWithinViewPortAdapter\n                        splashScreen={splashScreen}\n                    >\n                        {children}\n                    </ThemeProviderWithinViewPortAdapter>\n                </ViewPortAdapterOrId>\n            );\n        }\n\n        return { ThemeProvider };\n    })();\n\n    function StoryProvider(props: { dark?: boolean; children: ReactNode }) {\n        const { dark = false, children } = props;\n\n        useEffect(() => {\n            evtIsDarkModeEnabled.state = dark;\n        }, [dark]);\n\n        return (\n            <isDarkModeEnabledOverrideContext.Provider value={dark}>\n                <ThemeProvider>{children}</ThemeProvider>\n            </isDarkModeEnabledOverrideContext.Provider>\n        );\n    }\n\n    return {\n        ThemeProvider,\n        useTheme,\n        StoryProvider,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}