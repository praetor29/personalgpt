{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCallbackFactory = void 0;\nvar react_1 = require(\"react\");\nvar memoizee_1 = __importDefault(require(\"memoizee\"));\nvar id_1 = require(\"tsafe/id\");\n/**\n * https://docs.powerhooks.dev/api-reference/usecallbackfactory\n *\n *  const callbackFactory= useCallbackFactory(\n *      ([key]: [string], [params]: [{ foo: number; }]) => {\n *          ...\n *      },\n *      []\n *  );\n *\n * WARNING: Factory args should not be of variable length.\n *\n */\nfunction useCallbackFactory(callback) {\n  var callbackRef = (0, react_1.useRef)(callback);\n  callbackRef.current = callback;\n  var memoizedRef = (0, react_1.useRef)(undefined);\n  return (0, react_1.useState)(function () {\n    return (0, id_1.id)(function () {\n      var factoryArgs = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        factoryArgs[_i] = arguments[_i];\n      }\n      if (memoizedRef.current === undefined) {\n        memoizedRef.current = (0, memoizee_1.default)(function () {\n          var factoryArgs = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            factoryArgs[_i] = arguments[_i];\n          }\n          return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            return callbackRef.current(factoryArgs, args);\n          };\n        }, {\n          \"length\": factoryArgs.length\n        });\n      }\n      return memoizedRef.current.apply(memoizedRef, __spreadArray([], __read(factoryArgs), false));\n    });\n  })[0];\n}\nexports.useCallbackFactory = useCallbackFactory;","map":{"version":3,"names":["react_1","require","memoizee_1","__importDefault","id_1","useCallbackFactory","callback","callbackRef","useRef","current","memoizedRef","undefined","useState","id","factoryArgs","_i","arguments","length","default","args","apply","__spreadArray","__read","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-0.20.32-d63ff31bfd-10c0.zip\\node_modules\\powerhooks\\src\\useCallbackFactory.ts"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport memoize from \"memoizee\";\nimport { id } from \"tsafe/id\";\n\nexport type CallbackFactory<\n    FactoryArgs extends unknown[],\n    Args extends unknown[],\n    R\n    > = (...factoryArgs: FactoryArgs) => (...args: Args) => R\n\n/**\n * https://docs.powerhooks.dev/api-reference/usecallbackfactory\n * \n *  const callbackFactory= useCallbackFactory(\n *      ([key]: [string], [params]: [{ foo: number; }]) => {    \n *          ...\n *      },\n *      []\n *  );\n * \n * WARNING: Factory args should not be of variable length.\n * \n */\nexport function useCallbackFactory<\n    FactoryArgs extends unknown[],\n    Args extends unknown[],\n    R = void\n>(\n    callback: (...callbackArgs: [FactoryArgs, Args]) => R\n): CallbackFactory<FactoryArgs, Args, R> {\n\n    type Out = CallbackFactory<FactoryArgs, Args, R>;\n\n    const callbackRef = useRef<typeof callback>(callback);\n\n    callbackRef.current = callback;\n\n    const memoizedRef = useRef<Out | undefined>(undefined);\n\n    return useState(\n        () => id<Out>(\n            (...factoryArgs) => {\n\n                if (memoizedRef.current === undefined) {\n\n                    memoizedRef.current = memoize(\n                        (...factoryArgs: FactoryArgs) =>\n                            (...args: Args) =>\n                                callbackRef.current(factoryArgs, args),\n                        { \"length\": factoryArgs.length }\n                    );\n\n                }\n\n                return memoizedRef.current(...factoryArgs);\n\n            }\n\n        )\n    )[0];\n\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,IAAAG,IAAA,GAAAH,OAAA;AAQA;;;;;;;;;;;;;AAaA,SAAgBI,kBAAkBA,CAK9BC,QAAqD;EAKrD,IAAMC,WAAW,GAAG,IAAAP,OAAA,CAAAQ,MAAM,EAAkBF,QAAQ,CAAC;EAErDC,WAAW,CAACE,OAAO,GAAGH,QAAQ;EAE9B,IAAMI,WAAW,GAAG,IAAAV,OAAA,CAAAQ,MAAM,EAAkBG,SAAS,CAAC;EAEtD,OAAO,IAAAX,OAAA,CAAAY,QAAQ,EACX;IAAM,WAAAR,IAAA,CAAAS,EAAE,EACJ;MAAC,IAAAC,WAAA;WAAA,IAAAC,EAAA,IAAc,EAAdA,EAAA,GAAAC,SAAA,CAAAC,MAAc,EAAdF,EAAA,EAAc;QAAdD,WAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;MAEG,IAAIL,WAAW,CAACD,OAAO,KAAKE,SAAS,EAAE;QAEnCD,WAAW,CAACD,OAAO,GAAG,IAAAP,UAAA,CAAAgB,OAAO,EACzB;UAAC,IAAAJ,WAAA;eAAA,IAAAC,EAAA,IAA2B,EAA3BA,EAAA,GAAAC,SAAA,CAAAC,MAA2B,EAA3BF,EAAA,EAA2B;YAA3BD,WAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;UACG;YAAC,IAAAI,IAAA;iBAAA,IAAAJ,EAAA,IAAa,EAAbA,EAAA,GAAAC,SAAA,CAAAC,MAAa,EAAbF,EAAA,EAAa;cAAbI,IAAA,CAAAJ,EAAA,IAAAC,SAAA,CAAAD,EAAA;;YACG,OAAAR,WAAW,CAACE,OAAO,CAACK,WAAW,EAAEK,IAAI,CAAC;UAAtC,CAAsC;QAD1C,CAC0C,EAC9C;UAAE,QAAQ,EAAEL,WAAW,CAACG;QAAM,CAAE,CACnC;;MAIL,OAAOP,WAAW,CAACD,OAAO,CAAAW,KAAA,CAAnBV,WAAW,EAAAW,aAAA,KAAAC,MAAA,CAAYR,WAAW;IAE7C,CAAC,CAEJ;EAlBK,CAkBL,CACJ,CAAC,CAAC,CAAC;AAER;AAtCAS,OAAA,CAAAlB,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}