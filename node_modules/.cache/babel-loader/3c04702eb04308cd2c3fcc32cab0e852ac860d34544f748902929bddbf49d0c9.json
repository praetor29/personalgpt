{"ast":null,"code":"import { useMemo } from \"react\";\nimport { getDependencyArrayRef } from \"../tools/getDependencyArrayRef\";\nimport { mergeClasses } from \"../mergeClasses\";\nexport const useMuiThemeStyleOverridesPlugin = ({\n  classes,\n  theme,\n  muiStyleOverridesParams,\n  css,\n  cx,\n  name\n}) => {\n  var _a, _b;\n  require_named: {\n    // NOTE: Hack for backwards compatibility with the makeStyles API.\n    if (name === \"makeStyle no name\") {\n      name = undefined;\n      break require_named;\n    }\n    if (muiStyleOverridesParams !== undefined && name === undefined) {\n      throw new Error(\"To use muiStyleOverridesParams, you must specify a name using .withName('MyComponent')\");\n    }\n  }\n  let styleOverrides = undefined;\n  try {\n    styleOverrides = name === undefined ? undefined : ((_b = (_a = theme.components) === null || _a === void 0 ? void 0 : _a[name /*example*/]) === null || _b === void 0 ? void 0 : _b.styleOverrides) || undefined;\n    // eslint-disable-next-line no-empty\n  } catch (_c) {}\n  const classesFromThemeStyleOverrides = useMemo(() => {\n    if (styleOverrides === undefined) {\n      return undefined;\n    }\n    const themeClasses = {};\n    for (const ruleName in styleOverrides) {\n      const cssObjectOrGetCssObject = styleOverrides[ruleName];\n      if (!(cssObjectOrGetCssObject instanceof Object)) {\n        continue;\n      }\n      themeClasses[ruleName] = css(typeof cssObjectOrGetCssObject === \"function\" ? cssObjectOrGetCssObject(Object.assign({\n        theme,\n        \"ownerState\": muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.ownerState\n      }, muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props)) : cssObjectOrGetCssObject);\n    }\n    return themeClasses;\n  }, [styleOverrides, getDependencyArrayRef(muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props), getDependencyArrayRef(muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.ownerState), css]);\n  classes = useMemo(() => mergeClasses(classes, classesFromThemeStyleOverrides, cx), [classes, classesFromThemeStyleOverrides, cx]);\n  return {\n    classes\n  };\n};","map":{"version":3,"names":["useMemo","getDependencyArrayRef","mergeClasses","useMuiThemeStyleOverridesPlugin","classes","theme","muiStyleOverridesParams","css","cx","name","_a","_b","require_named","undefined","Error","styleOverrides","components","_c","classesFromThemeStyleOverrides","themeClasses","ruleName","cssObjectOrGetCssObject","Object","assign","ownerState","props"],"sources":["C:/Users/prana/repos/personalgpt/.yarn/__virtual__/tss-react-virtual-23d5746f7d/3/AppData/Local/Yarn/Berry/cache/tss-react-npm-4.9.3-3edfb0a633-10c0.zip/node_modules/tss-react/esm/mui/themeStyleOverridesPlugin.js"],"sourcesContent":["import { useMemo } from \"react\";\nimport { getDependencyArrayRef } from \"../tools/getDependencyArrayRef\";\nimport { mergeClasses } from \"../mergeClasses\";\nexport const useMuiThemeStyleOverridesPlugin = ({ classes, theme, muiStyleOverridesParams, css, cx, name }) => {\n    var _a, _b;\n    require_named: {\n        // NOTE: Hack for backwards compatibility with the makeStyles API.\n        if (name === \"makeStyle no name\") {\n            name = undefined;\n            break require_named;\n        }\n        if (muiStyleOverridesParams !== undefined && name === undefined) {\n            throw new Error(\"To use muiStyleOverridesParams, you must specify a name using .withName('MyComponent')\");\n        }\n    }\n    let styleOverrides = undefined;\n    try {\n        styleOverrides =\n            name === undefined\n                ? undefined\n                : ((_b = (_a = theme.components) === null || _a === void 0 ? void 0 : _a[name /*example*/]) === null || _b === void 0 ? void 0 : _b.styleOverrides) || undefined;\n        // eslint-disable-next-line no-empty\n    }\n    catch (_c) { }\n    const classesFromThemeStyleOverrides = useMemo(() => {\n        if (styleOverrides === undefined) {\n            return undefined;\n        }\n        const themeClasses = {};\n        for (const ruleName in styleOverrides) {\n            const cssObjectOrGetCssObject = styleOverrides[ruleName];\n            if (!(cssObjectOrGetCssObject instanceof Object)) {\n                continue;\n            }\n            themeClasses[ruleName] = css(typeof cssObjectOrGetCssObject === \"function\"\n                ? cssObjectOrGetCssObject(Object.assign({ theme, \"ownerState\": muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.ownerState }, muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props))\n                : cssObjectOrGetCssObject);\n        }\n        return themeClasses;\n    }, [\n        styleOverrides,\n        getDependencyArrayRef(muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props),\n        getDependencyArrayRef(muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.ownerState),\n        css\n    ]);\n    classes = useMemo(() => mergeClasses(classes, classesFromThemeStyleOverrides, cx), [classes, classesFromThemeStyleOverrides, cx]);\n    return { classes };\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,qBAAqB,QAAQ,gCAAgC;AACtE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAO,MAAMC,+BAA+B,GAAGA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC,uBAAuB;EAAEC,GAAG;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAC3G,IAAIC,EAAE,EAAEC,EAAE;EACVC,aAAa,EAAE;IACX;IACA,IAAIH,IAAI,KAAK,mBAAmB,EAAE;MAC9BA,IAAI,GAAGI,SAAS;MAChB,MAAMD,aAAa;IACvB;IACA,IAAIN,uBAAuB,KAAKO,SAAS,IAAIJ,IAAI,KAAKI,SAAS,EAAE;MAC7D,MAAM,IAAIC,KAAK,CAAC,wFAAwF,CAAC;IAC7G;EACJ;EACA,IAAIC,cAAc,GAAGF,SAAS;EAC9B,IAAI;IACAE,cAAc,GACVN,IAAI,KAAKI,SAAS,GACZA,SAAS,GACT,CAAC,CAACF,EAAE,GAAG,CAACD,EAAE,GAAGL,KAAK,CAACW,UAAU,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACD,IAAI,CAAC,YAAY,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,cAAc,KAAKF,SAAS;IACxK;EACJ,CAAC,CACD,OAAOI,EAAE,EAAE,CAAE;EACb,MAAMC,8BAA8B,GAAGlB,OAAO,CAAC,MAAM;IACjD,IAAIe,cAAc,KAAKF,SAAS,EAAE;MAC9B,OAAOA,SAAS;IACpB;IACA,MAAMM,YAAY,GAAG,CAAC,CAAC;IACvB,KAAK,MAAMC,QAAQ,IAAIL,cAAc,EAAE;MACnC,MAAMM,uBAAuB,GAAGN,cAAc,CAACK,QAAQ,CAAC;MACxD,IAAI,EAAEC,uBAAuB,YAAYC,MAAM,CAAC,EAAE;QAC9C;MACJ;MACAH,YAAY,CAACC,QAAQ,CAAC,GAAGb,GAAG,CAAC,OAAOc,uBAAuB,KAAK,UAAU,GACpEA,uBAAuB,CAACC,MAAM,CAACC,MAAM,CAAC;QAAElB,KAAK;QAAE,YAAY,EAAEC,uBAAuB,KAAK,IAAI,IAAIA,uBAAuB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACkB;MAAW,CAAC,EAAElB,uBAAuB,KAAK,IAAI,IAAIA,uBAAuB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACmB,KAAK,CAAC,CAAC,GACtSJ,uBAAuB,CAAC;IAClC;IACA,OAAOF,YAAY;EACvB,CAAC,EAAE,CACCJ,cAAc,EACdd,qBAAqB,CAACK,uBAAuB,KAAK,IAAI,IAAIA,uBAAuB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACmB,KAAK,CAAC,EACtIxB,qBAAqB,CAACK,uBAAuB,KAAK,IAAI,IAAIA,uBAAuB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACkB,UAAU,CAAC,EAC3IjB,GAAG,CACN,CAAC;EACFH,OAAO,GAAGJ,OAAO,CAAC,MAAME,YAAY,CAACE,OAAO,EAAEc,8BAA8B,EAAEV,EAAE,CAAC,EAAE,CAACJ,OAAO,EAAEc,8BAA8B,EAAEV,EAAE,CAAC,CAAC;EACjI,OAAO;IAAEJ;EAAQ,CAAC;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}