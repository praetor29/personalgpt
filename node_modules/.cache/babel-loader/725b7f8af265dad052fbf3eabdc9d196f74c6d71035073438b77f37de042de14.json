{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useEffectRunConditionToDependencyArray = void 0;\nvar react_1 = require(\"react\");\nvar assert_1 = require(\"tsafe/assert\");\nvar depsMaxLength = 9;\nvar privateObject = {};\n/**\n * Hooks for having better control on when an effect should be run.\n *\n * function useMyEffect(effect: ()=> void; effectRunCondition: EffectRunCondition) {\n *\n *     const { deps, doSkipEffectRun }= useEffectRunConditionToDependencyArray({\n *         effectRunCondition,\n *         \"hookName\": useMyEffect.name\n *     });\n *\n *     useEffect(()=> {\n *         if( doSkipEffectRun ) return;\n * \t       effect();\n *     }, deps);\n *\n * }\n *\n */\nfunction useEffectRunConditionToDependencyArray(props) {\n  var effectRunCondition = props.effectRunCondition,\n    _a = props.hookName,\n    hookName = _a === void 0 ? useEffectRunConditionToDependencyArray.name : _a;\n  var depsRef = (0, react_1.useRef)(new Array(depsMaxLength).fill(privateObject));\n  var _b = function () {\n      if (typeof effectRunCondition === \"boolean\") {\n        return {\n          \"deps\": effectRunCondition ? __spreadArray([{}], __read(new Array(depsMaxLength - 1).fill(privateObject)), false) : depsRef.current,\n          \"doSkipEffectRun\": !effectRunCondition\n        };\n      }\n      (0, assert_1.assert)(effectRunCondition.length <= depsMaxLength, \"dependency array passed to \".concat(hookName, \" can only contain at most \").concat(depsMaxLength, \" elements\"));\n      var deps = __spreadArray(__spreadArray([], __read(effectRunCondition), false), __read(new Array(depsMaxLength - effectRunCondition.length).fill(privateObject)), false);\n      return {\n        deps: deps,\n        \"doSkipEffectRun\": false\n      };\n    }(),\n    deps = _b.deps,\n    doSkipEffectRun = _b.doSkipEffectRun;\n  depsRef.current = deps;\n  return {\n    deps: deps,\n    doSkipEffectRun: doSkipEffectRun /* NOTE: Only necessary for fist render */\n  };\n}\n\nexports.useEffectRunConditionToDependencyArray = useEffectRunConditionToDependencyArray;","map":{"version":3,"names":["react_1","require","assert_1","depsMaxLength","privateObject","useEffectRunConditionToDependencyArray","props","effectRunCondition","_a","hookName","name","depsRef","useRef","Array","fill","_b","__spreadArray","__read","current","assert","length","concat","deps","doSkipEffectRun","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-0.20.32-d63ff31bfd-10c0.zip\\node_modules\\powerhooks\\src\\tools\\useEffectRunConditionToDependencyArray.ts"],"sourcesContent":["import { useRef } from \"react\";\nimport { assert } from \"tsafe/assert\";\n\nconst depsMaxLength = 9;\n\nconst privateObject = {}\n\n/**\n * Hooks for having better control on when an effect should be run.\n * \n * function useMyEffect(effect: ()=> void; effectRunCondition: EffectRunCondition) {\n * \n *     const { deps, doSkipEffectRun }= useEffectRunConditionToDependencyArray({ \n *         effectRunCondition, \n *         \"hookName\": useMyEffect.name \n *     });\n * \n *     useEffect(()=> {\n *         if( doSkipEffectRun ) return;\n * \t       effect();\n *     }, deps);\n * \n * }\n * \n */\nexport function useEffectRunConditionToDependencyArray(\n\tprops: {\n\t\teffectRunCondition: boolean | readonly any[],\n\t\t/** For more insightful debug messages */\n\t\thookName?: string;\n\t}\n): { deps: readonly any[]; doSkipEffectRun: boolean; } {\n\n\tconst {\n\t\teffectRunCondition,\n\t\thookName = useEffectRunConditionToDependencyArray.name\n\t} = props;\n\n\tconst depsRef = useRef<readonly any[]>(new Array(depsMaxLength).fill(privateObject));\n\n\tconst { deps, doSkipEffectRun } = (() => {\n\n\t\tif (typeof effectRunCondition === \"boolean\") {\n\n\t\t\treturn {\n\t\t\t\t\"deps\": effectRunCondition ?\n\t\t\t\t\t[{}, ...new Array(depsMaxLength - 1).fill(privateObject)] :\n\t\t\t\t\tdepsRef.current,\n\t\t\t\t\"doSkipEffectRun\": !effectRunCondition\n\t\t\t};\n\n\t\t}\n\n\t\tassert(\n\t\t\teffectRunCondition.length <= depsMaxLength,\n\t\t\t`dependency array passed to ${hookName} can only contain at most ${depsMaxLength} elements`\n\t\t);\n\n\t\tconst deps = [\n\t\t\t...effectRunCondition,\n\t\t\t...new Array(depsMaxLength - effectRunCondition.length).fill(privateObject)\n\t\t];\n\n\t\treturn { deps, \"doSkipEffectRun\": false };\n\n\t})();\n\n\tdepsRef.current = deps;\n\n\treturn {\n\t\tdeps,\n\t\tdoSkipEffectRun /* NOTE: Only necessary for fist render */\n\t};\n\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAEA,IAAME,aAAa,GAAG,CAAC;AAEvB,IAAMC,aAAa,GAAG,EAAE;AAExB;;;;;;;;;;;;;;;;;;AAkBA,SAAgBC,sCAAsCA,CACrDC,KAIC;EAIA,IAAAC,kBAAkB,GAEfD,KAAK,CAAAC,kBAFU;IAClBC,EAAA,GACGF,KAAK,CAAAG,QAD8C;IAAtDA,QAAQ,GAAAD,EAAA,cAAGH,sCAAsC,CAACK,IAAI,GAAAF,EAAA;EAGvD,IAAMG,OAAO,GAAG,IAAAX,OAAA,CAAAY,MAAM,EAAiB,IAAIC,KAAK,CAACV,aAAa,CAAC,CAACW,IAAI,CAACV,aAAa,CAAC,CAAC;EAE9E,IAAAW,EAAA,GAA6B;MAElC,IAAI,OAAOR,kBAAkB,KAAK,SAAS,EAAE;QAE5C,OAAO;UACN,MAAM,EAAEA,kBAAkB,GAAES,aAAA,EAC1B,EAAE,GAAAC,MAAA,CAAK,IAAIJ,KAAK,CAACV,aAAa,GAAG,CAAC,CAAC,CAACW,IAAI,CAACV,aAAa,CAAC,YACxDO,OAAO,CAACO,OAAO;UAChB,iBAAiB,EAAE,CAACX;SACpB;;MAIF,IAAAL,QAAA,CAAAiB,MAAM,EACLZ,kBAAkB,CAACa,MAAM,IAAIjB,aAAa,EAC1C,8BAAAkB,MAAA,CAA8BZ,QAAQ,gCAAAY,MAAA,CAA6BlB,aAAa,cAAW,CAC3F;MAED,IAAMmB,IAAI,GAAAN,aAAA,CAAAA,aAAA,KAAAC,MAAA,CACNV,kBAAkB,WAAAU,MAAA,CAClB,IAAIJ,KAAK,CAACV,aAAa,GAAGI,kBAAkB,CAACa,MAAM,CAAC,CAACN,IAAI,CAACV,aAAa,CAAC,SAC3E;MAED,OAAO;QAAEkB,IAAI,EAAAA,IAAA;QAAE,iBAAiB,EAAE;MAAK,CAAE;IAE1C,CAAC,CAAC,CAAE;IAzBIA,IAAI,GAAAP,EAAA,CAAAO,IAAA;IAAEC,eAAe,GAAAR,EAAA,CAAAQ,eAyBzB;EAEJZ,OAAO,CAACO,OAAO,GAAGI,IAAI;EAEtB,OAAO;IACNA,IAAI,EAAAA,IAAA;IACJC,eAAe,EAAAA,eAAA,CAAC;GAChB;AAEF;;AAjDAC,OAAA,CAAAnB,sCAAA,GAAAA,sCAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}