{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useDomRect } from \"powerhooks/useDomRect\";\nimport { useEffect, useState } from \"react\";\nimport { useStateRef } from \"powerhooks/useStateRef\";\nexport function useMediaAspectRatio(params) {\n  var _a;\n  var internallyCreateRef = useStateRef(null);\n  var ref = (_a = params === null || params === void 0 ? void 0 : params.ref) !== null && _a !== void 0 ? _a : internallyCreateRef;\n  var _b = useDomRect({\n      ref: ref\n    }).domRect,\n    width = _b.width,\n    height = _b.height;\n  var _c = __read(useState(undefined), 2),\n    aspectRatio = _c[0],\n    setAspectRatio = _c[1];\n  useEffect(function () {\n    if (aspectRatio !== undefined && !isNaN(aspectRatio)) {\n      return;\n    }\n    setAspectRatio(width / height);\n  }, [width, height]);\n  return {\n    \"aspectRatio\": aspectRatio === undefined ? NaN : aspectRatio,\n    ref: ref\n  };\n}","map":{"version":3,"names":["useDomRect","useEffect","useState","useStateRef","useMediaAspectRatio","params","internallyCreateRef","ref","_a","_b","domRect","width","height","_c","__read","undefined","aspectRatio","setAspectRatio","isNaN","NaN"],"sources":["C:\\Users\\prana\\repos\\personalgpt\\.yarn\\__virtual__\\gitlanding-virtual-07e3485447\\3\\AppData\\Local\\Yarn\\Berry\\cache\\gitlanding-npm-0.23.25-390b40ced8-10c0.zip\\node_modules\\gitlanding\\src\\tools\\useMediaAspectRatio.ts"],"sourcesContent":["import { useDomRect } from \"powerhooks/useDomRect\";\nimport type { RefObject } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useStateRef } from \"powerhooks/useStateRef\";\n\nexport function useMediaAspectRatio<\n    T extends HTMLImageElement | HTMLVideoElement = any,\n>(): { ref: RefObject<T>; aspectRatio: number };\nexport function useMediaAspectRatio<\n    T extends HTMLImageElement | HTMLVideoElement = any,\n>(params: { ref: RefObject<T> }): { aspectRatio: number };\nexport function useMediaAspectRatio<\n    T extends HTMLImageElement | HTMLVideoElement = any,\n>(params?: { ref: RefObject<T> }): { ref: RefObject<T>; aspectRatio: number } {\n    const internallyCreateRef = useStateRef<T>(null);\n\n    const ref = params?.ref ?? internallyCreateRef;\n\n    const {\n        domRect: { width, height },\n    } = useDomRect({ ref });\n    const [aspectRatio, setAspectRatio] = useState<number | undefined>(\n        undefined,\n    );\n\n    useEffect(() => {\n        if (aspectRatio !== undefined && !isNaN(aspectRatio)) {\n            return;\n        }\n\n        setAspectRatio(width / height);\n    }, [width, height]);\n\n    return {\n        \"aspectRatio\": aspectRatio === undefined ? NaN : aspectRatio,\n        ref,\n    };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAElD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAQpD,OAAM,SAAUC,mBAAmBA,CAEjCC,MAA8B;;EAC5B,IAAMC,mBAAmB,GAAGH,WAAW,CAAI,IAAI,CAAC;EAEhD,IAAMI,GAAG,GAAG,CAAAC,EAAA,GAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,GAAG,cAAAC,EAAA,cAAAA,EAAA,GAAIF,mBAAmB;EAG1C,IAAAG,EAAA,GACAT,UAAU,CAAC;MAAEO,GAAG,EAAAA;IAAA,CAAE,CAAC,CAAAG,OADO;IAAfC,KAAK,GAAAF,EAAA,CAAAE,KAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAE;EAExB,IAAAC,EAAA,GAAAC,MAAA,CAAgCZ,QAAQ,CAC1Ca,SAAS,CACZ;IAFMC,WAAW,GAAAH,EAAA;IAAEI,cAAc,GAAAJ,EAAA,GAEjC;EAEDZ,SAAS,CAAC;IACN,IAAIe,WAAW,KAAKD,SAAS,IAAI,CAACG,KAAK,CAACF,WAAW,CAAC,EAAE;MAClD;;IAGJC,cAAc,CAACN,KAAK,GAAGC,MAAM,CAAC;EAClC,CAAC,EAAE,CAACD,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,OAAO;IACH,aAAa,EAAEI,WAAW,KAAKD,SAAS,GAAGI,GAAG,GAAGH,WAAW;IAC5DT,GAAG,EAAAA;GACN;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}