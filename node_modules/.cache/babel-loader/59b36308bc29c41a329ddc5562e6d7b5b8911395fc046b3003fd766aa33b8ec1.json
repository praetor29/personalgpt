{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewPortAdapter = exports.chromeFontSizesFactors = exports.getIsPortraitOrientation = exports.useViewPortState = exports.ViewPortOutOfRangeError = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar react_1 = require(\"react\");\nvar useGuaranteedMemo_1 = require(\"./useGuaranteedMemo\");\nvar useWindowInnerSize_1 = require(\"./tools/useWindowInnerSize\");\nvar useBrowserFontSizeFactor_1 = require(\"./tools/useBrowserFontSizeFactor\");\nvar react_2 = require(\"react\");\nvar ViewPortOutOfRangeError = /** @class */function (_super) {\n  __extends(ViewPortOutOfRangeError, _super);\n  function ViewPortOutOfRangeError(fallbackNode) {\n    var _newTarget = this.constructor;\n    var _this = _super.call(this) || this;\n    _this.fallbackNode = fallbackNode;\n    Object.setPrototypeOf(_this, _newTarget.prototype);\n    return _this;\n  }\n  return ViewPortOutOfRangeError;\n}(Error);\nexports.ViewPortOutOfRangeError = ViewPortOutOfRangeError;\nvar reactContext = function () {\n  var propertyKey = \"__powerhooks_ViewPortAdapter_context\";\n  var peerDepObj = react_2.createContext;\n  var sharedContext = peerDepObj[\"__powerhooks_ViewPortAdapter_context\"];\n  if (sharedContext === undefined) {\n    sharedContext = {\n      \"reactContext\": (0, react_2.createContext)(undefined)\n    };\n    Object.defineProperty(peerDepObj, propertyKey, {\n      \"configurable\": false,\n      \"enumerable\": false,\n      \"writable\": false,\n      \"value\": sharedContext\n    });\n  }\n  return sharedContext;\n}().reactContext;\nfunction useViewPortState() {\n  var viewPortState = (0, react_2.useContext)(reactContext);\n  return {\n    viewPortState: viewPortState\n  };\n}\nexports.useViewPortState = useViewPortState;\nfunction getIsPortraitOrientation(props) {\n  var windowInnerWidth = props.windowInnerWidth,\n    windowInnerHeight = props.windowInnerHeight;\n  var isPortraitOrientation = windowInnerWidth * 1.3 < windowInnerHeight;\n  return isPortraitOrientation;\n}\nexports.getIsPortraitOrientation = getIsPortraitOrientation;\nexports.chromeFontSizesFactors = {\n  \"Very small\": 0.5625,\n  \"Small\": 0.75,\n  \"Medium (Recommended)\": 1,\n  \"Large\": 1.25,\n  \"Very Large\": 1.5\n};\n/**\n * WARNING: We assumes that html element font-size is not defined\n * or defined in percentages.\n */\nfunction ViewPortAdapter(props) {\n  var getConfig = props.getConfig,\n    children = props.children;\n  var _a = (0, useWindowInnerSize_1.useWindowInnerSize)(),\n    windowInnerWidth = _a.windowInnerWidth,\n    windowInnerHeight = _a.windowInnerHeight;\n  var browserFontSizeFactor = (0, useBrowserFontSizeFactor_1.useBrowserFontSizeFactor)().browserFontSizeFactor;\n  var getConfigResult = function useClosure() {\n    var getConfigResultRef = (0, react_1.useRef)();\n    (0, useGuaranteedMemo_1.useGuaranteedMemo)(function () {\n      //We skip refresh when pinch and zoom\n      if (getConfigResultRef.current !== undefined && (window.scrollY !== 0 || window.scrollX !== 0)) {\n        return;\n      }\n      var viewPortConfig;\n      try {\n        viewPortConfig = getConfig({\n          windowInnerWidth: windowInnerWidth,\n          windowInnerHeight: windowInnerHeight,\n          browserFontSizeFactor: browserFontSizeFactor\n        });\n      } catch (error) {\n        if (!(error instanceof ViewPortOutOfRangeError)) {\n          throw error;\n        }\n        var fallbackNode = error.fallbackNode;\n        getConfigResultRef.current = {\n          \"isOutOfRange\": true,\n          fallbackNode: fallbackNode\n        };\n        return;\n      }\n      var zoomFactor = windowInnerWidth / viewPortConfig.targetWindowInnerWidth;\n      var viewPortState = __assign(__assign({}, viewPortConfig), {\n        zoomFactor: zoomFactor,\n        \"targetWindowInnerHeight\": windowInnerHeight / zoomFactor\n      });\n      getConfigResultRef.current = {\n        \"isOutOfRange\": false,\n        viewPortState: viewPortState\n      };\n    }, [getConfig, windowInnerWidth, windowInnerHeight, browserFontSizeFactor]);\n    return {\n      \"getConfigResult\": getConfigResultRef.current\n    };\n  }().getConfigResult;\n  (0, react_2.useEffect)(function () {\n    if (getConfigResult.isOutOfRange) {\n      return;\n    }\n    var viewPortState = getConfigResult.viewPortState;\n    //NOTE: We assert the font size is defined in percent \n    //or not defined. We have no way to check it so we make\n    //it a requirement to use the view port adapter.\n    var rootElement = document.querySelector(\"html\");\n    var rootElementFontSizePx = parseInt(window.getComputedStyle(rootElement, null).getPropertyValue(\"font-size\").replace(/px$/, \"\"));\n    //Cross multiplication\n    //100     \t\t\t\t\t\t16 * browserFontSizeFactor;\n    //rootElementFontSizeInPercent  rootElementFontSizePx\n    var rootElementFontSizeInPercent = 100 * rootElementFontSizePx / (16 * browserFontSizeFactor);\n    rootElement.style.fontSize = \"\".concat(16 * (rootElementFontSizeInPercent / 100) * viewPortState.targetBrowserFontSizeFactor, \"px\");\n  }, [browserFontSizeFactor, getConfigResult.isOutOfRange ? Object : getConfigResult.viewPortState.targetBrowserFontSizeFactor]);\n  if (getConfigResult.isOutOfRange) {\n    var fallbackNode = getConfigResult.fallbackNode;\n    return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {\n      children: fallbackNode\n    });\n  }\n  var viewPortState = getConfigResult.viewPortState;\n  return (0, jsx_runtime_1.jsx)(\"div\", __assign({\n    about: \"powerhooks \".concat(ViewPortAdapter.name, \" outer wrapper\"),\n    style: {\n      \"height\": \"100vh\",\n      \"overflow\": \"hidden\"\n    }\n  }, {\n    children: (0, jsx_runtime_1.jsx)(\"div\", __assign({\n      about: \"powerhooks \".concat(ViewPortAdapter.name, \" inner wrapper\"),\n      style: {\n        \"transform\": \"scale(\".concat(viewPortState.zoomFactor, \")\"),\n        \"transformOrigin\": \"0 0\",\n        \"width\": viewPortState.targetWindowInnerWidth,\n        \"height\": viewPortState.targetWindowInnerHeight,\n        \"overflow\": \"hidden\"\n      }\n    }, {\n      children: (0, jsx_runtime_1.jsx)(reactContext.Provider, __assign({\n        value: viewPortState\n      }, {\n        children: children\n      }))\n    }))\n  }));\n}\nexports.ViewPortAdapter = ViewPortAdapter;","map":{"version":3,"names":["react_1","require","useGuaranteedMemo_1","useWindowInnerSize_1","useBrowserFontSizeFactor_1","react_2","ViewPortOutOfRangeError","_super","__extends","fallbackNode","_this","call","Object","setPrototypeOf","_newTarget","prototype","Error","exports","reactContext","propertyKey","peerDepObj","createContext","sharedContext","undefined","defineProperty","useViewPortState","viewPortState","useContext","getIsPortraitOrientation","props","windowInnerWidth","windowInnerHeight","isPortraitOrientation","chromeFontSizesFactors","ViewPortAdapter","getConfig","children","_a","useWindowInnerSize","browserFontSizeFactor","useBrowserFontSizeFactor","getConfigResult","useClosure","getConfigResultRef","useRef","useGuaranteedMemo","current","window","scrollY","scrollX","viewPortConfig","error","zoomFactor","targetWindowInnerWidth","__assign","useEffect","isOutOfRange","rootElement","document","querySelector","rootElementFontSizePx","parseInt","getComputedStyle","getPropertyValue","replace","rootElementFontSizeInPercent","style","fontSize","concat","targetBrowserFontSizeFactor","jsx_runtime_1","jsx","Fragment","about","name","targetWindowInnerHeight","Provider","value"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-0.20.32-d63ff31bfd-10c0.zip\\node_modules\\powerhooks\\src\\ViewPortAdapter.tsx"],"sourcesContent":["\n\nimport type { ReactNode, Context } from \"react\";\nimport { useRef } from \"react\";\nimport { useGuaranteedMemo } from \"./useGuaranteedMemo\";\nimport { useWindowInnerSize } from \"./tools/useWindowInnerSize\";\nimport { useBrowserFontSizeFactor } from \"./tools/useBrowserFontSizeFactor\";\nimport { useEffect, createContext, useContext } from \"react\";\n\n\nexport class ViewPortOutOfRangeError extends Error {\n\tconstructor(\n\t\tpublic readonly fallbackNode: ReactNode\n\t) {\n\n\t\tsuper();\n\n\t\tObject.setPrototypeOf(this, new.target.prototype);\n\n\t}\n}\n\nexport type ViewPortAdapterProps = {\n\t/** \n\t * May throw import { ViewPortOutOfRangeErrorÂ } from \"powerhooks/ViewPortAdapter\";\n\t * to specify a fallback screen on edge cases.\n\t */\n\tgetConfig(\n\t\tprops: {\n\t\t\twindowInnerWidth: number;\n\t\t\twindowInnerHeight: number;\n\t\t\tbrowserFontSizeFactor: number;\n\t\t}\n\t): {\n\t\ttargetWindowInnerWidth: number;\n\t\ttargetBrowserFontSizeFactor: number;\n\t};\n\tchildren: ReactNode;\n};\n\nexport type ViewPortState = ReturnType<ViewPortAdapterProps[\"getConfig\"]> & {\n\ttargetWindowInnerHeight: number;\n\tzoomFactor: number;\n};\n\nconst { reactContext } = (() => {\n\n    type SharedContext = {\n        reactContext: Context<ViewPortState | undefined>;\n    };\n\n    const propertyKey = \"__powerhooks_ViewPortAdapter_context\";\n\n    const peerDepObj: Record<typeof propertyKey, SharedContext | undefined> = createContext as any;\n\n    let sharedContext = peerDepObj[\"__powerhooks_ViewPortAdapter_context\"];\n\n    if (sharedContext === undefined) {\n\n        sharedContext = {\n\t\t\t\"reactContext\": createContext<ViewPortState | undefined>(undefined)\n        };\n\n        Object.defineProperty(peerDepObj, propertyKey, {\n            \"configurable\": false,\n            \"enumerable\": false,\n            \"writable\": false,\n            \"value\": sharedContext\n        });\n    }\n\n    return sharedContext;\n\n})();\n\n\n\nexport function useViewPortState() {\n\tconst viewPortState = useContext(reactContext);\n\treturn { viewPortState };\n}\n\nexport function getIsPortraitOrientation(props: {\n    windowInnerWidth: number;\n    windowInnerHeight: number;\n\n}) {\n    const { windowInnerWidth, windowInnerHeight } = props;\n\n\tconst isPortraitOrientation = \n\t\twindowInnerWidth * 1.3 < windowInnerHeight;\n\n    return isPortraitOrientation;\n}\n\nexport const chromeFontSizesFactors = {\n    \"Very small\": 0.5625,\n    \"Small\": 0.75,\n    \"Medium (Recommended)\": 1,\n    \"Large\": 1.25,\n    \"Very Large\": 1.5,\n} as const;\n\nexport type ChromeFontSize = keyof typeof chromeFontSizesFactors;\n\n/**\n * WARNING: We assumes that html element font-size is not defined\n * or defined in percentages.\n */\nexport function ViewPortAdapter(props: ViewPortAdapterProps) {\n\n\tconst { getConfig, children } = props;\n\n\tconst {\n\t\twindowInnerWidth,\n\t\twindowInnerHeight,\n\t} = useWindowInnerSize();\n\n\tconst { browserFontSizeFactor } = useBrowserFontSizeFactor();\n\n\tconst { getConfigResult } = (function useClosure() {\n\n\t\tconst getConfigResultRef = useRef<\n\t\t\t{ isOutOfRange: false, viewPortState: ViewPortState; } |\n\t\t\t{ isOutOfRange: true, fallbackNode: ReactNode; }\n\t\t>();\n\n\t\tuseGuaranteedMemo(\n\t\t\t() => {\n\n\t\t\t\t//We skip refresh when pinch and zoom\n\t\t\t\tif (\n\t\t\t\t\tgetConfigResultRef.current !== undefined &&\n\t\t\t\t\t(\n\t\t\t\t\t\twindow.scrollY !== 0 ||\n\t\t\t\t\t\twindow.scrollX !== 0\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet viewPortConfig: ReturnType<typeof getConfig>;\n\n\t\t\t\ttry {\n\n\n\t\t\t\t\tviewPortConfig = getConfig({\n\t\t\t\t\t\twindowInnerWidth,\n\t\t\t\t\t\twindowInnerHeight,\n\t\t\t\t\t\tbrowserFontSizeFactor\n\t\t\t\t\t});\n\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\tif (!(error instanceof ViewPortOutOfRangeError)) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { fallbackNode } = error;\n\n\t\t\t\t\tgetConfigResultRef.current = {\n\t\t\t\t\t\t\"isOutOfRange\": true,\n\t\t\t\t\t\tfallbackNode\n\t\t\t\t\t};\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\n\t\t\t\tconst zoomFactor = windowInnerWidth / viewPortConfig.targetWindowInnerWidth;\n\n\t\t\t\tconst viewPortState: ViewPortState = {\n\t\t\t\t\t...viewPortConfig,\n\t\t\t\t\tzoomFactor,\n\t\t\t\t\t\"targetWindowInnerHeight\": windowInnerHeight / zoomFactor\n\t\t\t\t};\n\n\t\t\t\tgetConfigResultRef.current = { \"isOutOfRange\": false, viewPortState };\n\n\t\t\t},\n\t\t\t[\n\t\t\t\tgetConfig,\n\t\t\t\twindowInnerWidth,\n\t\t\t\twindowInnerHeight,\n\t\t\t\tbrowserFontSizeFactor\n\t\t\t]\n\t\t);\n\n\t\treturn { \"getConfigResult\": getConfigResultRef.current! };\n\n\t})();\n\n\tuseEffect(\n\t\t() => {\n\n\t\t\tif (getConfigResult.isOutOfRange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { viewPortState } = getConfigResult;\n\n\t\t\t//NOTE: We assert the font size is defined in percent \n\t\t\t//or not defined. We have no way to check it so we make\n\t\t\t//it a requirement to use the view port adapter.\n\n\t\t\tconst rootElement = document.querySelector(\"html\")!;\n\n\t\t\tconst rootElementFontSizePx =\n\t\t\t\tparseInt(\n\t\t\t\t\twindow.getComputedStyle(rootElement, null)\n\t\t\t\t\t\t.getPropertyValue(\"font-size\")\n\t\t\t\t\t\t.replace(/px$/, \"\")\n\t\t\t\t);\n\n\t\t\t//Cross multiplication\n\t\t\t//100     \t\t\t\t\t\t16 * browserFontSizeFactor;\n\t\t\t//rootElementFontSizeInPercent  rootElementFontSizePx\n\n\t\t\tconst rootElementFontSizeInPercent =\n\t\t\t\t(100 * rootElementFontSizePx) / (16 * browserFontSizeFactor);\n\n\t\t\trootElement.style.fontSize =\n\t\t\t\t`${16 * (rootElementFontSizeInPercent / 100) * viewPortState.targetBrowserFontSizeFactor}px`;\n\n\t\t},\n\t\t[\n\t\t\tbrowserFontSizeFactor,\n\t\t\tgetConfigResult.isOutOfRange ?\n\t\t\t\tObject : getConfigResult.viewPortState.targetBrowserFontSizeFactor\n\t\t]\n\t);\n\n\tif (getConfigResult.isOutOfRange) {\n\t\tconst { fallbackNode } = getConfigResult;\n\t\treturn <>{fallbackNode}</>;\n\t}\n\n\tconst { viewPortState } = getConfigResult;\n\n\treturn (\n\t\t<div\n\t\t\tabout={`powerhooks ${ViewPortAdapter.name} outer wrapper`}\n\t\t\tstyle={{ \"height\": \"100vh\", \"overflow\": \"hidden\" }}\n\t\t>\n\t\t\t<div\n\t\t\t\tabout={`powerhooks ${ViewPortAdapter.name} inner wrapper`}\n\t\t\t\tstyle={{\n\t\t\t\t\t\"transform\": `scale(${viewPortState.zoomFactor})`,\n\t\t\t\t\t\"transformOrigin\": \"0 0\",\n\t\t\t\t\t\"width\": viewPortState.targetWindowInnerWidth,\n\t\t\t\t\t\"height\": viewPortState.targetWindowInnerHeight,\n\t\t\t\t\t\"overflow\": \"hidden\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<reactContext.Provider value={viewPortState}>\n\t\t\t\t\t{children}\n\t\t\t\t</reactContext.Provider>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}