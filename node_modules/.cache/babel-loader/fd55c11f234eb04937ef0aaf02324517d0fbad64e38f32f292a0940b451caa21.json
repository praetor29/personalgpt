{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loosenType = void 0;\n/**\n * https://docs.evt.land/api/evt/loosenType\n */\nfunction loosenType(evt) {\n  return evt;\n}\nexports.loosenType = loosenType;\n/*\nimport { Evt } from \"./Evt\";\nconst x: Evt<boolean> = loosenType(new Evt<true>()); x;\nconst y: Evt<boolean> = loosenType(new Evt<number>()); y;\n*/","map":{"version":3,"names":["loosenType","evt","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\evt-npm-2.5.3-c2ac0365d2-10c0.zip\\node_modules\\evt\\src\\lib\\Evt.loosenType.ts"],"sourcesContent":["import type { SwapEvtType, UnpackEvt, NonPostableEvtLike} from \"./types\";\n\n/**\n * https://docs.evt.land/api/evt/loosenType\n */\nexport function loosenType<E extends NonPostableEvtLike<any>, SupersetOfT>(\n    evt: E\n): UnpackEvt<E> extends SupersetOfT ?\n    SwapEvtType<typeof evt, SupersetOfT> : \"NOT A SUPERSET\" {\n    return evt as any;\n}\n\n/*\nimport { Evt } from \"./Evt\";\nconst x: Evt<boolean> = loosenType(new Evt<true>()); x;\nconst y: Evt<boolean> = loosenType(new Evt<number>()); y;\n*/\n\n\n\n"],"mappings":";;;;;;AAEA;;;AAGA,SAAgBA,UAAUA,CACtBC,GAAM;EAGN,OAAOA,GAAU;AACrB;AALAC,OAAA,CAAAF,UAAA,GAAAA,UAAA;AAOA"},"metadata":{},"sourceType":"script","externalDependencies":[]}