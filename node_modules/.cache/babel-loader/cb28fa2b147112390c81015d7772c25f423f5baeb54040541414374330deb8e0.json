{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useBrowserFontSizeFactor = exports.getBrowserFontSizeFactor = void 0;\nvar hooks_1 = require(\"evt/hooks\");\nvar react_1 = require(\"react\");\nvar evt_1 = require(\"evt\");\nvar memoizee_1 = __importDefault(require(\"memoizee\"));\nexports.getBrowserFontSizeFactor = (0, memoizee_1.default)(function () {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var rootElement = document.querySelector(\"html\");\n  var fontSize = rootElement.style.fontSize;\n  rootElement.style.fontSize = \"100%\";\n  var browserFontSizeFactor = parseInt(window.getComputedStyle(rootElement, null).getPropertyValue(\"font-size\").replace(/px$/, \"\")) / 16;\n  rootElement.style.fontSize = fontSize;\n  return browserFontSizeFactor;\n});\nfunction useBrowserFontSizeFactor() {\n  var _a = __read((0, react_1.useState)(function () {\n      return exports.getBrowserFontSizeFactor.clear(), (0, exports.getBrowserFontSizeFactor)();\n    }), 2),\n    browserFontSizeFactor = _a[0],\n    setBrowserFontSizeFactor = _a[1];\n  (0, hooks_1.useEvt)(function (ctx) {\n    return evt_1.Evt.from(ctx, window, \"focus\").attach(function () {\n      exports.getBrowserFontSizeFactor.clear();\n      setBrowserFontSizeFactor((0, exports.getBrowserFontSizeFactor)());\n    });\n  }, []);\n  return {\n    browserFontSizeFactor: browserFontSizeFactor\n  };\n}\nexports.useBrowserFontSizeFactor = useBrowserFontSizeFactor;","map":{"version":3,"names":["hooks_1","require","react_1","evt_1","memoizee_1","__importDefault","exports","getBrowserFontSizeFactor","default","rootElement","document","querySelector","fontSize","style","browserFontSizeFactor","parseInt","window","getComputedStyle","getPropertyValue","replace","useBrowserFontSizeFactor","_a","__read","useState","clear","setBrowserFontSizeFactor","useEvt","ctx","Evt","from","attach"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-0.20.32-d63ff31bfd-10c0.zip\\node_modules\\powerhooks\\src\\tools\\useBrowserFontSizeFactor.ts"],"sourcesContent":["import { useEvt } from \"evt/hooks\";\nimport { useState } from \"react\";\nimport { Evt } from \"evt\";\nimport memoize from \"memoizee\";\n\nexport const getBrowserFontSizeFactor = memoize(() => {\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rootElement = document.querySelector(\"html\")!;\n\n    const { fontSize } = rootElement.style;\n\n    rootElement.style.fontSize = \"100%\";\n\n    const browserFontSizeFactor =\n        parseInt(\n            window.getComputedStyle(rootElement, null)\n                .getPropertyValue(\"font-size\")\n                .replace(/px$/, \"\")\n        ) / 16;\n\n    rootElement.style.fontSize = fontSize;\n\n    return browserFontSizeFactor;\n\n});\n\nexport function useBrowserFontSizeFactor() {\n\n    const [browserFontSizeFactor, setBrowserFontSizeFactor] = useState(() => (\n        getBrowserFontSizeFactor.clear(),\n        getBrowserFontSizeFactor()\n    ));\n\n    useEvt(\n        ctx =>\n            Evt.from(ctx, window, \"focus\")\n                .attach(() => {\n                    getBrowserFontSizeFactor.clear();\n                    setBrowserFontSizeFactor(getBrowserFontSizeFactor());\n                }),\n        []\n    );\n\n    return { browserFontSizeFactor };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAC,eAAA,CAAAJ,OAAA;AAEaK,OAAA,CAAAC,wBAAwB,GAAG,IAAAH,UAAA,CAAAI,OAAO,EAAC;EAE5C;EACA,IAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAE;EAE3C,IAAAC,QAAQ,GAAKH,WAAW,CAACI,KAAK,CAAAD,QAAtB;EAEhBH,WAAW,CAACI,KAAK,CAACD,QAAQ,GAAG,MAAM;EAEnC,IAAME,qBAAqB,GACvBC,QAAQ,CACJC,MAAM,CAACC,gBAAgB,CAACR,WAAW,EAAE,IAAI,CAAC,CACrCS,gBAAgB,CAAC,WAAW,CAAC,CAC7BC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAC1B,GAAG,EAAE;EAEVV,WAAW,CAACI,KAAK,CAACD,QAAQ,GAAGA,QAAQ;EAErC,OAAOE,qBAAqB;AAEhC,CAAC,CAAC;AAEF,SAAgBM,wBAAwBA,CAAA;EAE9B,IAAAC,EAAA,GAAAC,MAAA,CAAoD,IAAApB,OAAA,CAAAqB,QAAQ,EAAC;MAAM,OACrEjB,OAAA,CAAAC,wBAAwB,CAACiB,KAAK,EAAE,EAChC,IAAAlB,OAAA,CAAAC,wBAAwB,GAAE;IAF2C,CAGxE,CAAC;IAHKO,qBAAqB,GAAAO,EAAA;IAAEI,wBAAwB,GAAAJ,EAAA,GAGpD;EAEF,IAAArB,OAAA,CAAA0B,MAAM,EACF,UAAAC,GAAG;IACC,OAAAxB,KAAA,CAAAyB,GAAG,CAACC,IAAI,CAACF,GAAG,EAAEX,MAAM,EAAE,OAAO,CAAC,CACzBc,MAAM,CAAC;MACJxB,OAAA,CAAAC,wBAAwB,CAACiB,KAAK,EAAE;MAChCC,wBAAwB,CAAC,IAAAnB,OAAA,CAAAC,wBAAwB,GAAE,CAAC;IACxD,CAAC,CAAC;EAJN,CAIM,EACV,EAAE,CACL;EAED,OAAO;IAAEO,qBAAqB,EAAAA;EAAA,CAAE;AACpC;AAlBAR,OAAA,CAAAc,wBAAA,GAAAA,wBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}