{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/* eslint-disable @typescript-eslint/no-namespace */\nimport { memo } from \"react\";\nimport { makeStyles, Text } from \"../theme\";\nimport { GlLogo } from \"../utils/GlLogo\";\nimport { GlCard } from \"./GlCard\";\nimport { breakpointsValues } from \"../theme\";\nimport { GlButton } from \"../utils/GlButton\";\nexport var GlLogoCard = memo(function (props) {\n  var className = props.className,\n    iconUrls = props.iconUrls,\n    paragraph = props.paragraph,\n    title = props.title,\n    buttonLabel = props.buttonLabel,\n    overlapIcons = props.overlapIcons,\n    link = props.link;\n  var _a = useStyles({\n      \"overlapIcons\": overlapIcons !== null && overlapIcons !== void 0 ? overlapIcons : false\n    }, {\n      props: props\n    }),\n    classes = _a.classes,\n    cx = _a.cx,\n    css = _a.css;\n  return _jsxs(GlCard, __assign({\n    link: link,\n    className: cx(classes.root, className)\n  }, {\n    children: [iconUrls && _jsx(\"div\", __assign({\n      className: classes.iconWrapper\n    }, {\n      children: iconUrls.map(function (url, index) {\n        return _jsx(GlLogo, {\n          className: cx(classes.icon, css({\n            //\"zIndex\": iconUrls.length - index,\n            //\"order\": iconUrls.length - index\n          })),\n          logoUrl: url\n        }, index);\n      }).reverse()\n    })), _jsxs(\"div\", __assign({\n      className: classes.textWrapper\n    }, {\n      children: [title !== undefined && _jsx(Text, __assign({\n        typo: \"section heading\",\n        className: classes.title\n      }, {\n        children: title\n      })), paragraph !== undefined && _jsx(Text, __assign({\n        typo: \"body 1\",\n        className: classes.paragraph\n      }, {\n        children: paragraph\n      }))]\n    })), buttonLabel !== undefined && _jsx(GlButton, __assign({\n      type: \"submit\",\n      href: link === null || link === void 0 ? void 0 : link.href,\n      variant: \"secondary\",\n      onClick: link === null || link === void 0 ? void 0 : link.onClick,\n      className: classes.button\n    }, {\n      children: buttonLabel\n    }))]\n  }));\n});\nvar useStyles = makeStyles({\n  \"name\": {\n    GlLogoCard: GlLogoCard\n  }\n})(function (theme, _a) {\n  var overlapIcons = _a.overlapIcons;\n  return {\n    \"root\": {\n      \"padding\": theme.spacing({\n        \"rightLeft\": 3,\n        \"topBottom\": 4\n      }),\n      \"boxShadow\": theme.shadows[1],\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"justifyContent\": \"space-between\",\n      \"alignItems\": \"center\",\n      \"margin\": function () {\n        if (theme.windowInnerWidth >= breakpointsValues.lg) {\n          return undefined;\n        }\n        return theme.spacing(1);\n      }()\n    },\n    \"iconWrapper\": __assign({\n      \"display\": \"flex\",\n      \"alignItems\": \"center\",\n      \"transform\": \"rotate(180deg)\"\n    }, overlapIcons ? {\n      \"marginLeft\": -theme.spacing(3)\n    } : {}),\n    \"icon\": __assign(__assign({\n      \"transform\": \"rotate(180deg)\"\n    }, !overlapIcons ? __assign({}, theme.spacing.rightLeft(\"margin\", \"\".concat(theme.spacing(1), \"px\"))) : {\n      \"marginLeft\": -theme.spacing(3)\n    }), function () {\n      var value = function () {\n        if (theme.windowInnerWidth >= breakpointsValues.lg) {\n          return 50;\n        }\n        return 40;\n      }();\n      return {\n        \"width\": value,\n        \"fill\": theme.colors.palette.focus.main,\n        \"& svg\": {\n          \"width\": value,\n          \"height\": value\n        }\n      };\n    }()),\n    \"title\": {\n      \"marginTop\": theme.spacing(4)\n    },\n    \"paragraph\": {\n      \"marginTop\": theme.spacing(4)\n    },\n    \"textWrapper\": {\n      \"textAlign\": \"center\",\n      \"marginBottom\": theme.spacing(4)\n    },\n    \"button\": {}\n  };\n});","map":{"version":3,"names":["memo","makeStyles","Text","GlLogo","GlCard","breakpointsValues","GlButton","GlLogoCard","props","className","iconUrls","paragraph","title","buttonLabel","overlapIcons","link","_a","useStyles","classes","cx","css","_jsxs","__assign","root","children","_jsx","iconWrapper","map","url","index","icon","logoUrl","reverse","textWrapper","undefined","typo","type","href","variant","onClick","button","theme","spacing","shadows","windowInnerWidth","lg","rightLeft","concat","value","colors","palette","focus","main"],"sources":["C:\\Users\\prana\\repos\\personalgpt\\.yarn\\__virtual__\\gitlanding-virtual-07e3485447\\3\\AppData\\Local\\Yarn\\Berry\\cache\\gitlanding-npm-0.23.25-390b40ced8-10c0.zip\\node_modules\\gitlanding\\src\\GlCards\\GlLogoCard.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-namespace */\nimport { memo } from \"react\";\nimport { makeStyles, Text } from \"../theme\";\nimport { GlLogo } from \"../utils/GlLogo\";\nimport { GlCard } from \"./GlCard\";\nimport type { GlCardProps } from \"./GlCard\";\nimport { breakpointsValues } from \"../theme\";\nimport { GlButton } from \"../utils/GlButton\";\n\nexport type GlLogoCardProps = GlCardProps & {\n    iconUrls?: string[];\n    title?: string;\n    paragraph?: string;\n    buttonLabel?: string;\n    overlapIcons?: boolean;\n    classes?: Partial<ReturnType<typeof useStyles>[\"classes\"]>;\n};\n\nexport const GlLogoCard = memo((props: GlLogoCardProps) => {\n    const {\n        className,\n        iconUrls,\n        paragraph,\n        title,\n        buttonLabel,\n        overlapIcons,\n        link,\n    } = props;\n\n    const { classes, cx, css } = useStyles(\n        {\n            \"overlapIcons\": overlapIcons ?? false,\n        },\n        { props },\n    );\n\n    return (\n        <GlCard link={link} className={cx(classes.root, className)}>\n            {iconUrls && (\n                <div className={classes.iconWrapper}>\n                    {iconUrls\n                        .map((url, index) => (\n                            <GlLogo\n                                className={cx(\n                                    classes.icon,\n                                    css({\n                                        //\"zIndex\": iconUrls.length - index,\n                                        //\"order\": iconUrls.length - index\n                                    }),\n                                )}\n                                logoUrl={url}\n                                key={index}\n                            />\n                        ))\n                        .reverse()}\n                </div>\n            )}\n\n            <div className={classes.textWrapper}>\n                {title !== undefined && (\n                    <Text typo=\"section heading\" className={classes.title}>\n                        {title}\n                    </Text>\n                )}\n                {paragraph !== undefined && (\n                    <Text typo=\"body 1\" className={classes.paragraph}>\n                        {paragraph}\n                    </Text>\n                )}\n            </div>\n\n            {buttonLabel !== undefined && (\n                <GlButton\n                    type=\"submit\"\n                    href={link?.href}\n                    variant=\"secondary\"\n                    onClick={link?.onClick}\n                    className={classes.button}\n                >\n                    {buttonLabel}\n                </GlButton>\n            )}\n        </GlCard>\n    );\n});\n\nconst useStyles = makeStyles<{\n    overlapIcons: boolean;\n}>({ \"name\": { GlLogoCard } })((theme, { overlapIcons }) => ({\n    \"root\": {\n        \"padding\": theme.spacing({\n            \"rightLeft\": 3,\n            \"topBottom\": 4,\n        }),\n        \"boxShadow\": theme.shadows[1],\n        \"display\": \"flex\",\n        \"flexDirection\": \"column\",\n        \"justifyContent\": \"space-between\",\n        \"alignItems\": \"center\",\n        \"margin\": (() => {\n            if (theme.windowInnerWidth >= breakpointsValues.lg) {\n                return undefined;\n            }\n\n            return theme.spacing(1);\n        })(),\n    },\n    \"iconWrapper\": {\n        \"display\": \"flex\",\n        \"alignItems\": \"center\",\n        \"transform\": \"rotate(180deg)\",\n        ...(overlapIcons\n            ? {\n                  \"marginLeft\": -theme.spacing(3),\n              }\n            : {}),\n    },\n\n    \"icon\": {\n        \"transform\": \"rotate(180deg)\",\n        ...(!overlapIcons\n            ? {\n                  ...theme.spacing.rightLeft(\"margin\", `${theme.spacing(1)}px`),\n              }\n            : {\n                  \"marginLeft\": -theme.spacing(3),\n              }),\n        ...(() => {\n            const value = (() => {\n                if (theme.windowInnerWidth >= breakpointsValues.lg) {\n                    return 50;\n                }\n\n                return 40;\n            })();\n\n            return {\n                \"width\": value,\n                \"fill\": theme.colors.palette.focus.main,\n                \"& svg\": {\n                    \"width\": value,\n                    \"height\": value,\n                },\n            };\n        })(),\n    },\n    \"title\": {\n        \"marginTop\": theme.spacing(4),\n    },\n    \"paragraph\": {\n        \"marginTop\": theme.spacing(4),\n    },\n    \"textWrapper\": {\n        \"textAlign\": \"center\",\n        \"marginBottom\": theme.spacing(4),\n    },\n    \"button\": {},\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}