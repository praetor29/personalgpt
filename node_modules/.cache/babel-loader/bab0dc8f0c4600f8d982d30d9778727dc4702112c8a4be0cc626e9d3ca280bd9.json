{"ast":null,"code":"\"use strict\";\n\nvar isValue = require(\"type/value/is\"),\n  isPlainFunction = require(\"type/plain-function/is\"),\n  assign = require(\"es5-ext/object/assign\"),\n  normalizeOpts = require(\"es5-ext/object/normalize-options\"),\n  contains = require(\"es5-ext/string/#/contains\");\nvar d = module.exports = function (dscr, value /*, options*/) {\n  var c, e, w, options, desc;\n  if (arguments.length < 2 || typeof dscr !== \"string\") {\n    options = value;\n    value = dscr;\n    dscr = null;\n  } else {\n    options = arguments[2];\n  }\n  if (isValue(dscr)) {\n    c = contains.call(dscr, \"c\");\n    e = contains.call(dscr, \"e\");\n    w = contains.call(dscr, \"w\");\n  } else {\n    c = w = true;\n    e = false;\n  }\n  desc = {\n    value: value,\n    configurable: c,\n    enumerable: e,\n    writable: w\n  };\n  return !options ? desc : assign(normalizeOpts(options), desc);\n};\nd.gs = function (dscr, get, set /*, options*/) {\n  var c, e, options, desc;\n  if (typeof dscr !== \"string\") {\n    options = set;\n    set = get;\n    get = dscr;\n    dscr = null;\n  } else {\n    options = arguments[3];\n  }\n  if (!isValue(get)) {\n    get = undefined;\n  } else if (!isPlainFunction(get)) {\n    options = get;\n    get = set = undefined;\n  } else if (!isValue(set)) {\n    set = undefined;\n  } else if (!isPlainFunction(set)) {\n    options = set;\n    set = undefined;\n  }\n  if (isValue(dscr)) {\n    c = contains.call(dscr, \"c\");\n    e = contains.call(dscr, \"e\");\n  } else {\n    c = true;\n    e = false;\n  }\n  desc = {\n    get: get,\n    set: set,\n    configurable: c,\n    enumerable: e\n  };\n  return !options ? desc : assign(normalizeOpts(options), desc);\n};","map":{"version":3,"names":["isValue","require","isPlainFunction","assign","normalizeOpts","contains","d","module","exports","dscr","value","c","e","w","options","desc","arguments","length","call","configurable","enumerable","writable","gs","get","set","undefined"],"sources":["C:/Users/prana/AppData/Local/Yarn/Berry/cache/d-npm-1.0.1-64afbbc689-10c0.zip/node_modules/d/index.js"],"sourcesContent":["\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}