{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n};\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOnyxiaSplashScreenLogo = exports.createSplashScreen = exports.useSplashScreen = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar react_1 = require(\"react\");\nvar color_1 = __importDefault(require(\"color\"));\nvar hooks_1 = require(\"evt/hooks\");\nvar useGlobalState_1 = require(\"powerhooks/useGlobalState\");\nvar useConstCallback_1 = require(\"powerhooks/useConstCallback\");\nvar compat_1 = require(\"tss-react/compat\");\nvar evt_1 = require(\"evt\");\nvar id_1 = require(\"tsafe/id\");\nvar useGuaranteedMemo_1 = require(\"powerhooks/useGuaranteedMemo\");\nvar runExclusive = __importStar(require(\"run-exclusive\"));\nvar OnyxiaLogo_1 = require(\"../assets/svg/OnyxiaLogo\");\nvar useConst_1 = require(\"powerhooks/useConst\");\nvar ViewPortAdapter_1 = require(\"powerhooks/ViewPortAdapter\");\nvar statefulObservableToStatefulEvt_1 = require(\"powerhooks/tools/StatefulObservable/statefulObservableToStatefulEvt\");\nvar fadeOutDuration = 700;\nvar minimumDisplayDuration = 1000;\nvar _a = function () {\n    var evtDisplayState = evt_1.Evt.create({\n      \"count\": 1,\n      \"isTransparencyEnabled\": false,\n      \"prevTime\": 0,\n      \"onHiddens\": (0, id_1.id)([])\n    });\n    var globalHideSplashScreen = function () {\n      var getDoUseDelay = function () {\n        var $lastDelayedTime = (0, useGlobalState_1.createUseGlobalState)({\n          \"name\": \"lastDelayedTime\",\n          \"initialState\": 0,\n          \"doPersistAcrossReloads\": true\n        }).$lastDelayedTime;\n        var evtLastDelayedTime = (0, statefulObservableToStatefulEvt_1.statefulObservableToStatefulEvt)({\n          \"statefulObservable\": $lastDelayedTime\n        });\n        function getDoUseDelay() {\n          var doUseDelay = Date.now() - evtLastDelayedTime.state > 30000;\n          if (doUseDelay) {\n            evtLastDelayedTime.state = Date.now();\n          }\n          return doUseDelay;\n        }\n        return {\n          getDoUseDelay: getDoUseDelay\n        };\n      }().getDoUseDelay;\n      var next = runExclusive.build(function () {\n        return __awaiter(void 0, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!getDoUseDelay()) return [3 /*break*/, 2];\n                return [4 /*yield*/, new Promise(function (resolve) {\n                  return setTimeout(resolve, minimumDisplayDuration);\n                })];\n              case 1:\n                _a.sent();\n                _a.label = 2;\n              case 2:\n                evtDisplayState.state = __assign(__assign({}, evtDisplayState.state), {\n                  \"prevTime\": Date.now()\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      });\n\n      function globalHideSplashScreen() {\n        return __awaiter(this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            evtDisplayState.state.count = Math.max(evtDisplayState.state.count - 1, 0);\n            if (runExclusive.isRunning(next)) {\n              return [2 /*return*/];\n            }\n\n            next();\n            return [2 /*return*/];\n          });\n        });\n      }\n\n      return {\n        globalHideSplashScreen: globalHideSplashScreen\n      };\n    }().globalHideSplashScreen;\n    function globalShowSplashScreen(params) {\n      evtDisplayState.state = {\n        \"count\": evtDisplayState.state.count + 1,\n        \"isTransparencyEnabled\": params.enableTransparency,\n        \"prevTime\": Date.now(),\n        \"onHiddens\": []\n      };\n    }\n    function useSplashScreenStatusInternal() {\n      (0, hooks_1.useRerenderOnStateChange)(evtDisplayState);\n      var _a = (0, useGuaranteedMemo_1.useGuaranteedMemo)(function () {\n          return {\n            \"isSplashScreenShown\": evtDisplayState.state.count > 0,\n            \"isTransparencyEnabled\": evtDisplayState.state.isTransparencyEnabled\n          };\n        }, [evtDisplayState.state]),\n        isSplashScreenShown = _a.isSplashScreenShown,\n        isTransparencyEnabled = _a.isTransparencyEnabled;\n      return {\n        isSplashScreenShown: isSplashScreenShown,\n        isTransparencyEnabled: isTransparencyEnabled\n      };\n    }\n    function useSplashScreen(params) {\n      if ((params === null || params === void 0 ? void 0 : params.fadeOutDuration) !== undefined) {\n        fadeOutDuration = params.fadeOutDuration;\n      }\n      if ((params === null || params === void 0 ? void 0 : params.minimumDisplayDuration) !== undefined) {\n        minimumDisplayDuration = params.minimumDisplayDuration;\n      }\n      var isUsingSplashScreen = (0, react_1.useContext)(context);\n      (0, react_1.useEffect)(function () {\n        var onHidden = (params !== null && params !== void 0 ? params : {}).onHidden;\n        if (onHidden === undefined) {\n          return;\n        }\n        if (!isUsingSplashScreen) {\n          onHidden();\n          return;\n        }\n        evtDisplayState.state.onHiddens.push(onHidden);\n      }, []);\n      var _a = function useClosure() {\n          var _this = this;\n          var countRef = (0, react_1.useRef)(0);\n          var showSplashScreen = (0, useConstCallback_1.useConstCallback)(function (_a) {\n            var enableTransparency = _a.enableTransparency;\n            countRef.current++;\n            globalShowSplashScreen({\n              enableTransparency: enableTransparency\n            });\n          });\n          var hideSplashScreen = (0, useConstCallback_1.useConstCallback)(function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (countRef.current === 0) {\n                      return [2 /*return*/];\n                    }\n\n                    countRef.current--;\n                    return [4 /*yield*/, globalHideSplashScreen()];\n                  case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n                }\n              });\n            });\n          });\n\n          return {\n            showSplashScreen: showSplashScreen,\n            hideSplashScreen: hideSplashScreen\n          };\n        }(),\n        showSplashScreen = _a.showSplashScreen,\n        hideSplashScreen = _a.hideSplashScreen;\n      var _b = useSplashScreenStatusInternal(),\n        isSplashScreenShown = _b.isSplashScreenShown,\n        isTransparencyEnabled = _b.isTransparencyEnabled;\n      return {\n        isSplashScreenShown: isSplashScreenShown,\n        isTransparencyEnabled: isTransparencyEnabled,\n        \"hideRootSplashScreen\": globalHideSplashScreen,\n        showSplashScreen: showSplashScreen,\n        hideSplashScreen: hideSplashScreen\n      };\n    }\n    function useSplashScreenStatus() {\n      var _this = this;\n      var _a = useSplashScreenStatusInternal(),\n        isSplashScreenShown = _a.isSplashScreenShown,\n        isTransparencyEnabled = _a.isTransparencyEnabled;\n      (0, react_1.useEffect)(function () {\n        var _a;\n        if (isSplashScreenShown) {\n          return;\n        }\n        var delayLeft = (_a = [fadeOutDuration - (Date.now() - evtDisplayState.state.prevTime)].filter(function (v) {\n          return v > 0;\n        })[0]) !== null && _a !== void 0 ? _a : 0;\n        var timer;\n        (function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4 /*yield*/, new Promise(function (resolve) {\n                    return timer = setTimeout(resolve, delayLeft);\n                  })];\n                case 1:\n                  _a.sent();\n                  evtDisplayState.state.onHiddens.forEach(function (onHidden) {\n                    return onHidden();\n                  });\n                  evtDisplayState.state.onHiddens = [];\n                  return [2 /*return*/];\n              }\n            });\n          });\n        })();\n\n        return function () {\n          return clearTimeout(timer);\n        };\n      }, [isSplashScreenShown]);\n      return {\n        isSplashScreenShown: isSplashScreenShown,\n        isTransparencyEnabled: isTransparencyEnabled\n      };\n    }\n    return {\n      useSplashScreen: useSplashScreen,\n      useSplashScreenStatus: useSplashScreenStatus\n    };\n  }(),\n  useSplashScreen = _a.useSplashScreen,\n  useSplashScreenStatus = _a.useSplashScreenStatus;\nexports.useSplashScreen = useSplashScreen;\nvar context = (0, react_1.createContext)(false);\nfunction createSplashScreen(params) {\n  var useTheme = params.useTheme;\n  var makeStyles = (0, compat_1.createMakeStyles)({\n    useTheme: useTheme\n  }).makeStyles;\n  function SplashScreen(props) {\n    var _this = this;\n    var children = props.children,\n      Logo = props.Logo;\n    if ((props === null || props === void 0 ? void 0 : props.fadeOutDuration) !== undefined) {\n      fadeOutDuration = props.fadeOutDuration;\n    }\n    if ((props === null || props === void 0 ? void 0 : props.minimumDisplayDuration) !== undefined) {\n      minimumDisplayDuration = props.minimumDisplayDuration;\n    }\n    var _a = useSplashScreenStatus(),\n      isSplashScreenShown = _a.isSplashScreenShown,\n      isTransparencyEnabled = _a.isTransparencyEnabled;\n    {\n      var defaultOverflow_1 = (0, useConst_1.useConst)(function () {\n        return document.body.style.overflow;\n      });\n      (0, react_1.useEffect)(function () {\n        document.body.style.overflow = isSplashScreenShown ? \"hidden\" : defaultOverflow_1;\n      }, [isSplashScreenShown]);\n    }\n    var _b = __read((0, react_1.useState)(false), 2),\n      isFadingOut = _b[0],\n      setIsFadingOut = _b[1];\n    var _c = __read((0, react_1.useState)(true), 2),\n      isVisible = _c[0],\n      setIsVisible = _c[1];\n    var isViewPortAdapterEnabled = function useClosure() {\n      var viewPortState = (0, ViewPortAdapter_1.useViewPortState)().viewPortState;\n      var isViewPortAdapterEnabled = viewPortState !== undefined;\n      return {\n        isViewPortAdapterEnabled: isViewPortAdapterEnabled\n      };\n    }().isViewPortAdapterEnabled;\n    var classes = useStyles({\n      isVisible: isVisible,\n      isFadingOut: isFadingOut,\n      isTransparencyEnabled: isTransparencyEnabled,\n      isViewPortAdapterEnabled: isViewPortAdapterEnabled\n    }).classes;\n    (0, react_1.useEffect)(function () {\n      var timer = setTimeout(function () {\n        /* No action */\n      }, 0);\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!isSplashScreenShown) return [3 /*break*/, 1];\n                setIsFadingOut(false);\n                setIsVisible(true);\n                return [3 /*break*/, 3];\n              case 1:\n                setIsFadingOut(true);\n                return [4 /*yield*/, new Promise(function (resolve) {\n                  return timer = setTimeout(resolve, fadeOutDuration);\n                })];\n              case 2:\n                _a.sent();\n                setIsFadingOut(false);\n                setIsVisible(false);\n                _a.label = 3;\n              case 3:\n                return [2 /*return*/];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        return clearTimeout(timer);\n      };\n    }, [isSplashScreenShown]);\n    return (0, jsx_runtime_1.jsxs)(context.Provider, __assign({\n      value: true\n    }, {\n      children: [(0, jsx_runtime_1.jsx)(\"div\", __assign({\n        className: classes.root\n      }, {\n        children: (0, jsx_runtime_1.jsx)(Logo, {})\n      })), children]\n    }));\n  }\n  var useStyles = makeStyles({\n    \"name\": {\n      SplashScreen: SplashScreen\n    }\n  })(function (theme, _a) {\n    var isVisible = _a.isVisible,\n      isFadingOut = _a.isFadingOut,\n      isTransparencyEnabled = _a.isTransparencyEnabled,\n      isViewPortAdapterEnabled = _a.isViewPortAdapterEnabled;\n    return {\n      \"root\": {\n        \"width\": \"100%\",\n        \"height\": isViewPortAdapterEnabled ? \"100%\" : \"100vh\",\n        \"position\": \"fixed\",\n        \"top\": 0,\n        \"left\": 0,\n        \"zIndex\": 10,\n        \"backgroundColor\": function () {\n          var color = new color_1.default(theme.colors.useCases.surfaces.background).rgb();\n          return color.alpha(isTransparencyEnabled ? 0.6 : color.valpha).string();\n        }(),\n        \"backdropFilter\": isTransparencyEnabled ? \"blur(10px)\" : undefined,\n        \"display\": \"flex\",\n        \"alignItems\": \"center\",\n        \"justifyContent\": \"center\",\n        \"visibility\": isVisible ? \"visible\" : \"hidden\",\n        \"opacity\": isFadingOut ? 0 : 1,\n        \"transition\": \"opacity ease-in-out \".concat(fadeOutDuration, \"ms\")\n      }\n    };\n  });\n  return {\n    SplashScreen: SplashScreen\n  };\n}\nexports.createSplashScreen = createSplashScreen;\n/**\n * You have to create your own version of this component\n * you are expected to size it in percentage.\n */\nfunction createOnyxiaSplashScreenLogo(params) {\n  var useTheme = params.useTheme;\n  var makeStyles = (0, compat_1.createMakeStyles)({\n    useTheme: useTheme\n  }).makeStyles;\n  var OnyxiaSplashScreenLogo = (0, react_1.memo)(function () {\n    var classes = useStyles().classes;\n    return (0, jsx_runtime_1.jsx)(OnyxiaLogo_1.OnyxiaLogoSvg, {\n      className: classes.root\n    });\n  });\n  var useStyles = makeStyles({\n    \"name\": {\n      OnyxiaSplashScreenLogo: OnyxiaSplashScreenLogo\n    }\n  })(function (theme) {\n    return {\n      \"root\": {\n        \"height\": \"20%\",\n        \"fill\": theme.colors.useCases.typography.textFocus,\n        \"& g\": {\n          \"opacity\": 0,\n          \"animation\": \"\".concat((0, compat_1.keyframes)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n                            60%, 100% {\\n                                opacity: 0;\\n                            }\\n                            0% {\\n                                opacity: 0;\\n                            }\\n                            40% {\\n                                opacity: 1;\\n                            }\\n                            \"], [\"\\n                            60%, 100% {\\n                                opacity: 0;\\n                            }\\n                            0% {\\n                                opacity: 0;\\n                            }\\n                            40% {\\n                                opacity: 1;\\n                            }\\n                            \"]))), \" 3.5s infinite ease-in-out\"),\n          \"&:nth-of-type(1)\": {\n            \"animationDelay\": \".4s\"\n          },\n          \"&:nth-of-type(2)\": {\n            \"animationDelay\": \".8s\"\n          },\n          \"&:nth-of-type(3)\": {\n            \"animationDelay\": \"1.2s\"\n          }\n        }\n      }\n    };\n  });\n  return {\n    OnyxiaSplashScreenLogo: OnyxiaSplashScreenLogo\n  };\n}\nexports.createOnyxiaSplashScreenLogo = createOnyxiaSplashScreenLogo;\nvar templateObject_1;","map":{"version":3,"names":["react_1","require","color_1","__importDefault","hooks_1","useGlobalState_1","useConstCallback_1","compat_1","evt_1","id_1","useGuaranteedMemo_1","runExclusive","__importStar","OnyxiaLogo_1","useConst_1","ViewPortAdapter_1","statefulObservableToStatefulEvt_1","fadeOutDuration","minimumDisplayDuration","_a","evtDisplayState","Evt","create","id","globalHideSplashScreen","getDoUseDelay","$lastDelayedTime","createUseGlobalState","evtLastDelayedTime","statefulObservableToStatefulEvt","doUseDelay","Date","now","state","next","build","__awaiter","Promise","resolve","setTimeout","sent","__assign","count","Math","max","isRunning","globalShowSplashScreen","params","enableTransparency","useSplashScreenStatusInternal","useRerenderOnStateChange","useGuaranteedMemo","isTransparencyEnabled","isSplashScreenShown","useSplashScreen","undefined","isUsingSplashScreen","useContext","context","useEffect","onHidden","onHiddens","push","useClosure","_this","countRef","useRef","showSplashScreen","useConstCallback","current","hideSplashScreen","_b","useSplashScreenStatus","delayLeft","prevTime","filter","v","timer","forEach","clearTimeout","exports","createContext","createSplashScreen","useTheme","makeStyles","createMakeStyles","SplashScreen","props","children","Logo","defaultOverflow_1","useConst","document","body","style","overflow","__read","useState","isFadingOut","setIsFadingOut","_c","isVisible","setIsVisible","isViewPortAdapterEnabled","viewPortState","useViewPortState","classes","useStyles","jsx_runtime_1","jsxs","Provider","value","jsx","className","root","theme","color","default","colors","useCases","surfaces","background","rgb","alpha","valpha","string","concat","createOnyxiaSplashScreenLogo","OnyxiaSplashScreenLogo","memo","OnyxiaLogoSvg","typography","textFocus","keyframes","templateObject_1","__makeTemplateObject"],"sources":["C:\\Users\\prana\\repos\\personalgpt\\.yarn\\__virtual__\\onyxia-ui-virtual-5c2a1ec994\\3\\AppData\\Local\\Yarn\\Berry\\cache\\onyxia-ui-npm-0.47.23-cc0c9aaf2a-10c0.zip\\node_modules\\onyxia-ui\\src\\lib\\SplashScreen.tsx"],"sourcesContent":["import {\n    useState,\n    useEffect,\n    useRef,\n    useContext,\n    createContext,\n    memo,\n} from \"react\";\nimport type { ReactNode } from \"react\";\nimport Color from \"color\";\nimport { useRerenderOnStateChange } from \"evt/hooks\";\nimport { createUseGlobalState } from \"powerhooks/useGlobalState\";\nimport { useConstCallback } from \"powerhooks/useConstCallback\";\nimport { createMakeStyles, keyframes } from \"tss-react/compat\";\nimport type { Theme } from \"./ThemeProvider\";\nimport { Evt } from \"evt\";\nimport { id } from \"tsafe/id\";\nimport { useGuaranteedMemo } from \"powerhooks/useGuaranteedMemo\";\nimport type { ReactComponent } from \"../tools/ReactComponent\";\nimport * as runExclusive from \"run-exclusive\";\nimport { OnyxiaLogoSvg } from \"../assets/svg/OnyxiaLogo\";\nimport { useConst } from \"powerhooks/useConst\";\nimport { useViewPortState } from \"powerhooks/ViewPortAdapter\";\nimport { statefulObservableToStatefulEvt } from \"powerhooks/tools/StatefulObservable/statefulObservableToStatefulEvt\";\n\nlet fadeOutDuration = 700;\nlet minimumDisplayDuration = 1000;\n\nconst { useSplashScreen, useSplashScreenStatus } = (() => {\n    const evtDisplayState = Evt.create({\n        \"count\": 1,\n        \"isTransparencyEnabled\": false,\n        \"prevTime\": 0,\n        \"onHiddens\": id<(() => void)[]>([]),\n    });\n\n    const { globalHideSplashScreen } = (() => {\n        const { getDoUseDelay } = (() => {\n            const { $lastDelayedTime } = createUseGlobalState({\n                \"name\": \"lastDelayedTime\",\n                \"initialState\": 0,\n                \"doPersistAcrossReloads\": true,\n            });\n\n            const evtLastDelayedTime = statefulObservableToStatefulEvt<number>({\n                \"statefulObservable\": $lastDelayedTime,\n            });\n\n            function getDoUseDelay() {\n                const doUseDelay =\n                    Date.now() - evtLastDelayedTime.state > 30000;\n\n                if (doUseDelay) {\n                    evtLastDelayedTime.state = Date.now();\n                }\n\n                return doUseDelay;\n            }\n\n            return { getDoUseDelay };\n        })();\n\n        const next = runExclusive.build(async () => {\n            if (getDoUseDelay()) {\n                await new Promise(resolve =>\n                    setTimeout(resolve, minimumDisplayDuration),\n                );\n            }\n\n            evtDisplayState.state = {\n                ...evtDisplayState.state,\n                \"prevTime\": Date.now(),\n            };\n        });\n\n        async function globalHideSplashScreen() {\n            evtDisplayState.state.count = Math.max(\n                evtDisplayState.state.count - 1,\n                0,\n            );\n\n            if (runExclusive.isRunning(next)) {\n                return;\n            }\n\n            next();\n        }\n\n        return { globalHideSplashScreen };\n    })();\n\n    function globalShowSplashScreen(params: { enableTransparency: boolean }) {\n        evtDisplayState.state = {\n            \"count\": evtDisplayState.state.count + 1,\n            \"isTransparencyEnabled\": params.enableTransparency,\n            \"prevTime\": Date.now(),\n            \"onHiddens\": [],\n        };\n    }\n\n    function useSplashScreenStatusInternal() {\n        useRerenderOnStateChange(evtDisplayState);\n\n        const { isSplashScreenShown, isTransparencyEnabled } =\n            useGuaranteedMemo(\n                () => ({\n                    \"isSplashScreenShown\": evtDisplayState.state.count > 0,\n                    \"isTransparencyEnabled\":\n                        evtDisplayState.state.isTransparencyEnabled,\n                }),\n                [evtDisplayState.state],\n            );\n\n        return {\n            isSplashScreenShown,\n            isTransparencyEnabled,\n        };\n    }\n\n    function useSplashScreen(params?: {\n        onHidden?(): void;\n        fadeOutDuration?: number;\n        minimumDisplayDuration?: number;\n    }) {\n        if (params?.fadeOutDuration !== undefined) {\n            fadeOutDuration = params.fadeOutDuration;\n        }\n\n        if (params?.minimumDisplayDuration !== undefined) {\n            minimumDisplayDuration = params.minimumDisplayDuration;\n        }\n\n        const isUsingSplashScreen = useContext(context);\n\n        useEffect(() => {\n            const { onHidden } = params ?? {};\n\n            if (onHidden === undefined) {\n                return;\n            }\n\n            if (!isUsingSplashScreen) {\n                onHidden();\n                return;\n            }\n\n            evtDisplayState.state.onHiddens.push(onHidden);\n        }, []);\n\n        const { showSplashScreen, hideSplashScreen } = (function useClosure() {\n            const countRef = useRef<number>(0);\n\n            const showSplashScreen = useConstCallback<\n                typeof globalShowSplashScreen\n            >(({ enableTransparency }) => {\n                countRef.current++;\n\n                globalShowSplashScreen({ enableTransparency });\n            });\n\n            const hideSplashScreen = useConstCallback<\n                typeof globalHideSplashScreen\n            >(async () => {\n                if (countRef.current === 0) {\n                    return;\n                }\n\n                countRef.current--;\n\n                await globalHideSplashScreen();\n            });\n\n            return { showSplashScreen, hideSplashScreen };\n        })();\n\n        const { isSplashScreenShown, isTransparencyEnabled } =\n            useSplashScreenStatusInternal();\n\n        return {\n            isSplashScreenShown,\n            isTransparencyEnabled,\n            \"hideRootSplashScreen\": globalHideSplashScreen,\n            showSplashScreen,\n            hideSplashScreen,\n        };\n    }\n\n    function useSplashScreenStatus() {\n        const { isSplashScreenShown, isTransparencyEnabled } =\n            useSplashScreenStatusInternal();\n\n        useEffect(() => {\n            if (isSplashScreenShown) {\n                return;\n            }\n\n            const delayLeft =\n                [\n                    fadeOutDuration -\n                        (Date.now() - evtDisplayState.state.prevTime),\n                ].filter(v => v > 0)[0] ?? 0;\n\n            let timer: ReturnType<typeof setTimeout>;\n\n            (async () => {\n                await new Promise(\n                    resolve => (timer = setTimeout(resolve, delayLeft)),\n                );\n\n                evtDisplayState.state.onHiddens.forEach(onHidden => onHidden());\n\n                evtDisplayState.state.onHiddens = [];\n            })();\n\n            return () => clearTimeout(timer);\n        }, [isSplashScreenShown]);\n\n        return { isSplashScreenShown, isTransparencyEnabled };\n    }\n\n    return { useSplashScreen, useSplashScreenStatus };\n})();\n\nexport { useSplashScreen };\n\nexport type SplashScreenProps = {\n    Logo: ReactComponent;\n    /** Default 700ms */\n    fadeOutDuration?: number;\n    /** Default 1000 (1 second)*/\n    minimumDisplayDuration?: number;\n    children: ReactNode;\n};\n\nconst context = createContext<boolean>(false);\n\nexport function createSplashScreen(params: { useTheme(): Theme }) {\n    const { useTheme } = params;\n\n    const { makeStyles } = createMakeStyles({ useTheme });\n\n    function SplashScreen(props: SplashScreenProps) {\n        const { children, Logo } = props;\n\n        if (props?.fadeOutDuration !== undefined) {\n            fadeOutDuration = props.fadeOutDuration;\n        }\n\n        if (props?.minimumDisplayDuration !== undefined) {\n            minimumDisplayDuration = props.minimumDisplayDuration;\n        }\n\n        const { isSplashScreenShown, isTransparencyEnabled } =\n            useSplashScreenStatus();\n\n        {\n            const defaultOverflow = useConst(\n                () => document.body.style.overflow,\n            );\n\n            useEffect(() => {\n                document.body.style.overflow = isSplashScreenShown\n                    ? \"hidden\"\n                    : defaultOverflow;\n            }, [isSplashScreenShown]);\n        }\n\n        const [isFadingOut, setIsFadingOut] = useState(false);\n        const [isVisible, setIsVisible] = useState(true);\n\n        const { isViewPortAdapterEnabled } = (function useClosure() {\n            const { viewPortState } = useViewPortState();\n\n            const isViewPortAdapterEnabled = viewPortState !== undefined;\n\n            return { isViewPortAdapterEnabled };\n        })();\n\n        const { classes } = useStyles({\n            isVisible,\n            isFadingOut,\n            isTransparencyEnabled,\n            isViewPortAdapterEnabled,\n        });\n\n        useEffect(() => {\n            let timer = setTimeout(() => {\n                /* No action */\n            }, 0);\n\n            (async () => {\n                if (isSplashScreenShown) {\n                    setIsFadingOut(false);\n                    setIsVisible(true);\n                } else {\n                    setIsFadingOut(true);\n\n                    await new Promise(\n                        resolve =>\n                            (timer = setTimeout(resolve, fadeOutDuration)),\n                    );\n\n                    setIsFadingOut(false);\n                    setIsVisible(false);\n                }\n            })();\n\n            return () => clearTimeout(timer);\n        }, [isSplashScreenShown]);\n\n        return (\n            <context.Provider value={true}>\n                <div className={classes.root}>\n                    <Logo />\n                </div>\n                {children}\n            </context.Provider>\n        );\n    }\n\n    const useStyles = makeStyles<{\n        isVisible: boolean;\n        isFadingOut: boolean;\n        isTransparencyEnabled: boolean;\n        isViewPortAdapterEnabled: boolean;\n    }>({ \"name\": { SplashScreen } })(\n        (\n            theme,\n            {\n                isVisible,\n                isFadingOut,\n                isTransparencyEnabled,\n                isViewPortAdapterEnabled,\n            },\n        ) => ({\n            \"root\": {\n                \"width\": \"100%\",\n                \"height\": isViewPortAdapterEnabled ? \"100%\" : \"100vh\",\n                \"position\": \"fixed\",\n                \"top\": 0,\n                \"left\": 0,\n                \"zIndex\": 10,\n                \"backgroundColor\": (() => {\n                    const color = new Color(\n                        theme.colors.useCases.surfaces.background,\n                    ).rgb();\n\n                    return color\n                        .alpha(\n                            isTransparencyEnabled ? 0.6 : (color as any).valpha,\n                        )\n                        .string();\n                })(),\n                \"backdropFilter\": isTransparencyEnabled\n                    ? \"blur(10px)\"\n                    : undefined,\n                \"display\": \"flex\",\n                \"alignItems\": \"center\",\n                \"justifyContent\": \"center\",\n                \"visibility\": isVisible ? \"visible\" : \"hidden\",\n                \"opacity\": isFadingOut ? 0 : 1,\n                \"transition\": `opacity ease-in-out ${fadeOutDuration}ms`,\n            },\n        }),\n    );\n\n    return { SplashScreen };\n}\n\n/**\n * You have to create your own version of this component\n * you are expected to size it in percentage.\n */\nexport function createOnyxiaSplashScreenLogo(params: { useTheme(): Theme }) {\n    const { useTheme } = params;\n\n    const { makeStyles } = createMakeStyles({ useTheme });\n\n    const OnyxiaSplashScreenLogo = memo(() => {\n        const { classes } = useStyles();\n\n        return <OnyxiaLogoSvg className={classes.root} />;\n    });\n\n    const useStyles = makeStyles({ \"name\": { OnyxiaSplashScreenLogo } })(\n        theme => ({\n            \"root\": {\n                \"height\": \"20%\",\n                \"fill\": theme.colors.useCases.typography.textFocus,\n                \"& g\": {\n                    \"opacity\": 0,\n                    \"animation\": `${keyframes`\n                            60%, 100% {\n                                opacity: 0;\n                            }\n                            0% {\n                                opacity: 0;\n                            }\n                            40% {\n                                opacity: 1;\n                            }\n                            `} 3.5s infinite ease-in-out`,\n                    \"&:nth-of-type(1)\": {\n                        \"animationDelay\": \".4s\",\n                    },\n                    \"&:nth-of-type(2)\": {\n                        \"animationDelay\": \".8s\",\n                    },\n                    \"&:nth-of-type(3)\": {\n                        \"animationDelay\": \"1.2s\",\n                    },\n                },\n            },\n        }),\n    );\n\n    return { OnyxiaSplashScreenLogo };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}