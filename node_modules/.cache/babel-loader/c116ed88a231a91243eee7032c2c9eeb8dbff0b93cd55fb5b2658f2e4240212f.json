{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.overwriteReadonlyProp = void 0;\n/* eslint-disable no-empty */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar assert_1 = require(\"../assert\");\nvar is_1 = require(\"../is\");\n/**\n * Assign a value to a property even if the object is freezed or if the property is not writable\n * Throw if the assignation fail ( for example if the property is non configurable write: false )\n * */\nvar overwriteReadonlyProp = function (obj, propertyName, value) {\n  try {\n    obj[propertyName] = value;\n  } catch (_a) {}\n  if (obj[propertyName] === value) {\n    return value;\n  }\n  var errorDefineProperty = undefined;\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(obj, propertyName) || {\n    \"enumerable\": true,\n    \"configurable\": true\n  };\n  if (!!propertyDescriptor.get) {\n    throw new Error(\"Probably a wrong ides to overwrite \".concat(String(propertyName), \" getter\"));\n  }\n  try {\n    Object.defineProperty(obj, propertyName, __assign(__assign({}, propertyDescriptor), {\n      value: value\n    }));\n  } catch (error) {\n    (0, assert_1.assert)((0, is_1.is)(error));\n    errorDefineProperty = error;\n  }\n  if (obj[propertyName] !== value) {\n    throw errorDefineProperty || new Error(\"Can't assign\");\n  }\n  return value;\n};\nexports.overwriteReadonlyProp = overwriteReadonlyProp;","map":{"version":3,"names":["assert_1","require","is_1","overwriteReadonlyProp","obj","propertyName","value","_a","errorDefineProperty","undefined","propertyDescriptor","Object","getOwnPropertyDescriptor","get","Error","concat","String","defineProperty","__assign","error","assert","is","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\tsafe-npm-1.6.5-e2f1226ddb-10c0.zip\\node_modules\\tsafe\\src\\lab\\overwriteReadonlyProp.ts"],"sourcesContent":["/* eslint-disable no-empty */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { assert } from \"../assert\";\nimport { is } from \"../is\";\n\n/**\n * Assign a value to a property even if the object is freezed or if the property is not writable\n * Throw if the assignation fail ( for example if the property is non configurable write: false )\n * */\nexport const overwriteReadonlyProp = <T extends { [key: string]: any }, K extends keyof T>(\n    obj: T,\n    propertyName: K,\n    value: T[K],\n): T[K] => {\n    try {\n        obj[propertyName] = value;\n    } catch {}\n\n    if (obj[propertyName] === value) {\n        return value;\n    }\n\n    let errorDefineProperty: Error | undefined = undefined;\n\n    const propertyDescriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(\n        obj,\n        propertyName,\n    ) || {\n        \"enumerable\": true,\n        \"configurable\": true,\n    };\n\n    if (!!propertyDescriptor.get) {\n        throw new Error(`Probably a wrong ides to overwrite ${String(propertyName)} getter`);\n    }\n\n    try {\n        Object.defineProperty(obj, propertyName, {\n            ...propertyDescriptor,\n            value,\n        });\n    } catch (error) {\n        assert(is<Error>(error));\n        errorDefineProperty = error;\n    }\n\n    if (obj[propertyName] !== value) {\n        throw errorDefineProperty || new Error(\"Can't assign\");\n    }\n\n    return value;\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAD,OAAA;AAEA;;;;AAIO,IAAME,qBAAqB,GAAG,SAAAA,CACjCC,GAAM,EACNC,YAAe,EACfC,KAAW;EAEX,IAAI;IACAF,GAAG,CAACC,YAAY,CAAC,GAAGC,KAAK;GAC5B,CAAC,OAAAC,EAAA,EAAM;EAER,IAAIH,GAAG,CAACC,YAAY,CAAC,KAAKC,KAAK,EAAE;IAC7B,OAAOA,KAAK;;EAGhB,IAAIE,mBAAmB,GAAsBC,SAAS;EAEtD,IAAMC,kBAAkB,GAAuBC,MAAM,CAACC,wBAAwB,CAC1ER,GAAG,EACHC,YAAY,CACf,IAAI;IACD,YAAY,EAAE,IAAI;IAClB,cAAc,EAAE;GACnB;EAED,IAAI,CAAC,CAACK,kBAAkB,CAACG,GAAG,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,sCAAAC,MAAA,CAAsCC,MAAM,CAACX,YAAY,CAAC,YAAS,CAAC;;EAGxF,IAAI;IACAM,MAAM,CAACM,cAAc,CAACb,GAAG,EAAEC,YAAY,EAAAa,QAAA,CAAAA,QAAA,KAChCR,kBAAkB;MACrBJ,KAAK,EAAAA;IAAA,GACP;GACL,CAAC,OAAOa,KAAK,EAAE;IACZ,IAAAnB,QAAA,CAAAoB,MAAM,EAAC,IAAAlB,IAAA,CAAAmB,EAAE,EAAQF,KAAK,CAAC,CAAC;IACxBX,mBAAmB,GAAGW,KAAK;;EAG/B,IAAIf,GAAG,CAACC,YAAY,CAAC,KAAKC,KAAK,EAAE;IAC7B,MAAME,mBAAmB,IAAI,IAAIM,KAAK,CAAC,cAAc,CAAC;;EAG1D,OAAOR,KAAK;AAChB,CAAC;AA1CYgB,OAAA,CAAAnB,qBAAqB,GAAAA,qBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}