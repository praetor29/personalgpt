{"ast":null,"code":"import { __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { renderSVG } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform ? buildLayoutProjectionTransformOrigin : undefined);\n  },\n  render: renderSVG\n}));\nexport { svgVisualElement };","map":{"version":3,"names":["__assign","visualElement","scrapeMotionValuesFromProps","htmlConfig","buildSVGAttrs","camelToDash","camelCaseAttributes","isTransformProp","renderSVG","getDefaultValueType","buildLayoutProjectionTransformOrigin","buildLayoutProjectionTransform","svgVisualElement","getBaseTarget","props","key","readValueFromInstance","domElement","_a","default","has","getAttribute","build","_element","renderState","latestValues","projection","layoutState","options","isProjectionTranform","isEnabled","isHydrated","transformTemplate","undefined","render"],"sources":["C:/Users/prana/repos/personalgpt/.yarn/__virtual__/framer-motion-virtual-4606bf46ad/3/AppData/Local/Yarn/Berry/cache/framer-motion-npm-4.1.17-00d2b9950f-10c0.zip/node_modules/framer-motion/dist/es/render/svg/visual-element.js"],"sourcesContent":["import { __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { renderSVG } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,2BAA2B,QAAQ,iCAAiC;AAC7E,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,mBAAmB,QAAQ,6BAA6B;AACjE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,oCAAoC,EAAEC,8BAA8B,QAAQ,6CAA6C;AAElI,IAAIC,gBAAgB,GAAGX,aAAa,CAACD,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEG,UAAU,CAAC,EAAE;EAAEU,aAAa,EAAE,SAAAA,CAAUC,KAAK,EAAEC,GAAG,EAAE;IACvG,OAAOD,KAAK,CAACC,GAAG,CAAC;EACrB,CAAC;EACDC,qBAAqB,EAAE,SAAAA,CAAUC,UAAU,EAAEF,GAAG,EAAE;IAC9C,IAAIG,EAAE;IACN,IAAIX,eAAe,CAACQ,GAAG,CAAC,EAAE;MACtB,OAAO,CAAC,CAACG,EAAE,GAAGT,mBAAmB,CAACM,GAAG,CAAC,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,OAAO,KAAK,CAAC;IACjG;IACAJ,GAAG,GAAG,CAACT,mBAAmB,CAACc,GAAG,CAACL,GAAG,CAAC,GAAGV,WAAW,CAACU,GAAG,CAAC,GAAGA,GAAG;IAC5D,OAAOE,UAAU,CAACI,YAAY,CAACN,GAAG,CAAC;EACvC,CAAC;EACDb,2BAA2B,EAAEA,2BAA2B;EACxDoB,KAAK,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEd,KAAK,EAAE;IAC3F,IAAIe,oBAAoB,GAAGH,UAAU,CAACI,SAAS,IAAIH,WAAW,CAACI,UAAU;IACzE3B,aAAa,CAACoB,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEd,KAAK,CAACkB,iBAAiB,EAAEH,oBAAoB,GAAGlB,8BAA8B,GAAGsB,SAAS,EAAEJ,oBAAoB,GACrLnB,oCAAoC,GACpCuB,SAAS,CAAC;EACpB,CAAC;EAAEC,MAAM,EAAE1B;AAAU,CAAC,CAAC,CAAC;AAE5B,SAASI,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}