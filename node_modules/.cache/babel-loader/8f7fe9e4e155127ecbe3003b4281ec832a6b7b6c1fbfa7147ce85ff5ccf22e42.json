{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.from = void 0;\nvar id_1 = require(\"tsafe/id\");\nvar assert_1 = require(\"tsafe/assert\");\n;\nvar typeGuard_1 = require(\"tsafe/typeGuard\");\nvar Evt_merge_1 = require(\"./Evt.merge\");\nvar importProxy_1 = require(\"./importProxy\");\nvar nsEventTargetLike = __importStar(require(\"./types/EventTargetLike\"));\nvar EventTargetLikeAsValue = nsEventTargetLike.EventTargetLike;\nfunction fromImplForTargetEventLike(ctx, target, eventName, options) {\n  var matchEventTargetLike = function (target_) {\n    return EventTargetLikeAsValue.canBe(target_);\n  };\n  if (!matchEventTargetLike(target)) {\n    if (\"then\" in target) {\n      var evt_1 = new importProxy_1.importProxy.Evt();\n      var isCtxDone_1 = function () {\n        var getEvtDonePostCount = function () {\n          return ctx === null || ctx === void 0 ? void 0 : ctx.evtDoneOrAborted.postCount;\n        };\n        var n = getEvtDonePostCount();\n        return function () {\n          return n !== getEvtDonePostCount();\n        };\n      }();\n      target.then(function (data) {\n        if (isCtxDone_1()) {\n          return;\n        }\n        evt_1.post(data);\n      });\n      return evt_1;\n    }\n    return (0, Evt_merge_1.mergeImpl)(ctx, Array.from(target).map(function (target) {\n      return fromImplForTargetEventLike(ctx, target, eventName, options);\n    }));\n  }\n  var proxy;\n  if (EventTargetLikeAsValue.HasEventTargetAddRemove.match(target)) {\n    proxy = {\n      \"on\": function (listener, eventName, options) {\n        return target.addEventListener(eventName, listener, options);\n      },\n      \"off\": function (listener, eventName, options) {\n        return target.removeEventListener(eventName, listener, options);\n      }\n    };\n  } else if (EventTargetLikeAsValue.NodeStyleEventEmitter.match(target)) {\n    proxy = {\n      \"on\": function (listener, eventName) {\n        return target.addListener(eventName, listener);\n      },\n      \"off\": function (listener, eventName) {\n        return target.removeListener(eventName, listener);\n      }\n    };\n  } else if (EventTargetLikeAsValue.JQueryStyleEventEmitter.match(target)) {\n    proxy = {\n      \"on\": function (listener, eventName) {\n        return target.on(eventName, listener);\n      },\n      \"off\": function (listener, eventName) {\n        return target.off(eventName, listener);\n      }\n    };\n  } else if (EventTargetLikeAsValue.RxJSSubject.match(target)) {\n    var subscription_1;\n    proxy = {\n      \"on\": function (listener) {\n        return subscription_1 = target.subscribe(function (data) {\n          return listener(data);\n        });\n      },\n      \"off\": function () {\n        return subscription_1.unsubscribe();\n      }\n    };\n  } else {\n    (0, id_1.id)(target);\n    (0, assert_1.assert)(false);\n  }\n  var evt = new importProxy_1.importProxy.Evt();\n  var listener = function (data) {\n    return evt.post(data);\n  };\n  ctx === null || ctx === void 0 ? void 0 : ctx.evtDoneOrAborted.attachOnce(function () {\n    return proxy.off(listener, eventName, options);\n  });\n  proxy.on(listener, eventName, options);\n  return evt;\n}\nfunction fromImplForObserver(ctx, ObserverConstructor, target) {\n  var evt = importProxy_1.importProxy.Evt.create();\n  var listener = function (_a) {\n    var _b = __read(_a, 1),\n      entry = _b[0];\n    return evt.post(entry);\n  };\n  var observer = new ObserverConstructor(listener);\n  observer.observe(target);\n  ctx === null || ctx === void 0 ? void 0 : ctx.evtDoneOrAborted.attachOnce(function () {\n    return observer.disconnect();\n  });\n  return evt;\n}\n/*\n/^[A-Z]/.test(targetOrEventNameOrObserverConstructorOrObserverTarget.name\n    */\nfunction from(ctxOrTargetOrObserverConstructor, targetOrEventNameOrObserverConstructorOrObserverTarget, eventNameOrOptionsOrObserverTarget, options) {\n  if (\"evtDoneOrAborted\" in ctxOrTargetOrObserverConstructor) {\n    (0, assert_1.assert)((0, typeGuard_1.typeGuard)(targetOrEventNameOrObserverConstructorOrObserverTarget, true) && (0, typeGuard_1.typeGuard)(eventNameOrOptionsOrObserverTarget, true) && (0, typeGuard_1.typeGuard)(options, true));\n    if (typeof targetOrEventNameOrObserverConstructorOrObserverTarget === \"function\") {\n      (0, assert_1.assert)((0, typeGuard_1.typeGuard)(eventNameOrOptionsOrObserverTarget, true) && (0, typeGuard_1.typeGuard)(options, true));\n      return fromImplForObserver(ctxOrTargetOrObserverConstructor, targetOrEventNameOrObserverConstructorOrObserverTarget, eventNameOrOptionsOrObserverTarget);\n    } else {\n      (0, assert_1.assert)((0, typeGuard_1.typeGuard)(eventNameOrOptionsOrObserverTarget, true));\n      return fromImplForTargetEventLike(ctxOrTargetOrObserverConstructor, targetOrEventNameOrObserverConstructorOrObserverTarget, eventNameOrOptionsOrObserverTarget, options);\n    }\n  } else {\n    (0, assert_1.assert)((0, typeGuard_1.typeGuard)(ctxOrTargetOrObserverConstructor, true) && (0, typeGuard_1.typeGuard)(targetOrEventNameOrObserverConstructorOrObserverTarget, true) && (0, typeGuard_1.typeGuard)(eventNameOrOptionsOrObserverTarget, true));\n    if (typeof ctxOrTargetOrObserverConstructor === \"function\") {\n      (0, assert_1.assert)((0, typeGuard_1.typeGuard)(targetOrEventNameOrObserverConstructorOrObserverTarget, true) && (0, typeGuard_1.typeGuard)(eventNameOrOptionsOrObserverTarget, true));\n      return fromImplForObserver(undefined, ctxOrTargetOrObserverConstructor, targetOrEventNameOrObserverConstructorOrObserverTarget);\n    } else {\n      (0, assert_1.assert)((0, typeGuard_1.typeGuard)(targetOrEventNameOrObserverConstructorOrObserverTarget, true));\n      return fromImplForTargetEventLike(undefined, ctxOrTargetOrObserverConstructor, targetOrEventNameOrObserverConstructorOrObserverTarget, eventNameOrOptionsOrObserverTarget);\n    }\n  }\n}\nexports.from = from;","map":{"version":3,"names":["id_1","require","assert_1","typeGuard_1","Evt_merge_1","importProxy_1","nsEventTargetLike","__importStar","EventTargetLikeAsValue","EventTargetLike","fromImplForTargetEventLike","ctx","target","eventName","options","matchEventTargetLike","target_","canBe","evt_1","importProxy","Evt","isCtxDone_1","getEvtDonePostCount","evtDoneOrAborted","postCount","n","then","data","post","mergeImpl","Array","from","map","proxy","HasEventTargetAddRemove","match","on","listener","addEventListener","off","removeEventListener","NodeStyleEventEmitter","addListener","removeListener","JQueryStyleEventEmitter","RxJSSubject","subscription_1","subscribe","unsubscribe","id","assert","evt","attachOnce","fromImplForObserver","ObserverConstructor","create","_a","_b","__read","entry","observer","observe","disconnect","ctxOrTargetOrObserverConstructor","targetOrEventNameOrObserverConstructorOrObserverTarget","eventNameOrOptionsOrObserverTarget","typeGuard","undefined","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\evt-npm-2.5.3-c2ac0365d2-10c0.zip\\node_modules\\evt\\src\\lib\\Evt.from.ts"],"sourcesContent":["import { id } from \"tsafe/id\";\nimport { assert } from \"tsafe/assert\";;\nimport { typeGuard } from \"tsafe/typeGuard\";\nimport { mergeImpl } from \"./Evt.merge\";\nimport { importProxy } from \"./importProxy\";\nimport type { dom, Evt, NonPostableEvtLike } from \"./types\";\nimport type { EventTargetLike } from \"./types\";\nimport * as nsEventTargetLike from \"./types/EventTargetLike\";\nconst { EventTargetLike: EventTargetLikeAsValue } = nsEventTargetLike;\nimport type { ObserverConstructor } from \"./types/Observer\";\n\ntype OneOrMany<T> = T | ArrayLike<T>;\ntype CtxLike<Result> = import(\"./types\").CtxLike<Result> & {\n    evtDoneOrAborted: NonPostableEvtLike<unknown> & { postCount: number; attachOnce(callback: () => void): void; };\n};\n\nfunction fromImplForTargetEventLike<T>(\n    ctx: CtxLike<any> | undefined,\n    target: OneOrMany<EventTargetLike<T>> | PromiseLike<T>,\n    eventName?: string,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<T> {\n\n    const matchEventTargetLike =\n        (target_: typeof target): target_ is EventTargetLike<T> =>\n            EventTargetLikeAsValue.canBe(target_);\n\n    if (!matchEventTargetLike(target)) {\n\n        if (\"then\" in target) {\n\n            const evt = new importProxy.Evt<T>();\n\n            const isCtxDone = (() => {\n\n                const getEvtDonePostCount = () => ctx?.evtDoneOrAborted.postCount;\n\n                const n = getEvtDonePostCount();\n\n                return () => n !== getEvtDonePostCount();\n\n            })();\n\n            target.then(data => {\n\n                if (isCtxDone()) {\n                    return;\n                }\n\n                evt.post(data);\n\n            });\n\n            return evt;\n\n        }\n\n        return mergeImpl<Evt<T>>(\n            ctx,\n            Array.from(target).map(\n                target => fromImplForTargetEventLike<T>(ctx, target, eventName, options)\n            )\n        );\n\n    }\n\n    type ProxyMethod<T> = (\n        listener: (data: T) => void,\n        eventName: string,\n        options?: EventTargetLike.HasEventTargetAddRemove.Options\n    ) => void;\n\n    let proxy: {\n        on: ProxyMethod<T>;\n        off: ProxyMethod<T>;\n    };\n\n    if (EventTargetLikeAsValue.HasEventTargetAddRemove.match(target)) {\n        proxy = {\n            \"on\": (listener, eventName, options) => target.addEventListener(eventName, listener, options),\n            \"off\": (listener, eventName, options) => target.removeEventListener(eventName, listener, options)\n        };\n    } else if (EventTargetLikeAsValue.NodeStyleEventEmitter.match(target)) {\n        proxy = {\n            \"on\": (listener, eventName) => target.addListener(eventName, listener),\n            \"off\": (listener, eventName) => target.removeListener(eventName, listener)\n        };\n    } else if (EventTargetLikeAsValue.JQueryStyleEventEmitter.match(target)) {\n        proxy = {\n            \"on\": (listener, eventName) => target.on(eventName, listener),\n            \"off\": (listener, eventName) => target.off(eventName, listener)\n        };\n    } else if (EventTargetLikeAsValue.RxJSSubject.match(target)) {\n\n        let subscription: EventTargetLike.RxJSSubject.Subscription;\n\n        proxy = {\n            \"on\": listener => subscription = target.subscribe(data => listener(data)),\n            \"off\": () => subscription.unsubscribe()\n        };\n\n    } else {\n\n        id<never>(target);\n        assert(false);\n\n    }\n\n    const evt = new importProxy.Evt<T>();\n\n    const listener = (data: T) => evt.post(data);\n\n    ctx?.evtDoneOrAborted.attachOnce(\n        () => proxy.off(\n            listener,\n            eventName!,\n            options\n        )\n    );\n\n    proxy.on(listener, eventName!, options);\n\n    return evt;\n\n}\n\nfunction fromImplForObserver<Target, Entry>(\n    ctx: CtxLike<any> | undefined,\n    ObserverConstructor: ObserverConstructor<Target, Entry>,\n    target: Target\n): Evt<Entry> {\n\n    const evt = importProxy.Evt.create<Entry>();\n\n    const listener = ([entry]: Entry[]) => evt.post(entry);\n\n    const observer = new ObserverConstructor(listener);\n\n    observer.observe(target);\n\n    ctx?.evtDoneOrAborted.attachOnce(\n        () => observer.disconnect()\n    );\n\n    return evt;\n\n}\n\n/** https://docs.evt.land/api/evt/from */\nexport function from<K extends keyof dom.HTMLElementEventMap>(\n    ctx: CtxLike<any>,\n    target: EventTargetLike.HTMLElement,\n    eventName: K,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<dom.HTMLElementEventMap[K]>;\n\nexport function from<K extends keyof dom.WindowEventMap>(\n    ctx: CtxLike<any>,\n    target: EventTargetLike.Window,\n    eventName: K,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<dom.WindowEventMap[K]>;\n\nexport function from<K extends keyof dom.DocumentEventMap>(\n    ctx: CtxLike<any>,\n    target: EventTargetLike.Document,\n    eventName: K,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<dom.DocumentEventMap[K]>;\n\nexport function from<T>(\n    ctx: CtxLike<any>,\n    target: OneOrMany<\n        EventTargetLike.NodeStyleEventEmitter |\n        EventTargetLike.JQueryStyleEventEmitter\n    >,\n    eventName: string\n): Evt<T>;\nexport function from<T>(\n    ctx: CtxLike<any>,\n    target: OneOrMany<\n        EventTargetLike.HasEventTargetAddRemove<T>\n    >,\n    eventName: string,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<T>;\nexport function from<T>(\n    ctx: CtxLike<any>,\n    target: OneOrMany<EventTargetLike.RxJSSubject<T>>\n): Evt<T>;\n\nexport function from<T>(\n    ctx: CtxLike<any>,\n    target: PromiseLike<T>\n): Evt<T>;\n\nexport function from<Target, Entry>(\n    ctx: CtxLike<any>,\n    ObserverConstructor: ObserverConstructor<Target, Entry>,\n    target: Target\n): Evt<Entry>;\n\n\nexport function from<K extends keyof dom.HTMLElementEventMap>(\n    target: EventTargetLike.HTMLElement,\n    eventName: K,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<dom.HTMLElementEventMap[K]>;\nexport function from<K extends keyof dom.WindowEventMap>(\n    target: EventTargetLike.Window,\n    eventName: K,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<dom.WindowEventMap[K]>;\nexport function from<K extends keyof dom.DocumentEventMap>(\n    target: EventTargetLike.Document,\n    eventName: K,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<dom.DocumentEventMap[K]>;\nexport function from<T>(\n    target: OneOrMany<\n        EventTargetLike.NodeStyleEventEmitter |\n        EventTargetLike.JQueryStyleEventEmitter\n    >,\n    eventName: string\n): Evt<T>;\nexport function from<T>(\n    target: OneOrMany<\n        EventTargetLike.HasEventTargetAddRemove<T>\n    >,\n    eventName: string,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<T>;\nexport function from<T>(\n    target: OneOrMany<EventTargetLike.RxJSSubject<T>>\n): Evt<T>;\nexport function from<T>(\n    target: PromiseLike<T>\n): Evt<T>;\n\nexport function from<Target, Entry>(\n    ObserverConstructor: ObserverConstructor<Target, Entry>,\n    target: Target\n): Evt<Entry>;\n/*\n/^[A-Z]/.test(targetOrEventNameOrObserverConstructorOrObserverTarget.name\n    */\n\nexport function from<T, ObserverTarget = never>(\n    ctxOrTargetOrObserverConstructor: CtxLike<any> | OneOrMany<EventTargetLike<T>> | PromiseLike<T> | ObserverConstructor<ObserverTarget, T>,\n    targetOrEventNameOrObserverConstructorOrObserverTarget?: OneOrMany<EventTargetLike<T>> | string | PromiseLike<T> | ObserverConstructor<ObserverTarget, T> | ObserverTarget,\n    eventNameOrOptionsOrObserverTarget?: string | EventTargetLike.HasEventTargetAddRemove.Options | ObserverTarget,\n    options?: EventTargetLike.HasEventTargetAddRemove.Options\n): Evt<T> {\n\n    if (\"evtDoneOrAborted\" in ctxOrTargetOrObserverConstructor) {\n\n        assert(\n            typeGuard<OneOrMany<EventTargetLike<T>> | PromiseLike<T> | ObserverConstructor<ObserverTarget, T>>(targetOrEventNameOrObserverConstructorOrObserverTarget, true) &&\n            typeGuard<string | undefined | ObserverTarget>(eventNameOrOptionsOrObserverTarget, true) &&\n            typeGuard<EventTargetLike.HasEventTargetAddRemove.Options | undefined>(options, true)\n        );\n\n        if (typeof targetOrEventNameOrObserverConstructorOrObserverTarget === \"function\") {\n\n            assert(\n                typeGuard<ObserverTarget>(eventNameOrOptionsOrObserverTarget, true) &&\n                typeGuard<undefined>(options, true)\n            );\n\n            return fromImplForObserver(\n                ctxOrTargetOrObserverConstructor,\n                targetOrEventNameOrObserverConstructorOrObserverTarget,\n                eventNameOrOptionsOrObserverTarget\n            );\n\n        } else {\n\n            assert(\n                typeGuard<Exclude<typeof eventNameOrOptionsOrObserverTarget, ObserverTarget>>(eventNameOrOptionsOrObserverTarget, true)\n            );\n\n            return fromImplForTargetEventLike(\n                ctxOrTargetOrObserverConstructor,\n                targetOrEventNameOrObserverConstructorOrObserverTarget,\n                eventNameOrOptionsOrObserverTarget,\n                options\n            );\n\n        }\n\n\n    } else {\n\n        assert(\n            typeGuard<Exclude<typeof ctxOrTargetOrObserverConstructor, CtxLike<any>>>(ctxOrTargetOrObserverConstructor, true) &&\n            typeGuard<string | undefined | ObserverTarget>(targetOrEventNameOrObserverConstructorOrObserverTarget, true) &&\n            typeGuard<EventTargetLike.HasEventTargetAddRemove.Options | undefined>(eventNameOrOptionsOrObserverTarget, true)\n        );\n\n        if (typeof ctxOrTargetOrObserverConstructor === \"function\") {\n\n            assert(\n                typeGuard<ObserverTarget>(targetOrEventNameOrObserverConstructorOrObserverTarget, true) &&\n                typeGuard<undefined>(eventNameOrOptionsOrObserverTarget, true)\n            );\n\n            return fromImplForObserver(\n                undefined,\n                ctxOrTargetOrObserverConstructor,\n                targetOrEventNameOrObserverConstructorOrObserverTarget\n            );\n\n\n        } else {\n\n            assert(\n                typeGuard<Exclude<typeof targetOrEventNameOrObserverConstructorOrObserverTarget, ObserverTarget>>(\n                    targetOrEventNameOrObserverConstructorOrObserverTarget, true\n                )\n            );\n\n            return fromImplForTargetEventLike(\n                undefined,\n                ctxOrTargetOrObserverConstructor,\n                targetOrEventNameOrObserverConstructorOrObserverTarget,\n                eventNameOrOptionsOrObserverTarget\n            );\n\n        }\n\n\n\n    }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAAsC;AACtC,IAAAE,WAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AAGA,IAAAK,iBAAA,GAAAC,YAAA,CAAAN,OAAA;AACQ,IAAiBO,sBAAsB,GAAKF,iBAAiB,CAAAG,eAAtB;AAQ/C,SAASC,0BAA0BA,CAC/BC,GAA6B,EAC7BC,MAAsD,EACtDC,SAAkB,EAClBC,OAAyD;EAGzD,IAAMC,oBAAoB,GACtB,SAAAA,CAACC,OAAsB;IACnB,OAAAR,sBAAsB,CAACS,KAAK,CAACD,OAAO,CAAC;EAArC,CAAqC;EAE7C,IAAI,CAACD,oBAAoB,CAACH,MAAM,CAAC,EAAE;IAE/B,IAAI,MAAM,IAAIA,MAAM,EAAE;MAElB,IAAMM,KAAG,GAAG,IAAIb,aAAA,CAAAc,WAAW,CAACC,GAAG,EAAK;MAEpC,IAAMC,WAAS,GAAI;QAEf,IAAMC,mBAAmB,GAAG,SAAAA,CAAA;UAAM,OAAAX,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEY,gBAAgB,CAACC,SAAS;QAA/B,CAA+B;QAEjE,IAAMC,CAAC,GAAGH,mBAAmB,EAAE;QAE/B,OAAO;UAAM,OAAAG,CAAC,KAAKH,mBAAmB,EAAE;QAA3B,CAA2B;MAE5C,CAAC,CAAC,CAAE;MAEJV,MAAM,CAACc,IAAI,CAAC,UAAAC,IAAI;QAEZ,IAAIN,WAAS,EAAE,EAAE;UACb;;QAGJH,KAAG,CAACU,IAAI,CAACD,IAAI,CAAC;MAElB,CAAC,CAAC;MAEF,OAAOT,KAAG;;IAId,OAAO,IAAAd,WAAA,CAAAyB,SAAS,EACZlB,GAAG,EACHmB,KAAK,CAACC,IAAI,CAACnB,MAAM,CAAC,CAACoB,GAAG,CAClB,UAAApB,MAAM;MAAI,OAAAF,0BAA0B,CAAIC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,CAAC;IAA9D,CAA8D,CAC3E,CACJ;;EAUL,IAAImB,KAGH;EAED,IAAIzB,sBAAsB,CAAC0B,uBAAuB,CAACC,KAAK,CAACvB,MAAM,CAAC,EAAE;IAC9DqB,KAAK,GAAG;MACJ,IAAI,EAAE,SAAAG,CAACC,QAAQ,EAAExB,SAAS,EAAEC,OAAO;QAAK,OAAAF,MAAM,CAAC0B,gBAAgB,CAACzB,SAAS,EAAEwB,QAAQ,EAAEvB,OAAO,CAAC;MAArD,CAAqD;MAC7F,KAAK,EAAE,SAAAyB,CAACF,QAAQ,EAAExB,SAAS,EAAEC,OAAO;QAAK,OAAAF,MAAM,CAAC4B,mBAAmB,CAAC3B,SAAS,EAAEwB,QAAQ,EAAEvB,OAAO,CAAC;MAAxD;KAC5C;GACJ,MAAM,IAAIN,sBAAsB,CAACiC,qBAAqB,CAACN,KAAK,CAACvB,MAAM,CAAC,EAAE;IACnEqB,KAAK,GAAG;MACJ,IAAI,EAAE,SAAAG,CAACC,QAAQ,EAAExB,SAAS;QAAK,OAAAD,MAAM,CAAC8B,WAAW,CAAC7B,SAAS,EAAEwB,QAAQ,CAAC;MAAvC,CAAuC;MACtE,KAAK,EAAE,SAAAE,CAACF,QAAQ,EAAExB,SAAS;QAAK,OAAAD,MAAM,CAAC+B,cAAc,CAAC9B,SAAS,EAAEwB,QAAQ,CAAC;MAA1C;KACnC;GACJ,MAAM,IAAI7B,sBAAsB,CAACoC,uBAAuB,CAACT,KAAK,CAACvB,MAAM,CAAC,EAAE;IACrEqB,KAAK,GAAG;MACJ,IAAI,EAAE,SAAAG,CAACC,QAAQ,EAAExB,SAAS;QAAK,OAAAD,MAAM,CAACwB,EAAE,CAACvB,SAAS,EAAEwB,QAAQ,CAAC;MAA9B,CAA8B;MAC7D,KAAK,EAAE,SAAAE,CAACF,QAAQ,EAAExB,SAAS;QAAK,OAAAD,MAAM,CAAC2B,GAAG,CAAC1B,SAAS,EAAEwB,QAAQ,CAAC;MAA/B;KACnC;GACJ,MAAM,IAAI7B,sBAAsB,CAACqC,WAAW,CAACV,KAAK,CAACvB,MAAM,CAAC,EAAE;IAEzD,IAAIkC,cAAsD;IAE1Db,KAAK,GAAG;MACJ,IAAI,EAAE,SAAAG,CAAAC,QAAQ;QAAI,OAAAS,cAAY,GAAGlC,MAAM,CAACmC,SAAS,CAAC,UAAApB,IAAI;UAAI,OAAAU,QAAQ,CAACV,IAAI,CAAC;QAAd,CAAc,CAAC;MAAvD,CAAuD;MACzE,KAAK,EAAE,SAAAY,CAAA;QAAM,OAAAO,cAAY,CAACE,WAAW,EAAE;MAA1B;KAChB;GAEJ,MAAM;IAEH,IAAAhD,IAAA,CAAAiD,EAAE,EAAQrC,MAAM,CAAC;IACjB,IAAAV,QAAA,CAAAgD,MAAM,EAAC,KAAK,CAAC;;EAIjB,IAAMC,GAAG,GAAG,IAAI9C,aAAA,CAAAc,WAAW,CAACC,GAAG,EAAK;EAEpC,IAAMiB,QAAQ,GAAG,SAAAA,CAACV,IAAO;IAAK,OAAAwB,GAAG,CAACvB,IAAI,CAACD,IAAI,CAAC;EAAd,CAAc;EAE5ChB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEY,gBAAgB,CAAC6B,UAAU,CAC5B;IAAM,OAAAnB,KAAK,CAACM,GAAG,CACXF,QAAQ,EACRxB,SAAU,EACVC,OAAO,CACV;EAJK,CAIL,CACJ;EAEDmB,KAAK,CAACG,EAAE,CAACC,QAAQ,EAAExB,SAAU,EAAEC,OAAO,CAAC;EAEvC,OAAOqC,GAAG;AAEd;AAEA,SAASE,mBAAmBA,CACxB1C,GAA6B,EAC7B2C,mBAAuD,EACvD1C,MAAc;EAGd,IAAMuC,GAAG,GAAG9C,aAAA,CAAAc,WAAW,CAACC,GAAG,CAACmC,MAAM,EAAS;EAE3C,IAAMlB,QAAQ,GAAG,SAAAA,CAACmB,EAAgB;QAAhBC,EAAA,GAAAC,MAAA,CAAAF,EAAA,IAAgB;MAAfG,KAAK,GAAAF,EAAA;IAAe,OAAAN,GAAG,CAACvB,IAAI,CAAC+B,KAAK,CAAC;EAAf,CAAe;EAEtD,IAAMC,QAAQ,GAAG,IAAIN,mBAAmB,CAACjB,QAAQ,CAAC;EAElDuB,QAAQ,CAACC,OAAO,CAACjD,MAAM,CAAC;EAExBD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEY,gBAAgB,CAAC6B,UAAU,CAC5B;IAAM,OAAAQ,QAAQ,CAACE,UAAU,EAAE;EAArB,CAAqB,CAC9B;EAED,OAAOX,GAAG;AAEd;AAiGA;;;AAIA,SAAgBpB,IAAIA,CAChBgC,gCAAwI,EACxIC,sDAA0K,EAC1KC,kCAA8G,EAC9GnD,OAAyD;EAGzD,IAAI,kBAAkB,IAAIiD,gCAAgC,EAAE;IAExD,IAAA7D,QAAA,CAAAgD,MAAM,EACF,IAAA/C,WAAA,CAAA+D,SAAS,EAA0FF,sDAAsD,EAAE,IAAI,CAAC,IAChK,IAAA7D,WAAA,CAAA+D,SAAS,EAAsCD,kCAAkC,EAAE,IAAI,CAAC,IACxF,IAAA9D,WAAA,CAAA+D,SAAS,EAA8DpD,OAAO,EAAE,IAAI,CAAC,CACxF;IAED,IAAI,OAAOkD,sDAAsD,KAAK,UAAU,EAAE;MAE9E,IAAA9D,QAAA,CAAAgD,MAAM,EACF,IAAA/C,WAAA,CAAA+D,SAAS,EAAiBD,kCAAkC,EAAE,IAAI,CAAC,IACnE,IAAA9D,WAAA,CAAA+D,SAAS,EAAYpD,OAAO,EAAE,IAAI,CAAC,CACtC;MAED,OAAOuC,mBAAmB,CACtBU,gCAAgC,EAChCC,sDAAsD,EACtDC,kCAAkC,CACrC;KAEJ,MAAM;MAEH,IAAA/D,QAAA,CAAAgD,MAAM,EACF,IAAA/C,WAAA,CAAA+D,SAAS,EAAqED,kCAAkC,EAAE,IAAI,CAAC,CAC1H;MAED,OAAOvD,0BAA0B,CAC7BqD,gCAAgC,EAChCC,sDAAsD,EACtDC,kCAAkC,EAClCnD,OAAO,CACV;;GAKR,MAAM;IAEH,IAAAZ,QAAA,CAAAgD,MAAM,EACF,IAAA/C,WAAA,CAAA+D,SAAS,EAAiEH,gCAAgC,EAAE,IAAI,CAAC,IACjH,IAAA5D,WAAA,CAAA+D,SAAS,EAAsCF,sDAAsD,EAAE,IAAI,CAAC,IAC5G,IAAA7D,WAAA,CAAA+D,SAAS,EAA8DD,kCAAkC,EAAE,IAAI,CAAC,CACnH;IAED,IAAI,OAAOF,gCAAgC,KAAK,UAAU,EAAE;MAExD,IAAA7D,QAAA,CAAAgD,MAAM,EACF,IAAA/C,WAAA,CAAA+D,SAAS,EAAiBF,sDAAsD,EAAE,IAAI,CAAC,IACvF,IAAA7D,WAAA,CAAA+D,SAAS,EAAYD,kCAAkC,EAAE,IAAI,CAAC,CACjE;MAED,OAAOZ,mBAAmB,CACtBc,SAAS,EACTJ,gCAAgC,EAChCC,sDAAsD,CACzD;KAGJ,MAAM;MAEH,IAAA9D,QAAA,CAAAgD,MAAM,EACF,IAAA/C,WAAA,CAAA+D,SAAS,EACLF,sDAAsD,EAAE,IAAI,CAC/D,CACJ;MAED,OAAOtD,0BAA0B,CAC7ByD,SAAS,EACTJ,gCAAgC,EAChCC,sDAAsD,EACtDC,kCAAkC,CACrC;;;AAQb;AAvFAG,OAAA,CAAArC,IAAA,GAAAA,IAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}