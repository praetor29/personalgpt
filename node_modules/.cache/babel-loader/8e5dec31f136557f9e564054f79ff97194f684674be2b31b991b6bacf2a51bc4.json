{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.Polyfill = exports.LightMapImpl = void 0;\nvar LightMapImpl = /** @class */function () {\n  function LightMapImpl() {\n    this.record = [];\n  }\n  LightMapImpl.prototype.has = function (key) {\n    return this.record.map(function (_a) {\n      var _key = _a[0];\n      return _key;\n    }).indexOf(key) >= 0;\n  };\n  LightMapImpl.prototype.get = function (key) {\n    var entry = this.record.filter(function (_a) {\n      var _key = _a[0];\n      return _key === key;\n    })[0];\n    if (entry === undefined) {\n      return undefined;\n    }\n    return entry[1];\n  };\n  LightMapImpl.prototype.set = function (key, value) {\n    var entry = this.record.filter(function (_a) {\n      var _key = _a[0];\n      return _key === key;\n    })[0];\n    if (entry === undefined) {\n      this.record.push([key, value]);\n    } else {\n      entry[1] = value;\n    }\n    return this;\n  };\n  LightMapImpl.prototype[\"delete\"] = function (key) {\n    var index = this.record.map(function (_a) {\n      var key = _a[0];\n      return key;\n    }).indexOf(key);\n    if (index < 0) {\n      return false;\n    }\n    this.record.splice(index, 1);\n    return true;\n  };\n  LightMapImpl.prototype.keys = function () {\n    return this.record.map(function (_a) {\n      var key = _a[0];\n      return key;\n    });\n  };\n  return LightMapImpl;\n}();\nexports.LightMapImpl = LightMapImpl;\nexports.Polyfill = typeof Map !== \"undefined\" ? Map : LightMapImpl;","map":{"version":3,"names":["LightMapImpl","record","prototype","has","key","map","_a","_key","indexOf","get","entry","filter","undefined","set","value","push","index","splice","keys","exports","Polyfill","Map"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\minimal-polyfills-npm-2.2.3-da60ae238c-10c0.zip\\node_modules\\minimal-polyfills\\src\\Map.ts"],"sourcesContent":["\r\n\r\nexport interface LightMap<K,V> {\r\n    [Symbol.toStringTag]: string;\r\n    has(key: K): boolean;\r\n    get(key: K): V | undefined;\r\n    set(key: K, value: V): this;\r\n    delete(key: K): boolean;\r\n    keys(): Iterable<K>;\r\n}\r\n\r\nexport class LightMapImpl<K,V> implements LightMap<K,V> {\r\n\r\n    [Symbol.toStringTag]!: string;\r\n\r\n    private readonly record: [K, V][]= [];\r\n\r\n    constructor(){ }\r\n\r\n    public has(key: K): boolean {\r\n        return this.record\r\n            .map(([_key]) => _key)\r\n            .indexOf(key) >= 0;\r\n    }\r\n\r\n    public get(key: K): V | undefined {\r\n\r\n        const [ entry ]= this.record\r\n            .filter(([_key]) => _key === key)\r\n            ;\r\n\r\n        if( entry === undefined ){\r\n            return undefined;\r\n        }\r\n\r\n        return entry[1];\r\n\r\n    }\r\n\r\n    public set(key: K, value: V) {\r\n\r\n        const [ entry ]= this.record\r\n            .filter(([_key]) => _key === key)\r\n            ;\r\n\r\n        if( entry === undefined ){\r\n\r\n            this.record.push([key, value]);\r\n\r\n        }else{\r\n\r\n            entry[1]= value;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public delete(key: K): boolean{\r\n\r\n        const index= this.record.map(([ key])=> key).indexOf(key);\r\n\r\n        if( index < 0 ){\r\n            return false;\r\n        }\r\n\r\n        this.record.splice(index, 1);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    public keys(): Iterable<K> {\r\n        return this.record.map(([ key ])=> key);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const Polyfill: { new<K,V>(): LightMap<K,V> } = \r\n    typeof Map !== \"undefined\" ? Map : LightMapImpl;\r\n\r\n"],"mappings":";;;;AAWA,IAAAA,YAAA;EAMI,SAAAA,aAAA;IAFiB,KAAAC,MAAM,GAAY,EAAE;EAEtB;EAERD,YAAA,CAAAE,SAAA,CAAAC,GAAG,GAAV,UAAWC,GAAM;IACb,OAAO,IAAI,CAACH,MAAM,CACbI,GAAG,CAAC,UAACC,EAAM;UAALC,IAAI,GAAAD,EAAA;MAAM,OAAAC,IAAI;IAAJ,CAAI,CAAC,CACrBC,OAAO,CAACJ,GAAG,CAAC,IAAI,CAAC;EAC1B,CAAC;EAEMJ,YAAA,CAAAE,SAAA,CAAAO,GAAG,GAAV,UAAWL,GAAM;IAEL,IAAAM,KAAK,GAAI,IAAI,CAACT,MAAM,CACvBU,MAAM,CAAC,UAACL,EAAM;UAALC,IAAI,GAAAD,EAAA;MAAM,OAAAC,IAAI,KAAKH,GAAG;IAAZ,CAAY,CAAC,GADxB;IAIb,IAAIM,KAAK,KAAKE,SAAS,EAAE;MACrB,OAAOA,SAAS;;IAGpB,OAAOF,KAAK,CAAC,CAAC,CAAC;EAEnB,CAAC;EAEMV,YAAA,CAAAE,SAAA,CAAAW,GAAG,GAAV,UAAWT,GAAM,EAAEU,KAAQ;IAEf,IAAAJ,KAAK,GAAI,IAAI,CAACT,MAAM,CACvBU,MAAM,CAAC,UAACL,EAAM;UAALC,IAAI,GAAAD,EAAA;MAAM,OAAAC,IAAI,KAAKH,GAAG;IAAZ,CAAY,CAAC,GADxB;IAIb,IAAIM,KAAK,KAAKE,SAAS,EAAE;MAErB,IAAI,CAACX,MAAM,CAACc,IAAI,CAAC,CAACX,GAAG,EAAEU,KAAK,CAAC,CAAC;KAEjC,MAAI;MAEDJ,KAAK,CAAC,CAAC,CAAC,GAAEI,KAAK;;IAInB,OAAO,IAAI;EAEf,CAAC;EAEMd,YAAA,CAAAE,SAAA,SAAM,IAAb,UAAcE,GAAM;IAEhB,IAAMY,KAAK,GAAE,IAAI,CAACf,MAAM,CAACI,GAAG,CAAC,UAACC,EAAM;UAAJF,GAAG,GAAAE,EAAA;MAAK,OAAAF,GAAG;IAAH,CAAG,CAAC,CAACI,OAAO,CAACJ,GAAG,CAAC;IAEzD,IAAIY,KAAK,GAAG,CAAC,EAAE;MACX,OAAO,KAAK;;IAGhB,IAAI,CAACf,MAAM,CAACgB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAE5B,OAAO,IAAI;EAEf,CAAC;EAEMhB,YAAA,CAAAE,SAAA,CAAAgB,IAAI,GAAX;IACI,OAAO,IAAI,CAACjB,MAAM,CAACI,GAAG,CAAC,UAACC,EAAO;UAALF,GAAG,GAAAE,EAAA;MAAM,OAAAF,GAAG;IAAH,CAAG,CAAC;EAC3C,CAAC;EAEL,OAAAJ,YAAC;AAAD,CAAC,CAlED;AAAamB,OAAA,CAAAnB,YAAA,GAAAA,YAAA;AAqEAmB,OAAA,CAAAC,QAAQ,GACjB,OAAOC,GAAG,KAAK,WAAW,GAAGA,GAAG,GAAGrB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}