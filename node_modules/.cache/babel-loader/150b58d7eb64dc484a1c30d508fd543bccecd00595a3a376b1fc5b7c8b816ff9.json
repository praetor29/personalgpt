{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport function disableEmotionWarnings() {\n  if (process.env.NODE_ENV !== \"development\") {\n    return;\n  }\n  /* eslint-disable no-console */\n  var log = console.error.bind(console);\n  console.error = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    /* eslint-enable no-console */\n    if (args.indexOf(\"The pseudo class\") && args.indexOf(\"is potentially unsafe when doing server-side rendering. Try changing it to\")) {\n      return;\n    }\n    log.apply(void 0, __spreadArray([], __read(args), false));\n  };\n}","map":{"version":3,"names":["disableEmotionWarnings","process","env","NODE_ENV","log","console","error","bind","args","_i","arguments","length","indexOf","apply","__spreadArray","__read"],"sources":["C:\\Users\\prana\\repos\\personalgpt\\.yarn\\__virtual__\\gitlanding-virtual-07e3485447\\3\\AppData\\Local\\Yarn\\Berry\\cache\\gitlanding-npm-0.23.25-390b40ced8-10c0.zip\\node_modules\\gitlanding\\src\\tools\\disableEmotionWarnings.ts"],"sourcesContent":["export function disableEmotionWarnings() {\n    if (process.env.NODE_ENV !== \"development\") {\n        return;\n    }\n    /* eslint-disable no-console */\n    const log = console.error.bind(console);\n    console.error = (...args) => {\n        /* eslint-enable no-console */\n        if (\n            args.indexOf(\"The pseudo class\") &&\n            args.indexOf(\n                \"is potentially unsafe when doing server-side rendering. Try changing it to\",\n            )\n        ) {\n            return;\n        }\n        log(...args);\n    };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAM,SAAUA,sBAAsBA,CAAA;EAClC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IACxC;;EAEJ;EACA,IAAMC,GAAG,GAAGC,OAAO,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;EACvCA,OAAO,CAACC,KAAK,GAAG;IAAC,IAAAE,IAAA;SAAA,IAAAC,EAAA,IAAO,EAAPA,EAAA,GAAAC,SAAA,CAAAC,MAAO,EAAPF,EAAA,EAAO;MAAPD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IACb;IACA,IACID,IAAI,CAACI,OAAO,CAAC,kBAAkB,CAAC,IAChCJ,IAAI,CAACI,OAAO,CACR,4EAA4E,CAC/E,EACH;MACE;;IAEJR,GAAG,CAAAS,KAAA,SAAAC,aAAA,KAAAC,MAAA,CAAIP,IAAI;EACf,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}