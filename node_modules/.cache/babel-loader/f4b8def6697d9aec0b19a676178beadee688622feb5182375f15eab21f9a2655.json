{"ast":null,"code":"import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.js';\nimport { calcSVGTransformOrigin } from './transform-origin.js';\nimport { buildSVGPath } from './path.js';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n  var attrX = _a.attrX,\n    attrY = _a.attrY,\n    originX = _a.originX,\n    originY = _a.originY,\n    pathLength = _a.pathLength,\n    _b = _a.pathSpacing,\n    pathSpacing = _b === void 0 ? 1 : _b,\n    _c = _a.pathOffset,\n    pathOffset = _c === void 0 ? 0 : _c,\n    // This is object creation, which we try to avoid per-frame.\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n  buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n  state.attrs = state.style;\n  state.style = {};\n  var attrs = state.attrs,\n    style = state.style,\n    dimensions = state.dimensions,\n    totalPathLength = state.totalPathLength;\n  /**\n   * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n   * and copy it into style.\n   */\n  if (attrs.transform) {\n    if (dimensions) style.transform = attrs.transform;\n    delete attrs.transform;\n  }\n  // Parse transformOrigin\n  if (dimensions && (originX !== undefined || originY !== undefined || style.transform)) {\n    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n  }\n  // Treat x/y not as shortcuts but as actual attributes\n  if (attrX !== undefined) attrs.x = attrX;\n  if (attrY !== undefined) attrs.y = attrY;\n  // Build SVG path if one has been measured\n  if (totalPathLength !== undefined && pathLength !== undefined) {\n    buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n  }\n}\nexport { buildSVGAttrs };","map":{"version":3,"names":["__rest","buildHTMLStyles","calcSVGTransformOrigin","buildSVGPath","buildSVGAttrs","state","_a","projection","layoutState","options","transformTemplate","buildProjectionTransform","buildProjectionTransformOrigin","attrX","attrY","originX","originY","pathLength","_b","pathSpacing","_c","pathOffset","latest","attrs","style","dimensions","totalPathLength","transform","undefined","transformOrigin","x","y"],"sources":["C:/Users/prana/repos/personalgpt/.yarn/__virtual__/framer-motion-virtual-4606bf46ad/3/AppData/Local/Yarn/Berry/cache/framer-motion-npm-4.1.17-00d2b9950f-10c0.zip/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js"],"sourcesContent":["import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.js';\nimport { calcSVGTransformOrigin } from './transform-origin.js';\nimport { buildSVGPath } from './path.js';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been measured\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,sBAAsB,QAAQ,uBAAuB;AAC9D,SAASC,YAAY,QAAQ,WAAW;;AAExC;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAEC,EAAE,EAAEC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,wBAAwB,EAAEC,8BAA8B,EAAE;EAC7I,IAAIC,KAAK,GAAGP,EAAE,CAACO,KAAK;IAAEC,KAAK,GAAGR,EAAE,CAACQ,KAAK;IAAEC,OAAO,GAAGT,EAAE,CAACS,OAAO;IAAEC,OAAO,GAAGV,EAAE,CAACU,OAAO;IAAEC,UAAU,GAAGX,EAAE,CAACW,UAAU;IAAEC,EAAE,GAAGZ,EAAE,CAACa,WAAW;IAAEA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;IAAEE,EAAE,GAAGd,EAAE,CAACe,UAAU;IAAEA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;IAClO;IACAE,MAAM,GAAGtB,MAAM,CAACM,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;EACxGL,eAAe,CAACI,KAAK,EAAEiB,MAAM,EAAEf,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,wBAAwB,EAAEC,8BAA8B,CAAC;EAC7IP,KAAK,CAACkB,KAAK,GAAGlB,KAAK,CAACmB,KAAK;EACzBnB,KAAK,CAACmB,KAAK,GAAG,CAAC,CAAC;EAChB,IAAID,KAAK,GAAGlB,KAAK,CAACkB,KAAK;IAAEC,KAAK,GAAGnB,KAAK,CAACmB,KAAK;IAAEC,UAAU,GAAGpB,KAAK,CAACoB,UAAU;IAAEC,eAAe,GAAGrB,KAAK,CAACqB,eAAe;EACpH;AACJ;AACA;AACA;EACI,IAAIH,KAAK,CAACI,SAAS,EAAE;IACjB,IAAIF,UAAU,EACVD,KAAK,CAACG,SAAS,GAAGJ,KAAK,CAACI,SAAS;IACrC,OAAOJ,KAAK,CAACI,SAAS;EAC1B;EACA;EACA,IAAIF,UAAU,KACTV,OAAO,KAAKa,SAAS,IAAIZ,OAAO,KAAKY,SAAS,IAAIJ,KAAK,CAACG,SAAS,CAAC,EAAE;IACrEH,KAAK,CAACK,eAAe,GAAG3B,sBAAsB,CAACuB,UAAU,EAAEV,OAAO,KAAKa,SAAS,GAAGb,OAAO,GAAG,GAAG,EAAEC,OAAO,KAAKY,SAAS,GAAGZ,OAAO,GAAG,GAAG,CAAC;EAC5I;EACA;EACA,IAAIH,KAAK,KAAKe,SAAS,EACnBL,KAAK,CAACO,CAAC,GAAGjB,KAAK;EACnB,IAAIC,KAAK,KAAKc,SAAS,EACnBL,KAAK,CAACQ,CAAC,GAAGjB,KAAK;EACnB;EACA,IAAIY,eAAe,KAAKE,SAAS,IAAIX,UAAU,KAAKW,SAAS,EAAE;IAC3DzB,YAAY,CAACoB,KAAK,EAAEG,eAAe,EAAET,UAAU,EAAEE,WAAW,EAAEE,UAAU,EAAE,KAAK,CAAC;EACpF;AACJ;AAEA,SAASjB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}