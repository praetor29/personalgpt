{"ast":null,"code":"var unresolvedJobs = new Set();\nfunction pushJob(stack, job, pointer) {\n  if (!stack[pointer]) stack[pointer] = [];\n  stack[pointer].push(job);\n}\nfunction batchLayout(callback) {\n  unresolvedJobs.add(callback);\n  return function () {\n    return unresolvedJobs.delete(callback);\n  };\n}\nfunction flushLayout() {\n  if (!unresolvedJobs.size) return;\n  var pointer = 0;\n  var reads = [[]];\n  var writes = [];\n  var setRead = function (job) {\n    return pushJob(reads, job, pointer);\n  };\n  var setWrite = function (job) {\n    pushJob(writes, job, pointer);\n    pointer++;\n  };\n  /**\n   * Resolve jobs into their array stacks\n   */\n  unresolvedJobs.forEach(function (callback) {\n    callback(setRead, setWrite);\n    pointer = 0;\n  });\n  unresolvedJobs.clear();\n  /**\n   * Execute jobs\n   */\n  var numStacks = writes.length;\n  for (var i = 0; i <= numStacks; i++) {\n    reads[i] && reads[i].forEach(executeJob);\n    writes[i] && writes[i].forEach(executeJob);\n  }\n}\nvar executeJob = function (job) {\n  return job();\n};\nexport { batchLayout, flushLayout };","map":{"version":3,"names":["unresolvedJobs","Set","pushJob","stack","job","pointer","push","batchLayout","callback","add","delete","flushLayout","size","reads","writes","setRead","setWrite","forEach","clear","numStacks","length","i","executeJob"],"sources":["C:/Users/prana/repos/personalgpt/.yarn/__virtual__/framer-motion-virtual-4606bf46ad/3/AppData/Local/Yarn/Berry/cache/framer-motion-npm-4.1.17-00d2b9950f-10c0.zip/node_modules/framer-motion/dist/es/render/dom/utils/batch-layout.js"],"sourcesContent":["var unresolvedJobs = new Set();\nfunction pushJob(stack, job, pointer) {\n    if (!stack[pointer])\n        stack[pointer] = [];\n    stack[pointer].push(job);\n}\nfunction batchLayout(callback) {\n    unresolvedJobs.add(callback);\n    return function () { return unresolvedJobs.delete(callback); };\n}\nfunction flushLayout() {\n    if (!unresolvedJobs.size)\n        return;\n    var pointer = 0;\n    var reads = [[]];\n    var writes = [];\n    var setRead = function (job) { return pushJob(reads, job, pointer); };\n    var setWrite = function (job) {\n        pushJob(writes, job, pointer);\n        pointer++;\n    };\n    /**\n     * Resolve jobs into their array stacks\n     */\n    unresolvedJobs.forEach(function (callback) {\n        callback(setRead, setWrite);\n        pointer = 0;\n    });\n    unresolvedJobs.clear();\n    /**\n     * Execute jobs\n     */\n    var numStacks = writes.length;\n    for (var i = 0; i <= numStacks; i++) {\n        reads[i] && reads[i].forEach(executeJob);\n        writes[i] && writes[i].forEach(executeJob);\n    }\n}\nvar executeJob = function (job) { return job(); };\n\nexport { batchLayout, flushLayout };\n"],"mappings":"AAAA,IAAIA,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC9B,SAASC,OAAOA,CAACC,KAAK,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAClC,IAAI,CAACF,KAAK,CAACE,OAAO,CAAC,EACfF,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE;EACvBF,KAAK,CAACE,OAAO,CAAC,CAACC,IAAI,CAACF,GAAG,CAAC;AAC5B;AACA,SAASG,WAAWA,CAACC,QAAQ,EAAE;EAC3BR,cAAc,CAACS,GAAG,CAACD,QAAQ,CAAC;EAC5B,OAAO,YAAY;IAAE,OAAOR,cAAc,CAACU,MAAM,CAACF,QAAQ,CAAC;EAAE,CAAC;AAClE;AACA,SAASG,WAAWA,CAAA,EAAG;EACnB,IAAI,CAACX,cAAc,CAACY,IAAI,EACpB;EACJ,IAAIP,OAAO,GAAG,CAAC;EACf,IAAIQ,KAAK,GAAG,CAAC,EAAE,CAAC;EAChB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,OAAO,GAAG,SAAAA,CAAUX,GAAG,EAAE;IAAE,OAAOF,OAAO,CAACW,KAAK,EAAET,GAAG,EAAEC,OAAO,CAAC;EAAE,CAAC;EACrE,IAAIW,QAAQ,GAAG,SAAAA,CAAUZ,GAAG,EAAE;IAC1BF,OAAO,CAACY,MAAM,EAAEV,GAAG,EAAEC,OAAO,CAAC;IAC7BA,OAAO,EAAE;EACb,CAAC;EACD;AACJ;AACA;EACIL,cAAc,CAACiB,OAAO,CAAC,UAAUT,QAAQ,EAAE;IACvCA,QAAQ,CAACO,OAAO,EAAEC,QAAQ,CAAC;IAC3BX,OAAO,GAAG,CAAC;EACf,CAAC,CAAC;EACFL,cAAc,CAACkB,KAAK,CAAC,CAAC;EACtB;AACJ;AACA;EACI,IAAIC,SAAS,GAAGL,MAAM,CAACM,MAAM;EAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,SAAS,EAAEE,CAAC,EAAE,EAAE;IACjCR,KAAK,CAACQ,CAAC,CAAC,IAAIR,KAAK,CAACQ,CAAC,CAAC,CAACJ,OAAO,CAACK,UAAU,CAAC;IACxCR,MAAM,CAACO,CAAC,CAAC,IAAIP,MAAM,CAACO,CAAC,CAAC,CAACJ,OAAO,CAACK,UAAU,CAAC;EAC9C;AACJ;AACA,IAAIA,UAAU,GAAG,SAAAA,CAAUlB,GAAG,EAAE;EAAE,OAAOA,GAAG,CAAC,CAAC;AAAE,CAAC;AAEjD,SAASG,WAAW,EAAEI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}