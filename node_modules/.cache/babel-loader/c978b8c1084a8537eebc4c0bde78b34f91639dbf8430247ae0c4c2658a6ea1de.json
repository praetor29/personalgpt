{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compose = void 0;\nvar convertOperatorToStatelessFLambda_1 = require(\"./convertOperatorToStatelessFLambda\");\nvar id_1 = require(\"tsafe/id\");\nfunction f_o_g(op1, op2) {\n  var opAtoB = (0, convertOperatorToStatelessFLambda_1.convertOperatorToStatelessFλ)(op1);\n  var opBtoC = (0, convertOperatorToStatelessFLambda_1.convertOperatorToStatelessFλ)(op2);\n  return (0, id_1.id)(function (dataA, registerSideEffect) {\n    var resultB = opAtoB(dataA, registerSideEffect);\n    if (!resultB) {\n      return null;\n    }\n    var _a = __read(resultB, 1),\n      dataB = _a[0];\n    var resultC = opBtoC(dataB, registerSideEffect);\n    if (!resultC) {\n      return resultC;\n    }\n    return [resultC[0]];\n  });\n}\nfunction compose() {\n  var ops = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    ops[_i] = arguments[_i];\n  }\n  if (ops.length === 1) {\n    var _a = __read(ops, 1),\n      op = _a[0];\n    return (0, convertOperatorToStatelessFLambda_1.convertOperatorToStatelessFλ)(op);\n  }\n  var _b = __read(ops),\n    op1 = _b[0],\n    op2 = _b[1],\n    rest = _b.slice(2);\n  var op1_o_op2 = f_o_g(op1, op2);\n  if (rest.length === 0) {\n    return op1_o_op2;\n  }\n  return compose.apply(void 0, __spreadArray([op1_o_op2], __read(rest), false));\n}\nexports.compose = compose;","map":{"version":3,"names":["convertOperatorToStatelessFLambda_1","require","id_1","f_o_g","op1","op2","opAtoB","convertOperatorToStatelessFλ","opBtoC","id","dataA","registerSideEffect","resultB","_a","__read","dataB","resultC","compose","ops","_i","arguments","length","op","_b","rest","slice","op1_o_op2","apply","__spreadArray","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\evt-npm-2.5.3-c2ac0365d2-10c0.zip\\node_modules\\evt\\src\\lib\\util\\compose.ts"],"sourcesContent":["import { convertOperatorToStatelessFλ } from \"./convertOperatorToStatelessFLambda\";\nimport { id } from \"tsafe/id\";\nimport type { Operator } from \"../types/Operator\";\n\nfunction f_o_g<A, B, C>(\n    op1: Operator<A, B>,\n    op2: Operator<B, C>\n): Operator.fλ.Stateless<A, C> {\n\n    const opAtoB = convertOperatorToStatelessFλ(op1);\n\n    const opBtoC = convertOperatorToStatelessFλ(op2);\n\n    return id<Operator.fλ.Stateless<A, C>>(\n        (dataA, registerSideEffect) => {\n\n            const resultB = opAtoB(dataA, registerSideEffect);\n\n            if( !resultB ){\n                return null;\n            }\n\n            const [dataB] = resultB;\n\n            const resultC = opBtoC(dataB, registerSideEffect);\n\n            if( !resultC ){\n                return resultC;\n            }\n\n            return [resultC[0]];\n\n        }\n    );\n}\n\n\nexport function compose<A, B, C>(\n    op1: Operator.fλ<A, B>,\n    op2: Operator.fλ<B, C>\n): Operator.fλ.Stateless<A, C>;\nexport function compose<A, B, C extends B>(\n    op1: Operator.fλ<A, B>,\n    op2: (data: B) => data is C,\n): Operator.fλ.Stateless<A, C>;\nexport function compose<A, B>(\n    op1: Operator.fλ<A, B>,\n    op2: (data: B) => boolean,\n): Operator.fλ.Stateless<A, B>;\nexport function compose<A, B extends A, C>(\n    op1: (data: A) => data is B,\n    op2: Operator.fλ<B, C>\n): Operator.fλ.Stateless<A, B>;\nexport function compose<A, B>(\n    op1: (data: A) => boolean,\n    op2: Operator.fλ<A, B>\n): Operator.fλ.Stateless<A, B>;\nexport function compose<A, B extends A, C extends B>(\n    op1: (data: A) => data is B,\n    op2: (data: B) => data is C,\n): Operator.fλ.Stateless<A, C>;\nexport function compose<A, B extends A>(\n    op1: (data: A) => data is B,\n    op2: (data: B) => boolean,\n): Operator.fλ.Stateless<A, B>;\nexport function compose<A, B extends A>(\n    op1: (data: A) => boolean,\n    op2: (data: A) => data is B\n): Operator.fλ.Stateless<A, B>;\nexport function compose<A>(\n    op1: (data: A) => boolean,\n    op2: (data: A) => boolean,\n): Operator.fλ.Stateless<A, A>;\n\n\nexport function compose<A, B, C, D>(\n    op1: Operator.fλ<A, B>,\n    op2: Operator.fλ<B, C>,\n    op3: Operator.fλ<C, D>\n): Operator.fλ.Stateless<A, D>;\n\nexport function compose<A, B, C, D, E>(\n    op1: Operator.fλ<A, B>,\n    op2: Operator.fλ<B, C>,\n    op3: Operator.fλ<C, D>,\n    op4: Operator.fλ<D, E>\n): Operator.fλ.Stateless<A, E>;\n\nexport function compose<A, B, C, D, E>(\n    op1: Operator.fλ<A, B>,\n    op2: Operator.fλ<B, C>,\n    op3: Operator.fλ<C, D>,\n    op4: Operator.fλ<D, E>\n): Operator.fλ.Stateless<A, E>;\n\nexport function compose<A, B, C, D, E, F>(\n    op1: Operator.fλ<A, B>,\n    op2: Operator.fλ<B, C>,\n    op3: Operator.fλ<C, D>,\n    op4: Operator.fλ<D, E>,\n    op5: Operator.fλ<E, F>\n): Operator.fλ.Stateless<A, F>;\n\n\nexport function compose<A, B, C>(\n    op1: Operator<A, B>,\n    op2: Operator<B, C>\n): Operator.fλ.Stateless<A, C>;\n\nexport function compose<A, B, C, D>(\n    op1: Operator<A, B>,\n    op2: Operator<B, C>,\n    op3: Operator<C, D>\n): Operator.fλ.Stateless<A, D>;\n\nexport function compose<A, B, C, D, E>(\n    op1: Operator<A, B>,\n    op2: Operator<B, C>,\n    op3: Operator<C, D>,\n    op4: Operator<D, E>,\n): Operator.fλ.Stateless<A, E>;\n\nexport function compose<A, B, C, D, E, F>(\n    op1: Operator<A, B>,\n    op2: Operator<B, C>,\n    op3: Operator<C, D>,\n    op4: Operator<D, E>,\n    op5: Operator<E, F>\n): Operator.fλ.Stateless<A, F>;\n\n\nexport function compose<T>(\n    ...ops: [\n        Operator<T, any>,\n        ...Operator<any, any>[]\n    ]\n): Operator.fλ.Stateless<T, any>;\n\nexport function compose<T>(\n    ...ops: [\n        Operator<T, any>,\n        ...Operator<any, any>[]\n    ]\n): Operator.fλ.Stateless<T, any>  {\n\n    if (ops.length === 1) {\n\n        const [op] = ops;\n\n        return convertOperatorToStatelessFλ(op);\n\n    }\n\n    const [op1, op2, ...rest] = ops;\n\n    const op1_o_op2 = f_o_g(op1, op2);\n\n    if (rest.length === 0) {\n        return op1_o_op2;\n    }\n\n    return compose(op1_o_op2, ...rest);\n\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,mCAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAD,OAAA;AAGA,SAASE,KAAKA,CACVC,GAAmB,EACnBC,GAAmB;EAGnB,IAAMC,MAAM,GAAG,IAAAN,mCAAA,CAAAO,4BAA4B,EAACH,GAAG,CAAC;EAEhD,IAAMI,MAAM,GAAG,IAAAR,mCAAA,CAAAO,4BAA4B,EAACF,GAAG,CAAC;EAEhD,OAAO,IAAAH,IAAA,CAAAO,EAAE,EACL,UAACC,KAAK,EAAEC,kBAAkB;IAEtB,IAAMC,OAAO,GAAGN,MAAM,CAACI,KAAK,EAAEC,kBAAkB,CAAC;IAEjD,IAAI,CAACC,OAAO,EAAE;MACV,OAAO,IAAI;;IAGT,IAAAC,EAAA,GAAAC,MAAA,CAAUF,OAAO;MAAhBG,KAAK,GAAAF,EAAA,GAAW;IAEvB,IAAMG,OAAO,GAAGR,MAAM,CAACO,KAAK,EAAEJ,kBAAkB,CAAC;IAEjD,IAAI,CAACK,OAAO,EAAE;MACV,OAAOA,OAAO;;IAGlB,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAAC;EAEvB,CAAC,CACJ;AACL;AAwGA,SAAgBC,OAAOA,CAAA;EACnB,IAAAC,GAAA;OAAA,IAAAC,EAAA,IAGC,EAHDA,EAAA,GAAAC,SAAA,CAAAC,MAGC,EAHDF,EAAA,EAGC;IAHDD,GAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAMA,IAAID,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IAEZ,IAAAR,EAAA,GAAAC,MAAA,CAAOI,GAAG;MAATI,EAAE,GAAAT,EAAA,GAAO;IAEhB,OAAO,IAAAb,mCAAA,CAAAO,4BAA4B,EAACe,EAAE,CAAC;;EAIrC,IAAAC,EAAA,GAAAT,MAAA,CAAsBI,GAAG;IAAxBd,GAAG,GAAAmB,EAAA;IAAElB,GAAG,GAAAkB,EAAA;IAAKC,IAAI,GAAAD,EAAA,CAAAE,KAAA,GAAO;EAE/B,IAAMC,SAAS,GAAGvB,KAAK,CAACC,GAAG,EAAEC,GAAG,CAAC;EAEjC,IAAImB,IAAI,CAACH,MAAM,KAAK,CAAC,EAAE;IACnB,OAAOK,SAAS;;EAGpB,OAAOT,OAAO,CAAAU,KAAA,SAAAC,aAAA,EAACF,SAAS,GAAAZ,MAAA,CAAKU,IAAI;AAGrC;AA1BAK,OAAA,CAAAZ,OAAA,GAAAA,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}