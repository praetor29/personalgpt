{"ast":null,"code":"import { assert } from \"./assert\";\nimport { typeGuard } from \"./typeGuard\";\n/** Copy pasted from\n * https://github.com/emotion-js/emotion/blob/23f43ab9f24d44219b0b007a00f4ac681fe8712e/packages/react/src/class-names.js#L17-L63\n **/\nexport const classnames = args => {\n  const len = args.length;\n  let i = 0;\n  let cls = \"\";\n  for (; i < len; i++) {\n    const arg = args[i];\n    if (arg == null) continue;\n    let toAdd;\n    switch (typeof arg) {\n      case \"boolean\":\n        break;\n      case \"object\":\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            assert(!typeGuard(arg, false));\n            if (process.env.NODE_ENV !== \"production\" && arg.styles !== undefined && arg.name !== undefined) {\n              console.error(\"You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n\" + \"`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.\");\n            }\n            toAdd = \"\";\n            for (const k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += \" \");\n                toAdd += k;\n              }\n            }\n          }\n          break;\n        }\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n    if (toAdd) {\n      cls && (cls += \" \");\n      cls += toAdd;\n    }\n  }\n  return cls;\n};","map":{"version":3,"names":["assert","typeGuard","classnames","args","len","length","i","cls","arg","toAdd","Array","isArray","process","env","NODE_ENV","styles","undefined","name","console","error","k"],"sources":["C:/Users/prana/repos/personalgpt/.yarn/__virtual__/tss-react-virtual-49b89c7fcb/3/AppData/Local/Yarn/Berry/cache/tss-react-npm-4.9.3-3edfb0a633-10c0.zip/node_modules/tss-react/esm/tools/classnames.js"],"sourcesContent":["import { assert } from \"./assert\";\nimport { typeGuard } from \"./typeGuard\";\n/** Copy pasted from\n * https://github.com/emotion-js/emotion/blob/23f43ab9f24d44219b0b007a00f4ac681fe8712e/packages/react/src/class-names.js#L17-L63\n **/\nexport const classnames = (args) => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null)\n            continue;\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = classnames(arg);\n                }\n                else {\n                    assert(!typeGuard(arg, false));\n                    if (process.env.NODE_ENV !== \"production\" &&\n                        arg.styles !== undefined &&\n                        arg.name !== undefined) {\n                        console.error(\"You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n\" +\n                            \"`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.\");\n                    }\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,QAAQ,aAAa;AACvC;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAChC,MAAMC,GAAG,GAAGD,IAAI,CAACE,MAAM;EACvB,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,GAAG,GAAG,EAAE;EACZ,OAAOD,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IACjB,MAAME,GAAG,GAAGL,IAAI,CAACG,CAAC,CAAC;IACnB,IAAIE,GAAG,IAAI,IAAI,EACX;IACJ,IAAIC,KAAK;IACT,QAAQ,OAAOD,GAAG;MACd,KAAK,SAAS;QACV;MACJ,KAAK,QAAQ;QAAE;UACX,IAAIE,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE;YACpBC,KAAK,GAAGP,UAAU,CAACM,GAAG,CAAC;UAC3B,CAAC,MACI;YACDR,MAAM,CAAC,CAACC,SAAS,CAACO,GAAG,EAAE,KAAK,CAAC,CAAC;YAC9B,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACrCN,GAAG,CAACO,MAAM,KAAKC,SAAS,IACxBR,GAAG,CAACS,IAAI,KAAKD,SAAS,EAAE;cACxBE,OAAO,CAACC,KAAK,CAAC,wFAAwF,GAClG,uKAAuK,CAAC;YAChL;YACAV,KAAK,GAAG,EAAE;YACV,KAAK,MAAMW,CAAC,IAAIZ,GAAG,EAAE;cACjB,IAAIA,GAAG,CAACY,CAAC,CAAC,IAAIA,CAAC,EAAE;gBACbX,KAAK,KAAKA,KAAK,IAAI,GAAG,CAAC;gBACvBA,KAAK,IAAIW,CAAC;cACd;YACJ;UACJ;UACA;QACJ;MACA;QAAS;UACLX,KAAK,GAAGD,GAAG;QACf;IACJ;IACA,IAAIC,KAAK,EAAE;MACPF,GAAG,KAAKA,GAAG,IAAI,GAAG,CAAC;MACnBA,GAAG,IAAIE,KAAK;IAChB;EACJ;EACA,OAAOF,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}