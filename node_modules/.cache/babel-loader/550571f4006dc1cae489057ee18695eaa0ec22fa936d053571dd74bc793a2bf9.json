{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useConstCallback = void 0;\nvar react_1 = require(\"react\");\n/** https://stackoverflow.com/questions/65890278/why-cant-usecallback-always-return-the-same-ref */\nfunction useConstCallback(callback) {\n  var callbackRef = (0, react_1.useRef)(null);\n  callbackRef.current = callback;\n  return (0, react_1.useState)(function () {\n    return function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return callbackRef.current.apply(callbackRef, __spreadArray([], __read(args), false));\n    };\n  })[0];\n}\nexports.useConstCallback = useConstCallback;","map":{"version":3,"names":["react_1","require","useConstCallback","callback","callbackRef","useRef","current","useState","args","_i","arguments","length","apply","__spreadArray","__read","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-1.0.5-bfde938522-10c0.zip\\node_modules\\powerhooks\\src\\useConstCallback.tsx"],"sourcesContent":["\n\nimport { useRef, useState } from \"react\";\nimport { Parameters } from \"tsafe/Parameters\";\n\n\n/** https://stackoverflow.com/questions/65890278/why-cant-usecallback-always-return-the-same-ref */\nexport function useConstCallback<T extends ((...args: any[]) => unknown) | undefined | null>(\n    callback: NonNullable<T>\n): T {\n\n    const callbackRef = useRef<typeof callback>(null as any);\n\n    callbackRef.current = callback;\n\n    return useState(() => (...args: Parameters<T>) => callbackRef.current(...args))[0] as T;\n\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,OAAA,GAAAC,OAAA;AAIA;AACA,SAAgBC,gBAAgBA,CAC5BC,QAAwB;EAGxB,IAAMC,WAAW,GAAG,IAAAJ,OAAA,CAAAK,MAAM,EAAkB,IAAW,CAAC;EAExDD,WAAW,CAACE,OAAO,GAAGH,QAAQ;EAE9B,OAAO,IAAAH,OAAA,CAAAO,QAAQ,EAAC;IAAM;MAAC,IAAAC,IAAA;WAAA,IAAAC,EAAA,IAAsB,EAAtBA,EAAA,GAAAC,SAAA,CAAAC,MAAsB,EAAtBF,EAAA,EAAsB;QAAtBD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;MAA2B,OAAAL,WAAW,CAACE,OAAO,CAAAM,KAAA,CAAnBR,WAAW,EAAAS,aAAA,KAAAC,MAAA,CAAYN,IAAI;IAA3B,CAA4B;EAAxD,CAAwD,CAAC,CAAC,CAAC,CAAM;AAE3F;AAVAO,OAAA,CAAAb,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}