{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useEffect, useMemo } from \"react\";\nimport { useStateRef } from \"powerhooks\";\nexport function useIntersectionObserver(params, dependencyList) {\n  var callback = params.callback,\n    rest = __rest(params, [\"callback\"]);\n  var ref = useStateRef(null);\n  var observer = useMemo(function () {\n    return new IntersectionObserver(function (entries) {\n      callback({\n        \"entry\": entries[0],\n        observer: observer\n      });\n    }, __assign({}, rest));\n  }, dependencyList);\n  useEffect(function () {\n    if (!ref.current) {\n      return;\n    }\n    observer.observe(ref.current);\n  }, dependencyList);\n  return {\n    ref: ref\n  };\n}","map":{"version":3,"names":["useEffect","useMemo","useStateRef","useIntersectionObserver","params","dependencyList","callback","rest","__rest","ref","observer","IntersectionObserver","entries","__assign","current","observe"],"sources":["C:\\Users\\prana\\repos\\personalgpt\\.yarn\\__virtual__\\gitlanding-virtual-07e3485447\\3\\AppData\\Local\\Yarn\\Berry\\cache\\gitlanding-npm-0.23.25-390b40ced8-10c0.zip\\node_modules\\gitlanding\\src\\tools\\useIntersectionObserver.tsx"],"sourcesContent":["import { useEffect, useMemo } from \"react\";\nimport type { RefObject } from \"react\";\nimport type { DependencyList } from \"react\";\nimport { useStateRef } from \"powerhooks\";\n\nexport function useIntersectionObserver<T extends HTMLElement = any>(\n    params: {\n        callback: (params: {\n            entry: IntersectionObserverEntry;\n            observer: IntersectionObserver;\n        }) => void;\n        rootMargin?: string;\n        root?: Element | Document;\n        threshold?: number | number[];\n    },\n    dependencyList: DependencyList,\n): {\n    ref: RefObject<T>;\n} {\n    const { callback, ...rest } = params;\n    const ref = useStateRef<T>(null);\n\n    const observer = useMemo(() => {\n        return new IntersectionObserver(\n            entries => {\n                callback({\n                    \"entry\": entries[0],\n                    observer,\n                });\n            },\n            { ...rest },\n        );\n    }, dependencyList);\n\n    useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        observer.observe(ref.current);\n    }, dependencyList);\n\n    return { ref };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAG1C,SAASC,WAAW,QAAQ,YAAY;AAExC,OAAM,SAAUC,uBAAuBA,CACnCC,MAQC,EACDC,cAA8B;EAItB,IAAAC,QAAQ,GAAcF,MAAM,CAAAE,QAApB;IAAKC,IAAI,GAAAC,MAAA,CAAKJ,MAAM,EAA9B,YAAqB,CAAF;EACzB,IAAMK,GAAG,GAAGP,WAAW,CAAI,IAAI,CAAC;EAEhC,IAAMQ,QAAQ,GAAGT,OAAO,CAAC;IACrB,OAAO,IAAIU,oBAAoB,CAC3B,UAAAC,OAAO;MACHN,QAAQ,CAAC;QACL,OAAO,EAAEM,OAAO,CAAC,CAAC,CAAC;QACnBF,QAAQ,EAAAA;OACX,CAAC;IACN,CAAC,EAAAG,QAAA,KACIN,IAAI,EACZ;EACL,CAAC,EAAEF,cAAc,CAAC;EAElBL,SAAS,CAAC;IACN,IAAI,CAACS,GAAG,CAACK,OAAO,EAAE;MACd;;IAGJJ,QAAQ,CAACK,OAAO,CAACN,GAAG,CAACK,OAAO,CAAC;EACjC,CAAC,EAAET,cAAc,CAAC;EAElB,OAAO;IAAEI,GAAG,EAAAA;EAAA,CAAE;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}