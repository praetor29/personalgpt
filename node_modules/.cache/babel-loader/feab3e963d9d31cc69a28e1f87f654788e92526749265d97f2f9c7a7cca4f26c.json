{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { menuReducer } from './menuReducer';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useList } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { useCompoundParent } from '../useCompound';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\n */\nexport function useMenu(parameters = {}) {\n  var _useId, _React$useContext;\n  const {\n    listboxRef: listboxRefProp,\n    onItemsChange,\n    id: idParam,\n    disabledItemsFocusable = true,\n    disableListWrap = false\n    // autoFocus = true,\n  } = parameters;\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, listboxRefProp);\n  const listboxId = (_useId = useId(idParam)) != null ? _useId : '';\n  const {\n    state: {\n      open\n    },\n    dispatch: menuDispatch,\n    triggerElement,\n    registerPopup\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\n\n  // store the initial open state to prevent focus stealing\n  // (the first menu items gets focued only when the menu is opened by the user)\n  const isInitiallyOpen = React.useRef(open);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isItemDisabled = React.useCallback(id => {\n    var _subitems$get2;\n    return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;\n  }, [subitems]);\n  const getItemAsString = React.useCallback(id => {\n    var _subitems$get3, _subitems$get4;\n    return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);\n  }, [subitems]);\n  const reducerActionContext = React.useMemo(() => ({\n    listboxRef: rootRef\n  }), [rootRef]);\n  const {\n    dispatch: listDispatch,\n    getRootProps: getListRootProps,\n    contextValue: listContextValue,\n    state: {\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null\n    }),\n    isItemDisabled,\n    items: subitemKeys,\n    getItemAsString,\n    rootRef: handleRef,\n    onItemsChange,\n    reducerActionContext,\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  });\n  useEnhancedEffect(() => {\n    registerPopup(listboxId);\n  }, [listboxId, registerPopup]);\n  React.useEffect(() => {\n    if (open && highlightedValue === subitemKeys[0] && !isInitiallyOpen.current) {\n      var _subitems$get5;\n      // TODO v6: focus only if autoFocus is true\n      (_subitems$get5 = subitems.get(subitemKeys[0])) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null || _subitems$get5.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _rootRef$current;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get6;\n      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null || _subitems$get6.focus();\n    }\n  }, [highlightedValue, subitems]);\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur, _rootRef$current2;\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {\n      return;\n    }\n    menuDispatch({\n      type: DropdownActionTypes.blur,\n      event\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      menuDispatch({\n        type: DropdownActionTypes.escapeKeyDown,\n        event\n      });\n    }\n  };\n  const getOwnListboxHandlers = (otherHandlers = {}) => ({\n    onBlur: createHandleBlur(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  });\n  const getListboxProps = (externalProps = {}) => {\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id: listboxId,\n      role: 'menu'\n    });\n  };\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch: listDispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open,\n    triggerElement\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","menuReducer","DropdownContext","useList","DropdownActionTypes","useCompoundParent","combineHooksSlotProps","extractEventHandlers","FALLBACK_MENU_CONTEXT","dispatch","popupId","registerPopup","registerTrigger","state","open","triggerElement","useMenu","parameters","_useId","_React$useContext","listboxRef","listboxRefProp","onItemsChange","id","idParam","disabledItemsFocusable","disableListWrap","rootRef","useRef","handleRef","listboxId","menuDispatch","useContext","isInitiallyOpen","subitems","contextValue","compoundComponentContextValue","subitemKeys","useMemo","Array","from","keys","getItemDomElement","useCallback","itemId","_subitems$get$ref$cur","_subitems$get","get","ref","current","isItemDisabled","_subitems$get2","disabled","getItemAsString","_subitems$get3","_subitems$get4","label","innerText","reducerActionContext","listDispatch","getRootProps","getListRootProps","listContextValue","highlightedValue","mergedListRef","focusManagement","getInitialState","selectedValues","items","selectionMode","stateReducer","useEffect","_subitems$get5","focus","_rootRef$current","contains","document","activeElement","_subitems$get6","createHandleBlur","otherHandlers","event","_otherHandlers$onBlur","_rootRef$current2","onBlur","call","defaultMuiPrevented","relatedTarget","type","blur","createHandleKeyDown","_otherHandlers$onKeyD","onKeyDown","key","escapeKeyDown","getOwnListboxHandlers","getListboxProps","externalProps","getCombinedRootProps","externalEventHandlers","role","useDebugValue","menuItems"],"sources":["C:/Users/prana/repos/personalgpt/.yarn/__virtual__/@mui-base-virtual-25998ae047/3/AppData/Local/Yarn/Berry/cache/@mui-base-npm-5.0.0-beta.24-ad99ed813c-10c0.zip/node_modules/@mui/base/useMenu/useMenu.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { menuReducer } from './menuReducer';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useList } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { useCompoundParent } from '../useCompound';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\n */\nexport function useMenu(parameters = {}) {\n  var _useId, _React$useContext;\n  const {\n    listboxRef: listboxRefProp,\n    onItemsChange,\n    id: idParam,\n    disabledItemsFocusable = true,\n    disableListWrap = false\n    // autoFocus = true,\n  } = parameters;\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, listboxRefProp);\n  const listboxId = (_useId = useId(idParam)) != null ? _useId : '';\n  const {\n    state: {\n      open\n    },\n    dispatch: menuDispatch,\n    triggerElement,\n    registerPopup\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\n\n  // store the initial open state to prevent focus stealing\n  // (the first menu items gets focued only when the menu is opened by the user)\n  const isInitiallyOpen = React.useRef(open);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isItemDisabled = React.useCallback(id => {\n    var _subitems$get2;\n    return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;\n  }, [subitems]);\n  const getItemAsString = React.useCallback(id => {\n    var _subitems$get3, _subitems$get4;\n    return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);\n  }, [subitems]);\n  const reducerActionContext = React.useMemo(() => ({\n    listboxRef: rootRef\n  }), [rootRef]);\n  const {\n    dispatch: listDispatch,\n    getRootProps: getListRootProps,\n    contextValue: listContextValue,\n    state: {\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null\n    }),\n    isItemDisabled,\n    items: subitemKeys,\n    getItemAsString,\n    rootRef: handleRef,\n    onItemsChange,\n    reducerActionContext,\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  });\n  useEnhancedEffect(() => {\n    registerPopup(listboxId);\n  }, [listboxId, registerPopup]);\n  React.useEffect(() => {\n    if (open && highlightedValue === subitemKeys[0] && !isInitiallyOpen.current) {\n      var _subitems$get5;\n      // TODO v6: focus only if autoFocus is true\n      (_subitems$get5 = subitems.get(subitemKeys[0])) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null || _subitems$get5.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _rootRef$current;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get6;\n      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null || _subitems$get6.focus();\n    }\n  }, [highlightedValue, subitems]);\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur, _rootRef$current2;\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {\n      return;\n    }\n    menuDispatch({\n      type: DropdownActionTypes.blur,\n      event\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      menuDispatch({\n        type: DropdownActionTypes.escapeKeyDown,\n        event\n      });\n    }\n  };\n  const getOwnListboxHandlers = (otherHandlers = {}) => ({\n    onBlur: createHandleBlur(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  });\n  const getListboxProps = (externalProps = {}) => {\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id: listboxId,\n      role: 'menu'\n    });\n  };\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch: listDispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open,\n    triggerElement\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}