{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useRerenderOnChange = void 0;\nvar useObservable_1 = require(\"./useObservable\");\nvar react_1 = require(\"react\");\n/**\n * Equivalent of https://docs.evt.land/api/react-hooks\n * */\nfunction useRerenderOnChange($) {\n  //NOTE: We use function in case the state is a function\n  var _a = __read((0, react_1.useState)(function () {\n      return $.current;\n    }), 2),\n    setCurrent = _a[1];\n  (0, useObservable_1.useObservable)(function (_a) {\n    var registerSubscription = _a.registerSubscription;\n    var subscription = $.subscribe(function (current) {\n      return setCurrent(function () {\n        return current;\n      });\n    });\n    registerSubscription(subscription);\n  }, [$]);\n}\nexports.useRerenderOnChange = useRerenderOnChange;","map":{"version":3,"names":["useObservable_1","require","react_1","useRerenderOnChange","$","_a","__read","useState","current","setCurrent","useObservable","registerSubscription","subscription","subscribe","exports"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-0.20.32-d63ff31bfd-10c0.zip\\node_modules\\powerhooks\\src\\tools\\StatefulObservable\\hooks\\useRerenderOnChange.ts"],"sourcesContent":["import { useObservable } from \"./useObservable\";\nimport { useState } from \"react\";\nimport type { StatefulObservable } from \"../StatefulObservable\";\n\n\n/**\n * Equivalent of https://docs.evt.land/api/react-hooks\n * */\nexport function useRerenderOnChange($: StatefulObservable<unknown>): void {\n\n    //NOTE: We use function in case the state is a function\n    const [, setCurrent] = useState(() => $.current);\n\n    useObservable(\n        ({ registerSubscription }) => {\n            const subscription = $.subscribe(current => setCurrent(() => current));\n            registerSubscription(subscription);\n        },\n        [$]\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAIA;;;AAGA,SAAgBE,mBAAmBA,CAACC,CAA8B;EAE9D;EACM,IAAAC,EAAA,GAAAC,MAAA,CAAiB,IAAAJ,OAAA,CAAAK,QAAQ,EAAC;MAAM,OAAAH,CAAC,CAACI,OAAO;IAAT,CAAS,CAAC;IAAvCC,UAAU,GAAAJ,EAAA,GAA6B;EAEhD,IAAAL,eAAA,CAAAU,aAAa,EACT,UAACL,EAAwB;QAAtBM,oBAAoB,GAAAN,EAAA,CAAAM,oBAAA;IACnB,IAAMC,YAAY,GAAGR,CAAC,CAACS,SAAS,CAAC,UAAAL,OAAO;MAAI,OAAAC,UAAU,CAAC;QAAM,OAAAD,OAAO;MAAP,CAAO,CAAC;IAAzB,CAAyB,CAAC;IACtEG,oBAAoB,CAACC,YAAY,CAAC;EACtC,CAAC,EACD,CAACR,CAAC,CAAC,CACN;AACL;AAZAU,OAAA,CAAAX,mBAAA,GAAAA,mBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}