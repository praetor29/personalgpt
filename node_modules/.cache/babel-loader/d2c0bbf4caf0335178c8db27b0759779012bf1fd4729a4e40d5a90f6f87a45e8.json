{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDomRect = exports.domRectKeys = void 0;\nvar react_1 = require(\"react\");\nvar evt_1 = require(\"evt\");\nvar ResizeObserver_1 = __importDefault(require(\"./ResizeObserver\"));\nvar memoizee_1 = __importDefault(require(\"memoizee\"));\nvar useConstCallback_1 = require(\"../useConstCallback\");\nvar hooks_1 = require(\"evt/hooks\");\nvar useStateRef_1 = require(\"../useStateRef\");\n//TODO: only re-renders when width or height change.\nexports.domRectKeys = [\"bottom\", \"right\", \"top\", \"left\", \"height\", \"width\"];\nfunction useDomRect(params) {\n  var _a;\n  var _b = function useClosure() {\n      var _a = __read((0, react_1.useState)(function () {\n          return (0, memoizee_1.default)(function (bottom, right, top, left, height, width) {\n            return {\n              bottom: bottom,\n              right: right,\n              top: top,\n              left: left,\n              height: height,\n              width: width\n            };\n          }, {\n            \"max\": 1\n          });\n        }), 1),\n        toMemoPartial = _a[0];\n      var _b = __read((0, react_1.useState)(function () {\n          return toMemoPartial(0, 0, 0, 0, 0, 0);\n        }), 2),\n        domRect = _b[0],\n        setDomRect = _b[1];\n      var updateDomRect = (0, useConstCallback_1.useConstCallback)(function (element) {\n        var _a = element.getBoundingClientRect(),\n          bottom = _a.bottom,\n          right = _a.right,\n          top = _a.top,\n          left = _a.left,\n          height = _a.height,\n          width = _a.width;\n        setDomRect(toMemoPartial(bottom, right, top, left, height, width));\n      });\n      return {\n        domRect: domRect,\n        updateDomRect: updateDomRect\n      };\n    }(),\n    domRect = _b.domRect,\n    updateDomRect = _b.updateDomRect;\n  var _c = __read((0, react_1.useState)(function () {\n      return evt_1.Evt.create();\n    }), 1),\n    evtForceUpdate = _c[0];\n  /** Shouldn't be necessary but hey... */\n  var checkIfDomRectUpdated = (0, useConstCallback_1.useConstCallback)(function () {\n    return evtForceUpdate.post();\n  });\n  var internallyCreatedRef = (0, useStateRef_1.useStateRef)(null);\n  var ref = (_a = params === null || params === void 0 ? void 0 : params.ref) !== null && _a !== void 0 ? _a : internallyCreatedRef;\n  (0, hooks_1.useEvt)(function (ctx) {\n    var element = ref.current;\n    if (element === null) {\n      return;\n    }\n    ctx.evtDoneOrAborted.setMaxHandlers(Infinity);\n    evt_1.Evt.merge([evt_1.Evt.from(ctx, ResizeObserver_1.default, element), evtForceUpdate.pipe(ctx)]).toStateful().attach(function () {\n      return function callee(previousCallCount) {\n        return __awaiter(this, void 0, void 0, function () {\n          var timer_1, pr, internalCtx;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                pr = new Promise(function (resolve) {\n                  return timer_1 = setTimeout(resolve, 50);\n                });\n                internalCtx = evt_1.Evt.newCtx();\n                ctx.evtDoneOrAborted.attachOnce(internalCtx, function () {\n                  return clearTimeout(timer_1);\n                });\n                return [4 /*yield*/, pr];\n              case 1:\n                _a.sent();\n                internalCtx.done();\n                updateDomRect(element);\n                if (previousCallCount < 6) {\n                  callee(previousCallCount + 1);\n                  return [2 /*return*/];\n                }\n\n                return [2 /*return*/];\n            }\n          });\n        });\n      }(0);\n    });\n  }, [ref.current]);\n  (0, react_1.useEffect)(function () {\n    var element = ref.current;\n    if (element === null) {\n      return;\n    }\n    updateDomRect(element);\n  });\n  return {\n    ref: ref,\n    domRect: domRect,\n    checkIfDomRectUpdated: checkIfDomRectUpdated\n  };\n}\nexports.useDomRect = useDomRect;","map":{"version":3,"names":["react_1","require","evt_1","ResizeObserver_1","__importDefault","memoizee_1","useConstCallback_1","hooks_1","useStateRef_1","exports","domRectKeys","useDomRect","params","_b","useClosure","_a","__read","useState","default","bottom","right","top","left","height","width","toMemoPartial","domRect","setDomRect","updateDomRect","useConstCallback","element","getBoundingClientRect","_c","Evt","create","evtForceUpdate","checkIfDomRectUpdated","post","internallyCreatedRef","useStateRef","ref","useEvt","ctx","current","evtDoneOrAborted","setMaxHandlers","Infinity","merge","from","pipe","toStateful","attach","callee","previousCallCount","pr","Promise","resolve","timer_1","setTimeout","internalCtx","newCtx","attachOnce","clearTimeout","sent","done","useEffect"],"sources":["C:\\Users\\prana\\AppData\\Local\\Yarn\\Berry\\cache\\powerhooks-npm-0.20.32-d63ff31bfd-10c0.zip\\node_modules\\powerhooks\\src\\tools\\useDomRect.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Evt } from \"evt\";\nimport ResizeObserver from \"./ResizeObserver\";\nimport memoize from \"memoizee\";\nimport { useConstCallback } from \"../useConstCallback\";\nimport { useEvt } from \"evt/hooks\";\nimport { useStateRef } from \"../useStateRef\";\n\n//TODO: only re-renders when width or height change.\n\nexport const domRectKeys = [\"bottom\", \"right\", \"top\", \"left\", \"height\", \"width\"] as const;\n\nexport type PartialDomRect = Pick<DOMRectReadOnly, typeof domRectKeys[number]>;\n\n// https://gist.github.com/morajabi/523d7a642d8c0a2f71fcfa0d8b3d2846\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\nexport function useDomRect<T extends HTMLElement = any>(): { ref: React.RefObject<T>; domRect: PartialDomRect; checkIfDomRectUpdated: () => void; }\nexport function useDomRect<T extends HTMLElement = any>(params: { ref: React.RefObject<T>; }): { domRect: PartialDomRect; checkIfDomRectUpdated: () => void; };\nexport function useDomRect<T extends HTMLElement = any>(params?: { ref: React.RefObject<T>; }): { ref: React.RefObject<T>; domRect: PartialDomRect; checkIfDomRectUpdated: () => void; } {\n\n    const { domRect, updateDomRect } = (function useClosure() {\n\n        const [toMemoPartial] = useState(\n            () => memoize(\n                (\n                    bottom: number,\n                    right: number,\n                    top: number,\n                    left: number,\n                    height: number,\n                    width: number\n                ): PartialDomRect => ({\n                    bottom, right, top,\n                    left, height, width\n                }),\n                { \"max\": 1 }\n            )\n        );\n\n        const [domRect, setDomRect] = useState<PartialDomRect>(() => toMemoPartial(0, 0, 0, 0, 0, 0));\n\n        const updateDomRect = useConstCallback((element: HTMLElement) => {\n\n            const {\n                bottom, right, top,\n                left, height, width\n            } = element.getBoundingClientRect();\n\n            setDomRect(\n                toMemoPartial(\n                    bottom, right, top,\n                    left, height, width\n                )\n            );\n\n        });\n\n\n        return { domRect, updateDomRect };\n\n\n    })();\n\n    const [evtForceUpdate] = useState(() => Evt.create());\n\n    /** Shouldn't be necessary but hey... */\n    const checkIfDomRectUpdated = useConstCallback(\n        () => evtForceUpdate.post()\n    );\n\n    const internallyCreatedRef = useStateRef<T>(null);\n\n    const ref = params?.ref ?? internallyCreatedRef;\n\n    useEvt(\n        ctx => {\n\n            const element = ref.current;\n\n            if (element === null) {\n                return;\n            }\n\n            ctx.evtDoneOrAborted.setMaxHandlers(Infinity);\n\n            Evt.merge([\n                Evt.from(ctx, ResizeObserver, element),\n                evtForceUpdate.pipe(ctx)\n            ])\n                .toStateful()\n                .attach(() => (async function callee(previousCallCount: number) {\n\n                    {\n\n                        let timer: ReturnType<typeof setTimeout>;\n\n                        const pr = new Promise(resolve => timer = setTimeout(resolve, 50));\n\n                        const internalCtx = Evt.newCtx();\n\n                        ctx.evtDoneOrAborted.attachOnce(internalCtx, () => clearTimeout(timer));\n\n                        await pr;\n\n                        internalCtx.done();\n\n                    }\n\n                    updateDomRect(element);\n\n                    if (previousCallCount < 6) {\n                        callee(previousCallCount + 1);\n                        return;\n                    }\n\n                })(0));\n\n        },\n        [ref.current]\n    );\n\n    useEffect(\n        () => {\n\n            const element = ref.current;\n\n            if (element === null) {\n                return;\n            }\n\n            updateDomRect(element);\n\n        }\n    );\n\n\n    return { ref, domRect, checkIfDomRectUpdated };\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}